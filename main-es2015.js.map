{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/categorias/detalle-categoria/detalle-categoria.component.html","./src/app/categorias/formularios/form-categorias.component.html","./src/app/categorias/listado-regiones/categorias.component.html","./src/app/clientes/detalle-cliente/detalle-cliente.component.html","./src/app/clientes/formularios/form-cliente.component.html","./src/app/clientes/lista-clientes/clientes.component.html","./src/app/facturas/buscar-factura-numero/factura-buscar.component.html","./src/app/facturas/buscar-por-rango-fecha/filtrar-facturas.component.html","./src/app/facturas/cliente-facturar/cliente-facturar.component.html","./src/app/facturas/detalle-factura/detalle-factura.component.html","./src/app/facturas/facturacion/facturas.component.html","./src/app/facturas/lista-facturas/lista-facturas.component.html","./src/app/footer/footer.component.html","./src/app/generales/loading/loading.component.html","./src/app/generales/pagina404/pagina404.component.html","./src/app/generales/paginador/paginador.component.html","./src/app/header/header.component.html","./src/app/productos/detalle-producto/detalle-producto.component.html","./src/app/productos/formularios/form-producto.component.html","./src/app/productos/lista-productos/productos.component.html","./src/app/productos/producto-buscar/producto-buscar.component.html","./src/app/regiones/detalle-region/detalle-region.component.html","./src/app/regiones/formularios/form-regiones.component.html","./src/app/regiones/lista-regiones/regiones.component.html","./src/app/servicios/detalle-servicio/detalle-servicio.component.html","./src/app/servicios/detalle-servicio/servicio-buscar/servicio-buscar.component.html","./src/app/servicios/formularios/form-servicio.component.html","./src/app/servicios/lista-servicios/servicios.component.html","./src/app/sucursales/detalle-sucursal/detalle-sucursal.component.html","./src/app/sucursales/formularios/form-sucursales.component.html","./src/app/sucursales/lista-sucursales/lista-sucursales.component.html","./src/app/users/detalle-user/detalle-user.component.html","./src/app/users/formularios/form-user.component.html","./src/app/users/lista-users/users.component.html","./src/app/users/login/login.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/categorias/detalle-categoria/detalle-categoria.component.ts","./src/app/categorias/formularios/form-categorias.component.ts","./src/app/categorias/interfaces/categoria.ts","./src/app/categorias/listado-regiones/categorias.component.ts","./src/app/categorias/services/categoria.service.ts","./src/app/categorias/services/modal-categoria.service.ts","./src/app/clientes/detalle-cliente/detalle-cliente.component.ts","./src/app/clientes/formularios/form-cliente.component.ts","./src/app/clientes/interfaces/cliente.ts","./src/app/clientes/lista-clientes/clientes.component.ts","./src/app/clientes/services/cliente.service.ts","./src/app/clientes/services/modal-cliente.service.ts","./src/app/facturas/buscar-factura-numero/factura-buscar.component.ts","./src/app/facturas/buscar-por-rango-fecha/filtrar-facturas.component.ts","./src/app/facturas/cliente-facturar/cliente-facturar.component.ts","./src/app/facturas/detalle-factura/detalle-factura.component.ts","./src/app/facturas/facturacion/facturas.component.ts","./src/app/facturas/interfaces/factura.ts","./src/app/facturas/interfaces/item-factura.ts","./src/app/facturas/lista-facturas/lista-facturas.component.ts","./src/app/facturas/services/factura.service.ts","./src/app/facturas/services/modal-factura-buscar.service.ts","./src/app/facturas/services/modalFactura.service.ts","./src/app/footer/footer.component.ts","./src/app/generales/css/modal.css","./src/app/generales/loading/loading.component.ts","./src/app/generales/pagina404/pagina404.component.css","./src/app/generales/pagina404/pagina404.component.ts","./src/app/generales/paginador/paginador.component.ts","./src/app/generales/services/funciones.service.ts","./src/app/generales/services/loading.service.ts","./src/app/header/header.component.ts","./src/app/productos/detalle-producto/detalle-producto.component.ts","./src/app/productos/formularios/form-producto.component.ts","./src/app/productos/interfaces/producto.ts","./src/app/productos/lista-productos/productos.component.ts","./src/app/productos/producto-buscar/modal-producto-buscar.service.ts","./src/app/productos/producto-buscar/producto-buscar.component.ts","./src/app/productos/services/modal-producto.service.ts","./src/app/productos/services/producto.service.ts","./src/app/regiones/detalle-region/detalle-region.component.ts","./src/app/regiones/formularios/form-regiones.component.ts","./src/app/regiones/interfaces/region.ts","./src/app/regiones/lista-regiones/regiones.component.ts","./src/app/regiones/services/modal-region.service.ts","./src/app/regiones/services/region.service.ts","./src/app/servicios/detalle-servicio/detalle-servicio.component.ts","./src/app/servicios/detalle-servicio/servicio-buscar/servicio-buscar.component.css","./src/app/servicios/detalle-servicio/servicio-buscar/servicio-buscar.component.ts","./src/app/servicios/formularios/form-servicio.component.ts","./src/app/servicios/interfaces/servicio.ts","./src/app/servicios/lista-servicios/servicios.component.ts","./src/app/servicios/services/modal-servicio-buscar.service.ts","./src/app/servicios/services/modal-servicio.service.ts","./src/app/servicios/services/servicio.service.ts","./src/app/sucursales/detalle-sucursal/detalle-sucursal.component.ts","./src/app/sucursales/formularios/form-sucursales.component.ts","./src/app/sucursales/interfaces/sucursal.ts","./src/app/sucursales/lista-sucursales/lista-sucursales.component.ts","./src/app/sucursales/services/modal-sucursal.service.ts","./src/app/sucursales/services/sucursal.service.ts","./src/app/users/detalle-user/detalle-user.component.ts","./src/app/users/formularios/form-user.component.ts","./src/app/users/guards/auth.guard.ts","./src/app/users/guards/role.guard.ts","./src/app/users/interceptors/auth.interceptor.ts","./src/app/users/interceptors/token.interceptor.ts","./src/app/users/interfaces/user.ts","./src/app/users/lista-users/users.component.ts","./src/app/users/login/login.component.ts","./src/app/users/services/auth.service.ts","./src/app/users/services/modal-user.service.ts","./src/app/users/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\r\\n<!-- Toolbar -->\\r\\n<div class=\\\"container my-3 wrap \\\">\\r\\n\\r\\n <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalCategoriaService.modal\\\">\\r\\n  <div  style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\">{{titulo}}</h5>\\r\\n          <button (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <ul *ngIf=\\\"categoria\\\"  class=\\\"list-group text-dark mb-3\\\">\\r\\n                  <li class=\\\"list-group-item active\\\">{{categoria.codigo}}</li>\\r\\n                  <li class=\\\"list-group-item \\\">{{categoria.nombre}}</li>\\r\\n                  <li class=\\\"list-group-item\\\">{{categoria.descripcion}}</li>\\r\\n                  <li class=\\\"list-group-item\\\">{{categoria.createAt | date:\\\"fullDate\\\"}}</li>\\r\\n\\r\\n                </ul>\\r\\n\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<ul class=\\\"alert alert-danger\\\" *ngIf=\\\"errores?.length>0\\\" >\\r\\n    <li  *ngFor=\\\"let err of errores\\\" >\\r\\n      {{err}}\\r\\n    </li>\\r\\n</ul>\\r\\n<div class=\\\"card bg-dark text-white\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      {{titulo}}\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form #categoriaForm=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n              <label for=\\\"codigo\\\" class=\\\"col-form-label col-sm-2\\\">Codigo </label>\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"categoria.codigo\\\"\\r\\n                        name=\\\"codigo\\\"\\r\\n                        minlength=\\\"4\\\"\\r\\n                    maxlength=\\\"4\\\"\\r\\n                    #codigo=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n                    <div *ngIf=\\\"codigo.invalid && (codigo.dirty || codigo.touched)\\\"\\r\\n                    class=\\\"alert alert-danger\\\">\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"codigo?.errors?.required\\\" >\\r\\n                          Codigo es Requerido\\r\\n                        </div>\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"codigo?.errors?.minlength\\\" >\\r\\n                          Codigo debe contener minimo 4 caracteres\\r\\n                        </div>\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"codigo?.errors?.maxlength\\\" >\\r\\n                          Codigo debe contener maximo 4 caracteres\\r\\n                        </div>\\r\\n                    </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"nombre\\\" class=\\\"col-form-label col-sm-2\\\">Nombre </label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"categoria.nombre\\\"\\r\\n                    name=\\\"nombre\\\"\\r\\n                    minlength=\\\"3\\\"\\r\\n                maxlength=\\\"50\\\"\\r\\n                #nombre=\\\"ngModel\\\"\\r\\n                requiered>\\r\\n                <div *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\"\\r\\n                class=\\\"alert alert-danger\\\">\\r\\n                    <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.required\\\" >\\r\\n                      Nombre es Requerido\\r\\n                    </div>\\r\\n                    <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.minlength\\\" >\\r\\n                      Nombre debe contener minimo 3 caracteres\\r\\n                    </div>\\r\\n                    <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.maxlength\\\" >\\r\\n                      Nombre debe contener maximo 50 caracteres\\r\\n                    </div>\\r\\n                </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"descripcion\\\" class=\\\"col-form-label col-sm-2\\\">Descripcion </label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <textarea class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"categoria.descripcion\\\"\\r\\n                      name=\\\"descripcion\\\"\\r\\n                      >\\r\\n            </textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <button class=\\\"btn btn-primary\\\"\\r\\n                        role=\\\"button\\\"\\r\\n                        (click)=\\\"create()\\\"\\r\\n                        *ngIf=\\\"!categoria.id else elseBlock\\\"\\r\\n                        [disabled]=\\\"!categoriaForm.form.valid\\\">\\r\\n                  Crear\\r\\n                </button>\\r\\n                <ng-template #elseBlock>\\r\\n                    <button class=\\\"btn btn-primary\\\"\\r\\n                        role=\\\"button\\\"\\r\\n                        (click)=\\\"update()\\\"\\r\\n                        [disabled]=\\\"!categoriaForm.form.valid\\\">\\r\\n                  Actualizar\\r\\n                </button>\\r\\n                </ng-template>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-detalle-categoria\\r\\n      *ngIf=\\\"categoriaSelecionado\\\"\\r\\n      [categoria]=\\\"categoriaSelecionado\\\"></app-detalle-categoria>\\r\\n<div class=\\\"card bg-light mb-3\\\">\\r\\n  <div class=\\\"card-header\\\"><h3><strong>Categorias</strong></h3></div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado de Categorias</h4>\\r\\n    <div class=\\\"my-2 text-left\\\">\\r\\n        <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                class=\\\"btn btn-rounded btn-outline-primary\\\"\\r\\n                type=\\\"button\\\"\\r\\n                 [routerLink]=\\\"['/categorias/form']\\\"\\r\\n        >\\r\\n          Crear Categorias\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"alert alert-info\\\"\\r\\n        *ngIf=\\\"categorias?.length == 0\\\" >\\r\\n        <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n    </div>\\r\\n    <table class='table table-bordered table-striped'\\r\\n                    *ngIf=\\\"categorias?.length>0\\\" >\\r\\n      <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Codigo</th>\\r\\n          <th>Nombre</th>\\r\\n          <th>Descripcion</th>\\r\\n          <th>Fecha</th>\\r\\n          <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Editar</th>\\r\\n          <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let categoria of categorias\\\" >\\r\\n          <td (click)=\\\"abrirModal(categoria)\\\"\\r\\n             style=\\\"width: 64px; cursor: pointer;\\\" >\\r\\n             {{categoria.id }}\\r\\n          </td>\\r\\n          <td>{{categoria.codigo }}</td>\\r\\n          <td>{{categoria.nombre | uppercase}}</td>\\r\\n            <td>{{categoria.descripcion}}</td>\\r\\n                    <td>{{categoria.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n                    <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                        <button type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-outline-success\\\"\\r\\n                            [routerLink]=\\\"['/categorias/form', categoria.id]\\\"\\r\\n                            >\\r\\n                          Editar\\r\\n                        </button>\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                          <button type=\\\"button\\\"\\r\\n                              class=\\\"btn btn-outline-danger\\\"\\r\\n                              (click)=\\\"delete(categoria)\\\"\\r\\n                              >\\r\\n                            Eliminar\\r\\n                          </button>\\r\\n                      </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n          [paginador]=\\\"paginador\\\"\\r\\n          [link]=\\\"link\\\">\\r\\n    </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<div class=\\\"container\\\"  *ngIf=\\\"cliente\\\">\\r\\n    <a [routerLink]=\\\"['/clientes']\\\"\\r\\n              class=\\\"btn btn-outline-warning btn-xs my-2\\\">&laquo;\\r\\n              Regresar\\r\\n    </a>\\r\\n    <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-outline-secondary btn-xs my-2 mx-3\\\"\\r\\n            [routerLink]=\\\"['/clientes/form', cliente.id]\\\"\\r\\n    >\\r\\n      Editar\\r\\n    </button>\\r\\n    <button type=\\\"button\\\"\\r\\n              class=\\\"btn btn-outline-success btn-xs\\\"\\r\\n              [routerLink]=\\\"['/facturas/form', cliente.id]\\\"\\r\\n              >\\r\\n              Crear Factura\\r\\n      </button>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm\\\">\\r\\n      <ul *ngIf=\\\"cliente\\\"  class=\\\"list-group text-dark mb-3\\\">\\r\\n        <li class=\\\"list-group-item bg-dark text-white-50\\\">\\r\\n          <h4>\\r\\n            <strong>\\r\\n              Detalles Cliente.\\r\\n            </strong>\\r\\n          </h4>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <strong>Nombre: </strong>\\r\\n          {{cliente.nombre | uppercase}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <strong>Apellido: </strong>\\r\\n          {{cliente.apellido | uppercase}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <strong>Barrio: </strong>\\r\\n          {{cliente.region.nombre | uppercase}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"cliente.direccion\\\"\\r\\n          class=\\\"list-group-item\\\">\\r\\n          <strong>Direccion: </strong>\\r\\n          {{cliente.direccion | uppercase}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"cliente.celular1\\\"\\r\\n        class=\\\"list-group-item\\\">\\r\\n        <strong>Celular 1: </strong>\\r\\n        {{cliente.celular1}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"cliente.celular2\\\"\\r\\n        class=\\\"list-group-item\\\">\\r\\n        <strong>Celular 2: </strong>\\r\\n        {{cliente.celular2}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"cliente.telefono\\\"\\r\\n          class=\\\"list-group-item\\\">\\r\\n          <strong>Telefono: </strong>\\r\\n          {{cliente.telefono}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"cliente.email\\\"\\r\\n          class=\\\"list-group-item\\\">\\r\\n          <strong>Email: </strong>\\r\\n          {{cliente.email | uppercase}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <strong>Fec. Nacimiento: </strong>\\r\\n          {{cliente.fecha | date:\\\"fullDate\\\"}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <strong>Fec. Creacion: </strong>\\r\\n          {{cliente.createAt | date:\\\"fullDate\\\"}}\\r\\n        </li>\\r\\n      </ul>\\r\\n        <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"custom-file\\\">\\r\\n              <input (change)=\\\"seleccionarFoto($event)\\\"\\r\\n                    type=\\\"file\\\" class=\\\"custom-file-input\\\"\\r\\n                    style=\\\"cursor: pointer;\\\"\\r\\n                    id=\\\"inputGroupFile04\\\" aria-describedby=\\\"inputGroupFileAddon04\\\">\\r\\n              <label style=\\\"cursor: pointer;\\\"\\r\\n                    class=\\\"custom-file-label\\\"\\r\\n                    for=\\\"inputGroupFile04\\\">{{rutaFoto}}</label>\\r\\n            </div>\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button (click)=\\\"subirFoto()\\\"\\r\\n                [disabled]=\\\"!fotoSelecionada\\\"\\r\\n                class=\\\"btn btn-outline-secondary\\\"\\r\\n                type=\\\"button\\\" id=\\\"inputGroupFileAddon04\\\">Subir</button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"progreso>0 \\\"  class=\\\"progress my-2\\\" style=\\\"height: 40px;\\\">\\r\\n              <div class=\\\"progress-bar progress-bar-striped\\\"\\r\\n                  role=\\\"progressbar\\\"\\r\\n                  [ngStyle]= \\\"{width: progreso+'%'}\\\"\\r\\n                  attr.aria-valuenow=\\\"{{progreso}}\\\" aria-valuemin=\\\"0\\\"\\r\\n                  aria-valuemax=\\\"100\\\">\\r\\n                  {{progreso}}%\\r\\n              </div>\\r\\n          </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm\\\">\\r\\n      <img *ngIf=\\\"cliente?.foto\\\"  src=\\\"http://localhost:8080/api/uploads/imgcliente/{{cliente.foto}}\\\"\\r\\n          alt=\\\"{{cliente.foto}}\\\" class=\\\"img-thumbnail rounded\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" >\\r\\n      <button type=\\\"button\\\"\\r\\n              class=\\\"btn btn-outline-success btn-xs\\\"\\r\\n              [routerLink]=\\\"['/facturas/form', cliente.id]\\\"\\r\\n              >\\r\\n              Crear Factura\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"alert alert-info my-4\\\" *ngIf=\\\"cliente.facturas.length == 0\\\">\\r\\n        No hay Facturas asignadas para el Cliente:\\r\\n        <strong> {{cliente.nombre}} {{cliente.apellido}} </strong>\\r\\n      </div>\\r\\n\\r\\n      <table class=\\\"table table-bordered text-center table-striped my-4\\\"\\r\\n                    *ngIf=\\\"cliente.facturas.length > 0\\\">\\r\\n        <thead class=\\\"bg-dark  text-white\\\">\\r\\n          <tr>\\r\\n            <th>Folio</th>\\r\\n            <th>Descripción</th>\\r\\n            <th>Fecha</th>\\r\\n            <th >Total</th>\\r\\n            <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                >Ganancia</th>\\r\\n            <th >Detalle</th>\\r\\n            <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">eliminar</th> -->\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let factura of cliente.facturas\\\">\\r\\n            <td>{{factura.id}}</td>\\r\\n            <td>{{factura.descripcion | uppercase}}</td>\\r\\n            <td>{{factura.createAt | date:\\\"fullDate\\\"}}</td>\\r\\n            <td class=\\\"text-right\\\">{{formatNumber(factura.total)}}</td>\\r\\n            <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                class=\\\"text-right\\\">{{formatNumber(factura.totalGanancia)}}</td>\\r\\n            <td class=\\\"text-center\\\"><button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\"\\r\\n              [routerLink]=\\\"['/facturas', factura.id]\\\">ver</button>\\r\\n            </td>\\r\\n\\r\\n            <!-- <td>\\r\\n              <button (click)=\\\"delete(factura)\\\"\\r\\n                    class=\\\"btn btn-danger btn-sm\\\" type=\\\"button\\\" >\\r\\n              eliminar\\r\\n              </button>\\r\\n            </td> -->\\r\\n\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <a [routerLink]=\\\"['/clientes']\\\"\\r\\n            class=\\\"btn btn-outline-warning btn-xs my-3\\\">\\r\\n            &laquo; Regresar</a>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<mat-card class=\\\"bg-light\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <strong>\\r\\n          {{titulo}}\\r\\n        </strong>\\r\\n      </mat-card-title>\\r\\n      <mat-icon matSuffix>perm_identity</mat-icon>\\r\\n    </mat-card-header>\\r\\n<mat-card-content class=\\\"bg-light\\\">\\r\\n  <mat-card-subtitle>\\r\\n    <span class=\\\"my-1\\\">\\r\\n      Los campos con (*) son requeridos.\\r\\n    </span>\\r\\n    <mat-card *ngIf=\\\"errores?.length>0\\\">\\r\\n      <mat-card-content>\\r\\n        <ul class=\\\"alert alert-danger\\\"  >\\r\\n          <li  *ngFor=\\\"let err of errores\\\" >\\r\\n            {{err}}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </mat-card-subtitle>\\r\\n  <form [formGroup]=\\\"formularioCreado\\\" >\\r\\n    <div class=\\\"row\\\">\\r\\n      <!-- Columna izquierda -->\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\">\\r\\n              <mat-label for=\\\"nombre\\\">\\r\\n                Nombre\\r\\n              </mat-label>\\r\\n              <input style=\\\"text-transform: uppercase;\\\"\\r\\n                  matInput required\\r\\n                  formControlName=\\\"nombre\\\"\\r\\n                  placeholder=\\\"Ej: juan pepito \\\">\\r\\n              <mat-icon matSuffix>create</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['nombre'].invalid &&\\r\\n                                (formularioCreado.controls['nombre'].dirty\\r\\n                                || formularioCreado.controls['nombre'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['nombre'].errors.required\\\"\\r\\n                               role=\\\"alert\\\">\\r\\n                          Nombre es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['nombre'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 3 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['nombre'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 20 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"documento\\\">\\r\\n                Documento de identidad\\r\\n              </mat-label>\\r\\n              <input  matInput required\\r\\n                  formControlName=\\\"documento\\\"\\r\\n                  placeholder=\\\"ej: 1234569870\\\">\\r\\n             <mat-icon matSuffix>perm_identity</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['documento'].invalid &&\\r\\n                                (formularioCreado.controls['documento'].dirty\\r\\n                                || formularioCreado.controls['documento'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['documento'].errors.required\\\"\\r\\n                               role=\\\"alert\\\">\\r\\n                               Documento es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['documento'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 8 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['documento'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 10 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"celular1\\\">\\r\\n                Celular Principal\\r\\n              </mat-label>\\r\\n              <input matInput required\\r\\n                  formControlName=\\\"celular1\\\"\\r\\n                  placeholder=\\\"Ej: 321123456\\\">\\r\\n              <mat-icon matSuffix> stay_primary_portrait</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['celular1'].invalid &&\\r\\n                                (formularioCreado.controls['celular1'].dirty\\r\\n                                || formularioCreado.controls['celular1'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['celular1'].errors.required\\\"\\r\\n                               role=\\\"alert\\\">\\r\\n                               Celular Principal es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['celular1'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 10 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['celular1'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 10 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"telefono\\\">\\r\\n                Telefono Fijo\\r\\n              </mat-label>\\r\\n              <input\\r\\n                  matInput\\r\\n                  formControlName=\\\"telefono\\\"\\r\\n                  placeholder=\\\"ej: 5777777\\\">\\r\\n              <mat-icon matSuffix>phone</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['telefono'].invalid &&\\r\\n                                (formularioCreado.controls['telefono'].dirty\\r\\n                                || formularioCreado.controls['telefono'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['telefono'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 7 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['telefono'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 7 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\" >\\r\\n              <mat-label for=\\\"fecha\\\">\\r\\n                Fecha Nacimiento\\r\\n              </mat-label>\\r\\n            <input matInput required\\r\\n                [matDatepicker]=\\\"fecha\\\"\\r\\n                [min]=\\\"minDate\\\"\\r\\n                [max]=\\\"maxDate\\\"\\r\\n                formControlName=\\\"fecha\\\"\\r\\n                placeholder=\\\"ej: 18/2/2050\\\"\\r\\n               >\\r\\n               <mat-datepicker-toggle\\r\\n                matSuffix [for]=\\\"fecha\\\">\\r\\n                </mat-datepicker-toggle>\\r\\n                <mat-datepicker  #fecha></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n                  <mat-error *ngIf=\\\"formularioCreado.controls['fecha'].invalid &&\\r\\n                              (formularioCreado.controls['fecha'].dirty\\r\\n                              || formularioCreado.controls['fecha'].touched )\\\">\\r\\n                    <mat-error *ngIf=\\\"formularioCreado.controls['fecha'].errors.required\\\"\\r\\n                        role=\\\"alert\\\">\\r\\n                        Fch. Nacimiento es requerida\\r\\n                    </mat-error>\\r\\n                  </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- columna derecha -->\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"apellido\\\">\\r\\n                Apellido\\r\\n              </mat-label>\\r\\n              <input style=\\\"text-transform: uppercase;\\\"\\r\\n                  matInput required\\r\\n                  formControlName=\\\"apellido\\\"\\r\\n                  placeholder=\\\"ej: doe smitch\\\">\\r\\n              <mat-icon matSuffix>create</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['apellido'].invalid &&\\r\\n                                (formularioCreado.controls['apellido'].dirty\\r\\n                                || formularioCreado.controls['apellido'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['apellido'].errors.required\\\"\\r\\n                               role=\\\"alert\\\">\\r\\n                               Apellido es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['apellido'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 3 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['apellido'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 20 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"email\\\">\\r\\n                Email\\r\\n              </mat-label>\\r\\n              <input style=\\\"text-transform: uppercase;\\\"\\r\\n                  matInput required\\r\\n                  formControlName=\\\"email\\\"\\r\\n                  placeholder=\\\"ej: sucorreo@gmail.com \\\">\\r\\n              <mat-icon matSuffix> email</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['email'].invalid &&\\r\\n                                (formularioCreado.controls['email'].dirty\\r\\n                                || formularioCreado.controls['email'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['email'].errors.required\\\"\\r\\n                               role=\\\"alert\\\">\\r\\n                               Email es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['email'].errors.email\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                               Formato de 'Email' no valido\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"celular2\\\">\\r\\n                Celular Secundario\\r\\n              </mat-label>\\r\\n              <input matInput\\r\\n                  formControlName=\\\"celular2\\\"\\r\\n                  placeholder=\\\"Digete celular Secundario\\\">\\r\\n              <mat-icon matSuffix> stay_primary_portrait</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['celular2'].invalid &&\\r\\n                                (formularioCreado.controls['celular2'].dirty\\r\\n                                || formularioCreado.controls['celular2'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['celular2'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 10 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['celular2'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 10 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"direccion\\\">\\r\\n                Direccion\\r\\n              </mat-label>\\r\\n              <input style=\\\"text-transform: uppercase;\\\"\\r\\n                  matInput required\\r\\n                  formControlName=\\\"direccion\\\"\\r\\n                  placeholder=\\\"ej: calle-4 av-102 # 1-02\\\">\\r\\n                  <mat-icon matSuffix>home</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['direccion'].invalid &&\\r\\n                                (formularioCreado.controls['direccion'].dirty\\r\\n                                || formularioCreado.controls['direccion'].touched )\\\">\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['direccion'].errors.required\\\"\\r\\n                               role=\\\"alert\\\">\\r\\n                               Direccion es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['direccion'].errors.minlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Minimo 3 caracteres*\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"formularioCreado.controls['direccion'].errors.maxlength\\\"\\r\\n                               role=\\\"alert\\\" >\\r\\n                             *Maximo 50 caracteres*\\r\\n                        </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <mat-form-field appearance=\\\"fill\\\" style=\\\"width: 100%;\\\"  >\\r\\n              <mat-label for=\\\"direccion\\\">\\r\\n                Barrio\\r\\n              </mat-label>\\r\\n            <mat-select required\\r\\n                      [compareWith]=\\\"compararRegion\\\"\\r\\n                      formControlName=\\\"region\\\"\\r\\n                      name=\\\"region\\\"\\r\\n                      style=\\\"width: 330px;\\\">\\r\\n                      <mat-option\\r\\n                        *ngFor=\\\"let region of regiones\\\"\\r\\n                        [value]=\\\"region\\\"\\r\\n                      >\\r\\n                        {{region.nombre | uppercase}}\\r\\n                      </mat-option >\\r\\n            </mat-select>\\r\\n            <mat-icon matSuffix> location_on</mat-icon>\\r\\n          </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"formularioCreado.controls['region'].invalid &&\\r\\n                              (formularioCreado.controls['region'].dirty\\r\\n                              || formularioCreado.controls['region'].touched )\\\">\\r\\n                    <mat-error *ngIf=\\\"formularioCreado.controls['region'].errors.required\\\"\\r\\n                        role=\\\"alert\\\">\\r\\n                        Barrio es requerido\\r\\n                    </mat-error>\\r\\n            </mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-card-footer class=\\\"bg-light ml-4\\\">\\r\\n      <button class=\\\"btn btn-rounded btn-primary btn-xs my-3  \\\"\\r\\n                role=\\\"button\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!formularioCreado.valid\\\"\\r\\n                *ngIf=\\\"!cliente.id else elseBlock\\\">\\r\\n          Crear\\r\\n        </button>\\r\\n        <ng-template #elseBlock>\\r\\n            <button class=\\\"btn btn-rounded btn-success btn-xs my-3 \\\"\\r\\n                role=\\\"button\\\"\\r\\n                [disabled]=\\\"!formularioCreado.valid\\\"\\r\\n                (click)=\\\"update()\\\">\\r\\n          Actualizar\\r\\n        </button>\\r\\n        </ng-template>\\r\\n    </mat-card-footer>\\r\\n  </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<app-cliente-facturar></app-cliente-facturar>\\r\\n<div class=\\\"card  mb-3\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\"><h3><strong>{{titulo}}</strong></h3></div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado de Clientes</h4>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <div class=\\\"my-2 text-left\\\">\\r\\n          <button class=\\\"btn btn-rounded btn-outline-primary btn-xs\\\"\\r\\n          type=\\\"button\\\"\\r\\n          (click)=\\\"abrirModal()\\\"\\r\\n          >\\r\\n            Buscar Cliente\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <div class=\\\"my-2 text-left\\\">\\r\\n          <button\\r\\n                  class=\\\"btn btn-rounded btn-outline-info btn-xs\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                   [routerLink]=\\\"['/clientes/form']\\\"\\r\\n          >\\r\\n            Crear Cliente\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-info\\\"\\r\\n        *ngIf=\\\"clientes?.length == 0\\\" >\\r\\n        <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n    </div>\\r\\n    <table class='table table-bordered table-striped'\\r\\n                  *ngIf=\\\"clientes?.length>0\\\" >\\r\\n      <thead class=\\\"bg-dark text-center text-muted\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Documento</th>\\r\\n          <th>Nombre</th>\\r\\n          <th>Apellido</th>\\r\\n          <th>Celular</th>\\r\\n          <th>Facturar</th>\\r\\n          <th>Editar</th>\\r\\n          <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let cliente of clientes\\\" >\\r\\n          <td>\\r\\n              <img *ngIf=\\\"cliente?.foto\\\"  [routerLink]=\\\"['/clientes/details', cliente.id]\\\"\\r\\n                  src=\\\"http://localhost:8080/api/uploads/imgcliente/{{cliente.foto}}\\\"\\r\\n              alt=\\\"{{cliente.foto}}\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n              style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n              <img *ngIf=\\\"!cliente?.foto\\\"  [routerLink]=\\\"['/clientes/details', cliente.id]\\\"\\r\\n                  src=\\\"http://localhost:8080/images/no-usuario.png\\\"\\r\\n              alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n              style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n          </td>\\r\\n            <td>{{cliente.documento}}</td>\\r\\n              <td>{{cliente.nombre | uppercase}}</td>\\r\\n                <td>{{cliente.apellido | uppercase}}</td>\\r\\n                <td>{{cliente.celular1 }}</td>\\r\\n                  <td>\\r\\n                    <button type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-rounded btn-outline-success btn-xs\\\"\\r\\n                            [routerLink]=\\\"['/facturas/form', cliente.id]\\\"\\r\\n                            >\\r\\n                    Crear Factura\\r\\n                  </button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n                        [routerLink]=\\\"['/clientes/form', cliente.id]\\\"\\r\\n                        >\\r\\n                      Editar\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <!-- <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                      <button type=\\\"button\\\"\\r\\n                          class=\\\"btn btn-outline-danger\\\"\\r\\n                          (click)=\\\"delete(cliente)\\\"\\r\\n                          >\\r\\n                        Eliminar\\r\\n                      </button>\\r\\n                  </td> -->\\r\\n                    <!-- <th>{{cliente.createAt}}</th> -->\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n    [paginador]=\\\"paginador\\\"\\r\\n    [link]=\\\"link\\\">\\r\\n    </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalFacturaBuscarService.modal\\\">\\r\\n  <!-- <app-detalle-factura\\r\\n      *ngIf=\\\"facturaSelecionado\\\"\\r\\n      [factura]=\\\"facturaSelecionado\\\">\\r\\n  </app-detalle-factura> -->\\r\\n  <div  style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header bg-dark text-muted\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <strong>\\r\\n              Buscar Factura\\r\\n            </strong>\\r\\n          </h4>\\r\\n          <button\\r\\n            (click)=\\\"cerrarModalBusquedaFactura()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <form #facturaForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"codigoFactura\\\"\\r\\n                                name=\\\"id\\\"\\r\\n                                [(ngModel)]=\\\"id\\\"\\r\\n                                placeholder=\\\"Digite Numero de factura\\\"\\r\\n                                requiered>\\r\\n                              <div class=\\\"input-group-append\\\">\\r\\n                                <button class=\\\"btn btn-success\\\" type=\\\"button\\\"\\r\\n                                        (click)=\\\"buscarFactura()\\\">Buscar\\r\\n                                </button>\\r\\n                              </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!factura\\\"\\r\\n            class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"alert-warning my-3\\\">\\r\\n              No se encuentran facturas\\r\\n            </div>\\r\\n        </div>\\r\\n        <table *ngIf=\\\"factura\\\"\\r\\n              class=\\\"table table-striped table-hover table-sm my-3\\\" >\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Detalles</th>\\r\\n              <th>Descripcion</th>\\r\\n              <th>Fecha</th>\\r\\n              <th>Total</th>\\r\\n              <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                  >Ganancia</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr  *ngIf=\\\"factura\\\" >\\r\\n              <td>\\r\\n                  <img  [routerLink]=\\\"['/facturas', factura.id]\\\"\\r\\n                      src=\\\"http://localhost:8080/images/factura.jpg\\\"\\r\\n                  alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                  style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n              </td>\\r\\n              <td>{{factura.descripcion}}</td>\\r\\n              <td>{{factura.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n              <td>{{formatNumber(factura.total)}}</td>\\r\\n              <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                  >{{formatNumber(factura.totalGanancia)}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <button (click)=\\\"cerrarModalBusquedaFactura()\\\"\\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\r\\n                Cerrar\\r\\n              </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<app-cliente-facturar></app-cliente-facturar>\\r\\n<div class=\\\"card  mb-3\\\">\\r\\n<div class=\\\"card-header bg-dark text-muted\\\">\\r\\n  <h3>\\r\\n    <strong>\\r\\n     {{titulo}}\\r\\n    </strong>\\r\\n  </h3>\\r\\n</div>\\r\\n<div class=\\\"card-body\\\">\\r\\n<div class=\\\"row mb-4\\\">\\r\\n  <label for=\\\"fecha\\\" class=\\\"col-form-label col-sm-2\\\">\\r\\n    <strong>\\r\\n      Fecha Inicial\\r\\n    </strong>\\r\\n  </label>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <input type=\\\"date\\\"\\r\\n            style=\\\"width: 200px;\\\"\\r\\n            class=\\\"form-control \\\"\\r\\n            [(ngModel)]=\\\"fechaInicioFiltro\\\"\\r\\n            name=\\\"filtro\\\"\\r\\n            requiered>\\r\\n    </div>\\r\\n    <label for=\\\"fecha\\\" class=\\\"col-form-label col-sm-2\\\">\\r\\n      <strong>\\r\\n        Fecha Final\\r\\n      </strong>\\r\\n    </label>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <input type=\\\"date\\\"\\r\\n            style=\\\"width: 200px;\\\"\\r\\n            class=\\\"form-control \\\"\\r\\n            [(ngModel)]=\\\"fechaFinFiltro\\\"\\r\\n            name=\\\"filtro\\\"\\r\\n            requiered>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n      <button class=\\\"btn btn-rounded btn-outline-primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"filtrarFacturas()\\\"\\r\\n      >\\r\\n        Filtrar\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"alert alert-info my-3\\\"\\r\\n  *ngIf=\\\"facturas?.length == 0\\\" >\\r\\n  <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n</div>\\r\\n<table class='table table-bordered table-striped my-3'\\r\\n            *ngIf=\\\"facturas?.length>0\\\" >\\r\\n<thead class=\\\"bg-dark text-center text-white\\\">\\r\\n  <tr>\\r\\n    <th>Detalles</th>\\r\\n    <th>Descripcion</th>\\r\\n    <th>Fecha</th>\\r\\n    <th>Total</th>\\r\\n    <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Ganancia</th>\\r\\n    <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th> -->\\r\\n  </tr>\\r\\n</thead>\\r\\n<tbody  class=\\\"text-center\\\">\\r\\n  <tr\\r\\n      *ngFor=\\\"let factura of facturas\\\" >\\r\\n    <td>\\r\\n        <img  [routerLink]=\\\"['/facturas', factura.id]\\\"\\r\\n            src=\\\"http://localhost:8080/images/factura.jpg\\\"\\r\\n        alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n        style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n    </td>\\r\\n    <td>{{factura.descripcion}}</td>\\r\\n    <td>{{factura.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n    <td>{{formatNumber(factura.total)}}</td>\\r\\n    <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n      {{formatNumber(factura.totalGanancia)}}</td>\\r\\n  </tr>\\r\\n</tbody>\\r\\n</table>\\r\\n</div>\\r\\n<div *ngIf=\\\"facturas?.length > 0\\\"\\r\\n  class=\\\"row my-3\\\">\\r\\n     <div class=\\\"col-sm-6 \\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title >\\r\\n          Total Ventas:\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n          <h1>\\r\\n              {{formatNumber(totalFiltro)}}\\r\\n          </h1>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n     </div>\\r\\n     <div class=\\\"col-sm-6 \\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title>\\r\\n          Gancia Total:\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n          <h1>\\r\\n              {{formatNumber(gananciaFiltro)}}\\r\\n          </h1>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n     </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalFacturaService.modal\\\">\\r\\n  <div  style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <strong>\\r\\n              {{titulo}}:\\r\\n            </strong>\\r\\n          </h4>\\r\\n          <button\\r\\n            (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <form #clienteForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"form-group row \\\"\\r\\n                        style=\\\" min-width: 150px;\\r\\n                                max-width: 500px;\\r\\n                                width: 100%;\\\">\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-form-field style=\\\"width: 100%;\\\">\\r\\n                              <input type=\\\"text\\\" placeholder=\\\"Digite el 'Numero' de documento de identidad del cliente\\\"\\r\\n                                      aria-label=\\\"Clientes\\\"\\r\\n                                      matInput [formControl]=\\\"autocompleteControl\\\"\\r\\n                                      [matAutocomplete]=\\\"auto\\\">\\r\\n                              <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                                      [displayWith]=\\\"mostrarNombre\\\"\\r\\n                                      (optionSelected)=\\\"seleccionarCliente($event)\\\">\\r\\n                                <mat-option *ngFor=\\\"let cliente of clientesFiltrados | async\\\"\\r\\n                                          [value]=\\\"cliente\\\">\\r\\n                                          Doc: {{cliente.documento}} ~ {{cliente.nombre}} {{cliente.apellido}}\\r\\n                                </mat-option>\\r\\n                              </mat-autocomplete>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"alert alert-danger\\\"\\r\\n                                  *ngIf=\\\"autocompleteControl.invalid && clienteForm.submitted\\\">\\r\\n                              Debe Agregar Un Cliente\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                    <table class=\\\"table table-striped table-hover table-sm text-center\\\" >\\r\\n                      <thead class=\\\"bg-dark  text-white\\\">\\r\\n                        <tr>\\r\\n                          <th>Detalles</th>\\r\\n                          <th>Nombre</th>\\r\\n                          <th>Apellido</th>\\r\\n                          <th>Documento</th>\\r\\n                         </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr  *ngIf=\\\"cliente\\\" >\\r\\n                          <td>\\r\\n                            <img *ngIf=\\\"cliente?.foto\\\"  [routerLink]=\\\"['/clientes/details', cliente.id]\\\"\\r\\n                                src=\\\"http://localhost:8080/api/uploads/imgcliente/{{cliente.foto}}\\\"\\r\\n                            alt=\\\"{{cliente.foto}}\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                            style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n                            <img *ngIf=\\\"!cliente?.foto\\\"  [routerLink]=\\\"['/clientes/details', cliente.id]\\\"\\r\\n                                src=\\\"http://localhost:8080/images/no-usuario.png\\\"\\r\\n                            alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                            style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n                        </td>\\r\\n                          <td>{{cliente.nombre | uppercase}}</td>\\r\\n                          <td>{{cliente.apellido | uppercase}}</td>\\r\\n                          <td>{{cliente.documento}}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <button *ngIf=\\\"cliente\\\"\\r\\n                (click)=\\\"cerrarModal()\\\"\\r\\n                type=\\\"button\\\"\\r\\n                class=\\\"btn btn-success btn-sm my-2\\\"\\r\\n                [routerLink]=\\\"['/facturas/form', id]\\\"\\r\\n                >\\r\\n                  Crear Factura\\r\\n            </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <button (click)=\\\"cerrarModal()\\\"\\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\r\\n                Cerrar\\r\\n              </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<div class=\\\"card\\\" *ngIf=\\\"factura\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\">\\r\\n    <h4>\\r\\n      <strong> {{ titulo }} {{ factura.numeroFactura }} </strong>\\r\\n    </h4>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title\\\">\\r\\n      <a\\r\\n        [routerLink]=\\\"['/clientes/details', factura.cliente.id]\\\"\\r\\n        class=\\\"btn btn-rounded btn-outline-warning btn-xs mx-1\\\"\\r\\n        >&laquo; Regresar</a\\r\\n      >\\r\\n      <button\\r\\n        (click)=\\\"generarFactura(factura)\\\"\\r\\n        class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n        type=\\\"button\\\"\\r\\n      >\\r\\n        Imprimir\\r\\n      </button>\\r\\n    </h4>\\r\\n    <ul class=\\\"list-group my-2\\\"  >\\r\\n      <li class=\\\"list-group-item list-group-item-primary bg-dark text-muted\\\">\\r\\n        Datos del cliente\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Nombres: </strong> {{ factura.cliente.nombre | uppercase }}\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Apellidos: </strong> {{ factura.cliente.apellido | uppercase }}\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Documento:</strong> {{ factura.cliente.documento }}\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Celular:</strong> {{ factura.cliente.celular1 }}\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <ul class=\\\"list-group my-2\\\">\\r\\n      <li class=\\\"list-group-item list-group-item-primary bg-dark text-muted\\\">\\r\\n        Datos de la factura\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\"><strong>Folio: </strong> {{ factura.id }}</li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Descripción: </strong> {{ factura.descripcion | uppercase }}\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Fecha Facturación: </strong>\\r\\n        {{ factura.createAt | date: \\\"fullDate\\\" }}\\r\\n      </li>\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <strong>Vendedor: </strong> {{ factura.usuario.nombre }}\\r\\n        {{ factura.usuario.apellido }}\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <table id=\\\"tablaFactura\\\"\\r\\n      class=\\\"table table-striped table-hover table-bordered my-3 border-info\\\"\\r\\n    >\\r\\n      <thead class=\\\"bg-dark text-center text-muted\\\">\\r\\n        <tr>\\r\\n          <th style=\\\"max-width: 35px;\\\">Codigo</th>\\r\\n          <th class=\\\"text-center\\\">Producto</th>\\r\\n          <th>Precio</th>\\r\\n          <th  style=\\\"max-width: 40px;\\\">Cantidad</th>\\r\\n          <th>Sub-Total</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let item of factura.items\\\">\\r\\n          <td style=\\\"max-width: 35px;\\\" class=\\\"text-left\\\">{{ item.producto.codigo }}</td>\\r\\n          <td>{{ item.producto.nombre | uppercase }}</td>\\r\\n          <td>{{ formatNumber(item.producto.precio) }}</td>\\r\\n          <td style=\\\"max-width: 40px;\\\">{{ item.cantidad }}</td>\\r\\n          <td>{{ formatNumber(item.importe) }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <h5 *ngIf=\\\"factura.descuento\\\" class=\\\"float-right\\\">\\r\\n      <strong>Descuento</strong>:\\r\\n      <span class=\\\"badge badge-danger m-2 p-2\\\">\\r\\n        {{ formatNumber(factura.descuento) }}\\r\\n      </span>\\r\\n    </h5>\\r\\n\\r\\n    <h5 class=\\\"float-right\\\">\\r\\n      <strong>Total</strong>:\\r\\n      <span class=\\\"badge badge-warning m-2 p-2\\\">\\r\\n        {{ formatNumber(factura.total) }}\\r\\n      </span>\\r\\n    </h5>\\r\\n    <h5 class=\\\"float-right\\\" *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n      <strong>Ganancia Total</strong>:\\r\\n      <span class=\\\"badge badge-success m-2 p-2\\\">\\r\\n        {{ formatNumber(factura.totalGanancia) }}\\r\\n      </span>\\r\\n    </h5>\\r\\n\\r\\n    <div class=\\\"card border-info mb-4\\\" style=\\\"max-width: 350px\\\">\\r\\n      <div class=\\\"card card-header bg-dark text-muted\\\">Observaciones</div>\\r\\n      <div class=\\\"card card-body\\\">\\r\\n        <p *ngIf=\\\"!factura.observacion\\\">No tiene observación</p>\\r\\n        <p *ngIf=\\\"factura.observacion\\\">{{ factura.observacion | uppercase }}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <a\\r\\n      [routerLink]=\\\"['/clientes/details', factura.cliente.id]\\\"\\r\\n      class=\\\"btn btn-rounded btn-outline-warning btn-xs\\\"\\r\\n      >&laquo; Regresar</a\\r\\n    >\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\">\\r\\n    <h4>\\r\\n      <strong>\\r\\n        {{ titulo }}\\r\\n      </strong>\\r\\n    </h4>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title\\\">\\r\\n      <a\\r\\n        [routerLink]=\\\"['/clientes']\\\"\\r\\n        class=\\\"btn btn-rounded btn-outline-warning btn-xs\\\"\\r\\n      >\\r\\n        &laquo; volver\\r\\n      </a>\\r\\n    </h4>\\r\\n\\r\\n    <form #facturaForm=\\\"ngForm\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"numeroFactura\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n              <strong> Numero Factura: </strong>\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-6\\\" >\\r\\n              <input *ngIf=\\\"numeroFactura\\\"\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"numeroFactura\\\"\\r\\n                [(ngModel)]=\\\"factura.numeroFactura\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                required\\r\\n                #numeroFactura=\\\"ngModel\\\"\\r\\n                disabled\\r\\n              />\\r\\n            <div *ngIf=\\\"!numeroFactura\\\">\\r\\n              <span class=\\\"alert alert-danger pb-0 \\\">Favor Ingresar Numero De Factura Inicial</span>\\r\\n              <strong>\\r\\n              <input \\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"numeroFactura\\\"\\r\\n                [(ngModel)]=\\\"factura.numeroFactura\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                required\\r\\n                #numeroFactura=\\\"ngModel\\\"\\r\\n                autofocus\\r\\n              />\\r\\n            </strong>\\r\\n              <div\\r\\n                class=\\\"alert alert-danger\\\"\\r\\n                *ngIf=\\\"\\r\\n                  (numeroFactura.invalid && numeroFactura.touched) ||\\r\\n                  (numeroFactura.invalid && facturaForm.submitted)\\r\\n                \\\"\\r\\n              >\\r\\n                El Numero de Factura es requerido es requerida.\\r\\n              </div>\\r\\n            </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"factura.cliente\\\">\\r\\n            <label for=\\\"cliente\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n              <strong> Cliente: </strong>\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"cliente\\\"\\r\\n                value=\\\"{{ factura.cliente.nombre }} {{\\r\\n                  factura.cliente.apellido\\r\\n                }}\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                disabled\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"observacion\\\" class=\\\"col-sm-2 col-form-label\\\">\\r\\n              <strong> Observación: </strong>\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <textarea\\r\\n                name=\\\"observacion\\\"\\r\\n                [(ngModel)]=\\\"factura.observacion\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n              ></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n\\r\\n      <mat-card style=\\\"margin-top: 20px\\\">\\r\\n        <mat-card-content>\\r\\n          <div\\r\\n            style=\\\"\\r\\n              min-width: 150px;\\r\\n              max-width: 750px;\\r\\n              margin-top: 20px;\\r\\n              width: 100%;\\r\\n            \\\"\\r\\n            class=\\\"form-group row\\\"\\r\\n          >\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <mat-form-field style=\\\"width: 100%\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"Digite el codigo o nombre del producto para Agregar\\\"\\r\\n                  aria-label=\\\"Productos\\\"\\r\\n                  matInput\\r\\n                  [formControl]=\\\"autocompleteControl\\\"\\r\\n                  [matAutocomplete]=\\\"auto\\\"\\r\\n                />\\r\\n                <mat-autocomplete\\r\\n                  #auto=\\\"matAutocomplete\\\"\\r\\n                  [displayWith]=\\\"mostrarNombre\\\"\\r\\n                  (optionSelected)=\\\"seleccionarProducto($event)\\\"\\r\\n                >\\r\\n                  <mat-option\\r\\n                    *ngFor=\\\"let producto of productosFiltrados | async\\\"\\r\\n                    [value]=\\\"producto\\\"\\r\\n                  >\\r\\n                    <span *ngIf=\\\"producto.cantidad <= 0\\\">\\r\\n                      <span class=\\\"alert-danger mr-1\\\" style=\\\"font-size: 1rem\\\">\\r\\n                        --NO HAY STOCK DISPONIBLE-- --{{ producto.codigo }} --\\r\\n                        --{{ producto.nombre | uppercase }}-- --{{\\r\\n                          formatNumber(producto.precio)\\r\\n                        }}--\\r\\n                      </span>\\r\\n                    </span>\\r\\n                    <span style=\\\"font-size: 1rem\\\" *ngIf=\\\"producto.cantidad > 0\\\">\\r\\n                      {{ producto.codigo }} --\\r\\n                      {{ producto.nombre | uppercase }} --\\r\\n                      {{ formatNumber(producto.precio) }} --\\r\\n                    </span>\\r\\n                  </mat-option>\\r\\n                </mat-autocomplete>\\r\\n              </mat-form-field>\\r\\n              <div\\r\\n                class=\\\"alert alert-danger\\\"\\r\\n                *ngIf=\\\"autocompleteControl.invalid && facturaForm.submitted\\\"\\r\\n              >\\r\\n                No se puede facturar no hay \\\"articulos\\\" agregados a la factura.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"alert alert-info my-4\\\" *ngIf=\\\"factura.items.length == 0\\\">\\r\\n            No hay líneas asignadas para la factura. Debe agregar al menos una!\\r\\n          </div>\\r\\n          <table\\r\\n            style=\\\"font-size: 1rem\\\"\\r\\n            class=\\\"table table-striped table-hover table-sm table-bordered\\\"\\r\\n            *ngIf=\\\"factura.items.length > 0\\\"\\r\\n          >\\r\\n            <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n              <tr>\\r\\n                <th>Codigo</th>\\r\\n                <th>Producto</th>\\r\\n                <th>Precio</th>\\r\\n                <th>Stock</th>\\r\\n                <th style=\\\"max-width: 50px\\\">Cantidad</th>\\r\\n                <th>Sub-Total</th>\\r\\n                <th>Eliminar</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody class=\\\"text-center\\\">\\r\\n              <tr *ngFor=\\\"let item of factura.items\\\">\\r\\n                <td class=\\\"text-left\\\">{{ item.producto.codigo }}</td>\\r\\n                <td class=\\\"text-left\\\">\\r\\n                  {{ item.producto.nombre | uppercase }}\\r\\n                </td>\\r\\n                <td class=\\\"text-right\\\">\\r\\n                  {{ formatNumber(item.producto.precio) }}\\r\\n                </td>\\r\\n                <td\\r\\n                  style=\\\"max-width: 80px; padding-top: 8px\\\"\\r\\n                  *ngIf=\\\"item.producto.cantidad > 3\\\"\\r\\n                >\\r\\n                  {{ item.producto.cantidad }}\\r\\n                </td>\\r\\n                <td\\r\\n                  style=\\\"max-width: 80px; margin-top: 8px\\\"\\r\\n                  class=\\\"badge badge-danger\\\"\\r\\n                  *ngIf=\\\"item.producto.cantidad <= 3\\\"\\r\\n                >\\r\\n                  {{ item.producto.cantidad }}\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <input\\r\\n                    type=\\\"number\\\"\\r\\n                    style=\\\"max-width: 60px; margin-left: 10px; padding: 0\\\"\\r\\n                    [(ngModel)]=\\\"item.cantidad\\\"\\r\\n                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    (change)=\\\"actualizarCantidad(item.producto.id, $event)\\\"\\r\\n                  />\\r\\n                </td>\\r\\n                <td class=\\\"text-right\\\">\\r\\n                  {{ formatNumber(item.calcularImporte()) }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button\\r\\n                    class=\\\"btn btn-danger btn-sm\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    (click)=\\\"eliminarItemFactura(item.producto.id)\\\"\\r\\n                  >\\r\\n                    x\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n      <mat-card style=\\\"margin-top: 20px\\\">\\r\\n        <mat-card-content>\\r\\n          <h5 class=\\\"float-left mx-2\\\" *ngIf=\\\"factura.items.length > 0\\\">\\r\\n            <strong>Descuento</strong>:\\r\\n            <input\\r\\n              style=\\\"max-width: 120px\\\"\\r\\n              type=\\\"number\\\"\\r\\n              [(ngModel)]=\\\"factura.descuento\\\"\\r\\n              min=\\\"1\\\"\\r\\n              pattern=\\\"^[0-9]+\\\"\\r\\n              [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n            />\\r\\n          </h5>\\r\\n          <h5 *ngIf=\\\"factura.descuento\\\" class=\\\"float-right\\\">\\r\\n            <strong>Descuento</strong>:\\r\\n            <span class=\\\"badge badge-danger\\\">\\r\\n              {{ validarDescuento(factura) }}\\r\\n            </span>\\r\\n          </h5>\\r\\n\\r\\n          <h5 class=\\\"float-right\\\" *ngIf=\\\"factura.items.length > 0\\\">\\r\\n            <strong>Total</strong>:\\r\\n            <span class=\\\"badge badge-warning mx-1\\\">\\r\\n              {{ formatNumber(factura.calcularGranTotal()) }}\\r\\n            </span>\\r\\n          </h5>\\r\\n          <h5\\r\\n            class=\\\"float-right\\\"\\r\\n            *ngIf=\\\"\\r\\n              authService.hasRole('ROLE_ADMIN') && factura.items.length > 0\\r\\n            \\\"\\r\\n          >\\r\\n            <strong>Ganancia Total</strong>:\\r\\n            <span class=\\\"badge badge-success mx-1\\\">\\r\\n              {{ formatNumber(factura.calcularGananciaTotal()) }}\\r\\n            </span>\\r\\n          </h5>\\r\\n          <div *ngIf=\\\"factura.items.length > 0\\\" class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <section class=\\\"example-section\\\">\\r\\n                <mat-checkbox\\r\\n                  class=\\\"example-margin\\\"\\r\\n                  [(ngModel)]=\\\"checked\\\"\\r\\n                  [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                  >Validar</mat-checkbox\\r\\n                >\\r\\n              </section>\\r\\n              <input\\r\\n                *ngIf=\\\"!checked\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                value=\\\"Crear Factura\\\"\\r\\n                style=\\\"background: rgba(112, 65, 65, 0.507)\\\"\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"create(facturaForm)\\\"\\r\\n                class=\\\"btn btn-secondary\\\"\\r\\n              />\\r\\n              <input\\r\\n                *ngIf=\\\"checked\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                style=\\\"background: green\\\"\\r\\n                (click)=\\\"create(facturaForm)\\\"\\r\\n                value=\\\"Crear Factura\\\"\\r\\n                class=\\\"btn btn-secondary\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<app-factura-buscar></app-factura-buscar>\\r\\n<app-cliente-facturar></app-cliente-facturar>\\r\\n<div class=\\\"card  mb-3\\\">\\r\\n<div class=\\\"card-header bg-dark text-muted\\\"><h3><strong>{{titulo}}</strong></h3></div>\\r\\n<div class=\\\"card-body\\\">\\r\\n<h4 class=\\\"card-title text-muted\\\">Listado de Facturas</h4>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-2\\\">\\r\\n    <div class=\\\"my-2 text-left\\\">\\r\\n      <button class=\\\"btn btn-rounded btn-outline-primary btn-xs\\\"\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"abrirModalBuscarFactura()\\\"\\r\\n      >\\r\\n        Buscar Factura\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-10\\\">\\r\\n    <div class=\\\"my-2 text-left\\\">\\r\\n      <button class=\\\"btn btn-rounded btn-outline-success btn-xs\\\"\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"abrirModal()\\\"\\r\\n      >\\r\\n        Crear Factura\\r\\n      </button>\\r\\n  </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"alert alert-info\\\"\\r\\n  *ngIf=\\\"facturas?.length == 0\\\" >\\r\\n  <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n</div>\\r\\n<table class='table table-bordered table-striped'\\r\\n            *ngIf=\\\"facturas?.length>0\\\" >\\r\\n<thead class=\\\"bg-dark text-center text-white\\\">\\r\\n  <tr>\\r\\n    <th>Detalles</th>\\r\\n    <th>Descripcion</th>\\r\\n    <th>Fecha</th>\\r\\n    <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Ganancia</th>\\r\\n    <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th> -->\\r\\n  </tr>\\r\\n</thead>\\r\\n<tbody class=\\\"text-center\\\">\\r\\n  <tr *ngFor=\\\"let factura of facturas\\\" >\\r\\n    <td>\\r\\n        <img  [routerLink]=\\\"['/facturas', factura.id]\\\"\\r\\n            src=\\\"http://localhost:8080/images/factura.jpg\\\"\\r\\n        alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n        style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n    </td>\\r\\n    <td>{{factura.descripcion}}</td>\\r\\n    <td>{{factura.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n    <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n      {{formatNumber(factura.totalGanancia)}}</td>\\r\\n  </tr>\\r\\n</tbody>\\r\\n</table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n        [paginador]=\\\"paginador\\\"\\r\\n        [link]=\\\"link\\\">\\r\\n    </app-paginador>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<footer\\r\\n        style=\\\"position: absolute;\\r\\n        bottom: 0px;\\r\\n        height: 60px;\\r\\n        width: 100%;\\\"\\r\\n        class=\\\"footer bg-dark rounded-top text-center\\\">\\r\\n  <div class=\\\"container py-2\\\">\\r\\n    <p class=\\\"text-white\\\">\\r\\n      &copy; {{ autor.nombre+ '' +autor.apellido}}\\r\\n    </p>\\r\\n  </div>\\r\\n</footer>\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\">\\r\\n  <div  style=\\\"display: block; background:none ;\\\"\\r\\n    class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm \\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n          <img src=\\\"../../../assets/images/loading-arrow.gif\\\" alt=\\\"loading\\\">\\r\\n          <h3>Cargando....</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div className=\\\"container\\\">\\r\\n  <div className=\\\"row\\\">\\r\\n      <div className=\\\"col-10 mx-auto text-center text-title\\r\\n                      text-uppercase pt-5\\\">\\r\\n          <h1 className=\\\"display-3\\\">\\r\\n              404\\r\\n          </h1>\\r\\n          <h1>\\r\\n              error\\r\\n          </h1>\\r\\n          <h2>\\r\\n             pagina no encontrada\\r\\n          </h2>\\r\\n          <h3>\\r\\n              the request URL\\r\\n              <span className=\\\"text-danger\\\">\\r\\n                  <!-- {this.props.location.pathname} -->\\r\\n              </span>\\r\\n                  <!-- {\\\" \\\"}\\r\\n                  was not found -->\\r\\n           </h3>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n<a class=\\\"nav-link\\\" routerLink=\\\"/\\\">ir pagina principal </a>\\r\\n\"","export default \"<ul *ngIf=\\\"paginas?.length>0\\\" class=\\\"pagination \\\" >\\r\\n  <li class=\\\"page-item \\\" *ngIf=\\\"paginador.number > 0\\\" >\\r\\n      <a class=\\\"page-link \\\" [routerLink]=\\\"[link, paginador.number-1]\\\">&laquo;</a>\\r\\n  </li>\\r\\n  <li [ngClass]=\\\"paginador.first?'disabled page-item ': 'page-item '\\\" >\\r\\n      <a class=\\\"page-link \\\" [routerLink]=\\\"[link, 0]\\\">Primera</a>\\r\\n  </li>\\r\\n  <li class=\\\"page-item \\\" *ngFor=\\\"let pagina of paginas\\\"\\r\\n  [ngClass]=\\\"pagina-1 === paginador.number? 'active': ''\\\"  >\\r\\n    <span class=\\\"page-link text-muted \\\"\\r\\n    *ngIf=\\\"pagina-1 === paginador.number\\\">\\r\\n      <strong>{{pagina}}</strong>\\r\\n    </span>\\r\\n    <a class=\\\"page-link \\\" *ngIf=\\\"pagina-1 !== paginador.number\\\" [routerLink]=\\\"[link, pagina-1]\\\">\\r\\n      {{pagina}}\\r\\n    </a>\\r\\n  </li>\\r\\n  <li [ngClass]=\\\"paginador.last?'disabled page-item ': 'page-item '\\\" >\\r\\n      <a class=\\\"page-link \\\" [routerLink]=\\\"[link, paginador.totalPages - 1]\\\">Ultima</a>\\r\\n  </li>\\r\\n  <li class=\\\"page-item \\\" *ngIf=\\\"paginador.number < paginador.totalPages - 1\\\" >\\r\\n      <a class=\\\"page-link \\\" [routerLink]=\\\"[link, paginador.number+1]\\\">&raquo;</a>\\r\\n\\r\\n    </li>\\r\\n</ul>\\r\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark \\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n    <img  src=\\\"http://localhost:8080/images/logo-pagina.jpg\\\"\\r\\n          alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n          style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n  </a>\\r\\n  <button class=\\\"navbar-toggler\\\"\\r\\n          type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\r\\n          data-target=\\\"#navbarSupportedContent\\\"\\r\\n          aria-controls=\\\"navbarSupportedContent\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul *ngIf=\\\"authService.hasRole('ROLE_USER')\\\"\\r\\n      class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/clientes\\\">Clientes</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/productos\\\">Productos</a>\\r\\n      </li>\\r\\n      \\r\\n      <!-- <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/servicios\\\">Servicios</a>\\r\\n      </li> -->\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/users\\\"\\r\\n        *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Usuarios</a>\\r\\n      </li>\\r\\n      \\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/facturas\\\">Facturas </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"factura/filtrar\\\"\\r\\n            *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Informes</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/sucursales\\\">Sucursales</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive='Active'>\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/regiones\\\">Barrios</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"navbar-nav navbar-right\\\">\\r\\n      <!-- <li *ngIf=\\\"!authService.isAuthenticated()\\\">\\r\\n        <a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-outline-primary\\\">Sign In</a></li> -->\\r\\n      <li *ngIf=\\\"authService.isAuthenticated()\\\" class=\\\"dropdown mr-1 \\\">\\r\\n        <a class=\\\"btn btn-outline-primary dropdown-toggle ml-5 pl-5\\\" href=\\\"#\\\"\\r\\n            role=\\\"button\\\" id=\\\"dropdownMenuLink\\\" data-toggle=\\\"dropdown\\\"\\r\\n            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          {{authService.usuario.username}}\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink mr-5\\\">\\r\\n          <button (click)=\\\"logout()\\\" class=\\\"dropdown-item btn-sm mr-5\\\"\\r\\n          type=\\\"submit\\\">Cerrar Sesion</button>\\r\\n       </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<div class=\\\"container\\\"  *ngIf=\\\"producto\\\">\\r\\n    <a [routerLink]=\\\"['/productos']\\\"\\r\\n              class=\\\"btn btn-outline-warning btn-xs my-2\\\">&laquo;\\r\\n              Regresar\\r\\n    </a>\\r\\n    <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-outline-secondary btn-xs my-2 mx-3\\\"\\r\\n            [routerLink]=\\\"['/productos/form', producto.id]\\\"\\r\\n    >\\r\\n      Editar\\r\\n    </button>\\r\\n   \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm\\\">\\r\\n      <ul *ngIf=\\\"producto\\\"  class=\\\"list-group text-dark mb-1\\\">\\r\\n        <!-- <li class=\\\"list-group-item active\\\">{{producto.categoria.nombre | uppercase}}</li> -->\\r\\n        <!-- <li class=\\\"list-group-item \\\">{{producto.codigo}}</li> -->\\r\\n        <li class=\\\"list-group-item active bg-dark text-white-50\\\">\\r\\n          <strong>Producto: </strong>\\r\\n          {{producto.nombre | uppercase}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <strong>Codigo: </strong>\\r\\n        {{producto.codigo}}\\r\\n      </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n            <strong>Descripcion: </strong>\\r\\n          {{producto.descripcion}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n            <strong>Precio Compra: </strong>\\r\\n            {{formatNumber(producto.precioCompra)}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n            <strong>Precio Venta: </strong>\\r\\n          {{formatNumber(producto.precio)}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item bg-danger text-white\\\"\\r\\n            *ngIf=\\\"producto.cantidad <= 3\\\">\\r\\n            <strong>Cantidad: </strong>\\r\\n            {{producto.cantidad}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\"\\r\\n            *ngIf=\\\"producto.cantidad > 3\\\">\\r\\n            <strong>Cantidad: </strong>\\r\\n            {{producto.cantidad}}\\r\\n        </li>\\r\\n        <li *ngIf=\\\"(producto.cantidad >0) && authService.hasRole('ROLE_ADMIN')\\\"\\r\\n            class=\\\"list-group-item\\\">\\r\\n            <strong>Total Inversion: </strong>\\r\\n            {{calcularInversion(producto.cantidad, producto.precioCompra)}}\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n            <strong>Ult. Movimiento: </strong>\\r\\n          {{producto.createAt | date:\\\"fullDate\\\"}}\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <div class=\\\"input-group mb-1\\\">\\r\\n        <div class=\\\"custom-file\\\">\\r\\n          <input (change)=\\\"seleccionarFoto($event)\\\"\\r\\n                style=\\\"cursor: pointer;\\\"\\r\\n                type=\\\"file\\\" class=\\\"custom-file-input\\\"\\r\\n                id=\\\"inputGroupFile04\\\" aria-describedby=\\\"inputGroupFileAddon04\\\">\\r\\n          <label style=\\\"cursor: pointer;\\\"\\r\\n                 class=\\\"custom-file-label\\\"\\r\\n                 for=\\\"inputGroupFile04\\\">{{rutaFoto}}</label>\\r\\n        </div>\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <button (click)=\\\"subirFoto()\\\"\\r\\n\\r\\n            [disabled]=\\\"!fotoSelecionada\\\"\\r\\n            class=\\\"btn btn-outline-secondary\\\"\\r\\n            type=\\\"button\\\" id=\\\"inputGroupFileAddon04\\\">Subir</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"progreso>0 \\\"  class=\\\"progress\\\" style=\\\"height: 40px;\\\">\\r\\n          <div class=\\\"progress-bar progress-bar-striped\\\"\\r\\n              role=\\\"progressbar\\\"\\r\\n              [ngStyle]= \\\"{width: progreso+'%'}\\\"\\r\\n              attr.aria-valuenow=\\\"{{progreso}}\\\" aria-valuemin=\\\"0\\\"\\r\\n              aria-valuemax=\\\"100\\\">\\r\\n              {{progreso}}%\\r\\n          </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm\\\">\\r\\n      <img *ngIf=\\\"producto?.foto\\\"\\r\\n          src=\\\"http://localhost:8080/api/uploads/imgproducto/{{producto.foto}}\\\"\\r\\n          alt=\\\"{{producto.foto}}\\\" class=\\\"img-thumbnail rounded\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<ul class=\\\"alert alert-danger\\\" *ngIf=\\\"errores?.length>0\\\" >\\r\\n    <li  *ngFor=\\\"let err of errores\\\" >\\r\\n      {{err}}\\r\\n    </li>\\r\\n</ul>\\r\\n<div class=\\\"card bg-dark text-white\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h4 class=\\\"card-title\\\">\\r\\n        <strong>\\r\\n          {{titulo}}:\\r\\n        </strong>\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form #productoForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"nombre\\\" class=\\\"col-form-label col-sm-2 text-right\\\">Nombre :</label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                    style=\\\"text-transform:uppercase;\\\"\\r\\n                    [(ngModel)]=\\\"producto.nombre\\\"\\r\\n                    placeholder=\\\"Digite un nombre para el Producto\\\"\\r\\n                    name=\\\"nombre\\\"\\r\\n                    minlength=\\\"3\\\"\\r\\n                    maxlength=\\\"50\\\"\\r\\n                    #nombre=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n              \\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"codigo\\\" class=\\\"col-form-label col-sm-2 text-right\\\">Codigo:</label>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <input type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"producto.codigo\\\"\\r\\n                    name=\\\"codigo\\\"\\r\\n                    placeholder=\\\"Solo Numeros, No digite 'puntos' ( . ) ni 'comas'( , )\\\"\\r\\n                    minlength=\\\"2\\\"\\r\\n                    maxlength=\\\"4\\\"\\r\\n                    #precioCompra=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"descripcion\\\" class=\\\"col-form-label col-sm-2 text-right\\\">Descripcion :</label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <textarea class=\\\"form-control\\\"\\r\\n                      style=\\\"text-transform:uppercase;\\\"\\r\\n                      placeholder=\\\"Digite cualquier dato que considere importante\\\"\\r\\n                      [(ngModel)]=\\\"producto.descripcion\\\"\\r\\n                      name=\\\"descripcion\\\"\\r\\n                      >\\r\\n            </textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"precioCompra\\\" class=\\\"col-form-label col-sm-2 text-right\\\">Precio Compra :</label>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <input type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"producto.precioCompra\\\"\\r\\n                    name=\\\"precioCompra\\\"\\r\\n                    placeholder=\\\"Solo Numeros, No digite 'puntos' ( . ) ni 'comas'( , )\\\"\\r\\n                    minlength=\\\"2\\\"\\r\\n                    maxlength=\\\"4\\\"\\r\\n                    #precioCompra=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n              <label for=\\\"precio\\\" class=\\\"col-form-label col-sm-2 text-right\\\">Precio Venta :</label>\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <input type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"producto.precio\\\"\\r\\n                      name=\\\"precio\\\"\\r\\n                      placeholder=\\\"Solo Numeros, No digite 'puntos' ( . ) ni 'comas'( , )\\\"\\r\\n                      minlength=\\\"2\\\"\\r\\n                      maxlength=\\\"4\\\"\\r\\n                      #precio=\\\"ngModel\\\"\\r\\n                      requiered>\\r\\n                      <!-- <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"precio.invalid\\\" >\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"precio?.errors.requiered\\\" >\\r\\n                          Precio Venta es Requerido\\r\\n                        </div>\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"precio?.errors?.minlength\\\" >\\r\\n                          Precio Compra debe contener minimo 2 digitos\\r\\n                        </div>\\r\\n                    </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"cantidad\\\" class=\\\"col-form-label col-sm-2 text-right\\\">Cantidad :   </label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <input type=\\\"number\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"producto.cantidad\\\"\\r\\n                        name=\\\"cantidad\\\"\\r\\n                        minlength=\\\"0\\\"\\r\\n                        placeholder=\\\"Solo Numeros, No digite 'puntos' ( . ) ni 'comas'( , )\\\"\\r\\n                        #cantidad=\\\"ngModel\\\"\\r\\n                        >\\r\\n                </div>\\r\\n              </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <button class=\\\"btn btn-primary\\\"\\r\\n                        role=\\\"button\\\"\\r\\n                        (click)=\\\"create()\\\"\\r\\n                        *ngIf=\\\"!producto.id else elseBlock\\\"\\r\\n                        [disabled]=\\\"!productoForm.form.valid\\\">\\r\\n                  Crear\\r\\n                </button>\\r\\n                <ng-template #elseBlock>\\r\\n                    <button class=\\\"btn btn-primary\\\"\\r\\n                        role=\\\"button\\\"\\r\\n                        (click)=\\\"update()\\\"\\r\\n                        [disabled]=\\\"!productoForm.form.valid\\\">\\r\\n                  Actualizar\\r\\n                </button>\\r\\n                </ng-template>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<app-producto-buscar></app-producto-buscar>\\r\\n<div class=\\\"card mb-3\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\">\\r\\n    <h3>\\r\\n      <strong>{{ titulo }}</strong>\\r\\n    </h3>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado de Productos</h4>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <div class=\\\"my-2 text-left\\\">\\r\\n          <button\\r\\n            class=\\\"btn btn-rounded btn-outline-primary btn-xs\\\"\\r\\n            type=\\\"button\\\"\\r\\n            (click)=\\\"abrirModalProductoBuscar()\\\"\\r\\n          >\\r\\n            Buscar Producto\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <div class=\\\"my-2 text-left\\\">\\r\\n          <button\\r\\n            *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n            class=\\\"btn btn-rounded btn-outline-info btn-xs\\\"\\r\\n            type=\\\"button\\\"\\r\\n            [routerLink]=\\\"['/productos/form']\\\"\\r\\n          >\\r\\n            Crear Productos\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-info\\\" *ngIf=\\\"productos?.length == 0\\\">\\r\\n      <span class=\\\"text-muted\\\"\\r\\n        ><strong>No hay registros en la Base de Datos</strong></span\\r\\n      >\\r\\n    </div>\\r\\n    <table\\r\\n      class=\\\"table table-bordered table-striped\\\"\\r\\n      *ngIf=\\\"productos?.length > 0\\\"\\r\\n    >\\r\\n      <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Codigo</th>\\r\\n          <th>Nombre</th>\\r\\n          <th>Precio</th>\\r\\n          <th>Stock</th>\\r\\n          <th>Descripcion</th>\\r\\n          <th>Fec. Ultimo Mov.</th>\\r\\n          <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Editar</th>\\r\\n          <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let producto of productos\\\">\\r\\n          <td>\\r\\n            <img\\r\\n              *ngIf=\\\"producto?.foto\\\"\\r\\n              [routerLink]=\\\"['/productos/detalle', producto.id]\\\"\\r\\n              src=\\\"http://localhost:8080/api/uploads/imgproducto/{{\\r\\n                producto.foto\\r\\n              }}\\\"\\r\\n              alt=\\\"{{ producto.foto }}\\\"\\r\\n              class=\\\"img-thumbnail rounded\\\"\\r\\n              style=\\\"width: 64px; cursor: pointer;\\\"\\r\\n            />\\r\\n            <img\\r\\n              *ngIf=\\\"!producto?.foto\\\"\\r\\n              [routerLink]=\\\"['/productos/detalle', producto.id]\\\"\\r\\n              src=\\\"http://localhost:8080/images/no-producto.png\\\"\\r\\n              alt=\\\"no-producto\\\"\\r\\n              class=\\\"img-thumbnail rounded\\\"\\r\\n              style=\\\"width: 64px; cursor: pointer;\\\"\\r\\n            />\\r\\n          </td>\\r\\n          <td>{{ producto.codigo }}</td>\\r\\n          <td>{{ producto.nombre | uppercase }}</td>\\r\\n          <td>{{ formatNumber(producto.precio) }}</td>\\r\\n          <td class=\\\"badge badge-danger mt-2\\\" *ngIf=\\\"producto.cantidad <= 3\\\">\\r\\n            <strong>\\r\\n              {{ producto.cantidad }}\\r\\n            </strong>\\r\\n          </td>\\r\\n          <td *ngIf=\\\"producto.cantidad > 3\\\">\\r\\n            {{ producto.cantidad }}\\r\\n          </td>\\r\\n          <td>{{ producto.descripcion }}</td>\\r\\n          <td>{{ producto.createAt | date: \\\"EEEE dd, MMMM yyyy\\\" }}</td>\\r\\n          <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-outline-secondary btn-xs\\\"\\r\\n              [routerLink]=\\\"['/productos/form', producto.id]\\\"\\r\\n            >\\r\\n              Editar\\r\\n            </button>\\r\\n          </td>\\r\\n          <!-- <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                          <button type=\\\"button\\\"\\r\\n                              class=\\\"btn btn-outline-danger\\\"\\r\\n                              (click)=\\\"delete(producto)\\\"\\r\\n                              >\\r\\n                            Eliminar\\r\\n                          </button>\\r\\n                      </td> -->\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\" [paginador]=\\\"paginador\\\" [link]=\\\"link\\\">\\r\\n    </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalProductoBuscarService.modal\\\">\\r\\n  <app-detalle-producto\\r\\n      *ngIf=\\\"productoSelecionado\\\"\\r\\n      [producto]=\\\"productoSelecionado\\\"></app-detalle-producto>\\r\\n  <div  style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <strong>\\r\\n              {{titulo}}:\\r\\n            </strong>\\r\\n          </h4>\\r\\n          <button\\r\\n            (click)=\\\"cerrarModalBusquedaProducto()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <form #productoForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"form-group row example-form\\\">\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                              <input type=\\\"text\\\" placeholder=\\\"Digite Nombre Del Producto\\\"\\r\\n                                      aria-label=\\\"Productos\\\"\\r\\n                                      matInput [formControl]=\\\"autocompleteControl\\\"\\r\\n                                      [matAutocomplete]=\\\"auto\\\">\\r\\n                              <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                                      [displayWith]=\\\"mostrarNombre\\\"\\r\\n                                      (optionSelected)=\\\"seleccionarProducto($event)\\\">\\r\\n                                <mat-option *ngFor=\\\"let producto of productosFiltrados | async\\\"\\r\\n                                          [value]=\\\"producto\\\">\\r\\n                                          <span *ngIf=\\\"producto.cantidad<=0\\\">\\r\\n                                            <span class=\\\" alert-danger mr-1 \\\"\\r\\n                                                  style=\\\"font-size: 1rem;\\\">\\r\\n                                                   * * NO HAY STOCK DISPONIBLE * *\\r\\n                                                   {{producto.nombre | uppercase}}\\r\\n                                                   * * {{formatNumber(producto.precio) }} * *\\r\\n                                            </span>\\r\\n                                          </span>\\r\\n                                          <span\\r\\n                                                style=\\\"font-size: 1rem;\\\"\\r\\n                                                *ngIf=\\\"producto.cantidad>0\\\">\\r\\n                                            {{producto.nombre | uppercase}}  * * {{formatNumber(producto.precio)}} * *\\r\\n                                          </span>\\r\\n                                </mat-option>\\r\\n                              </mat-autocomplete>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"alert alert-danger\\\"\\r\\n                                  *ngIf=\\\"autocompleteControl.invalid && productoForm.submitted\\\">\\r\\n                              Debe Agregar Producto\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                    <table class=\\\"table text-center table-striped table-hover table-sm\\\" >\\r\\n                      <thead class=\\\"bg-dark  text-white\\\">\\r\\n                        <tr>\\r\\n                          <th>Detalles</th>\\r\\n                          <th>Nombre</th>\\r\\n                          <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                              Precio Costo\\r\\n                          </th>\\r\\n                          <th>Precio Venta</th>\\r\\n                          <th>Cantidad</th>\\r\\n                         </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr  *ngIf=\\\"producto\\\" >\\r\\n                          <td>\\r\\n                            <img *ngIf=\\\"producto?.foto\\\"  (click)=\\\"abrirModal(producto)\\\"\\r\\n                                src=\\\"http://localhost:8080/api/uploads/imgproducto/{{producto.foto}}\\\"\\r\\n                            alt=\\\"{{producto.foto}}\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                            style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n                            <img *ngIf=\\\"!producto?.foto\\\"  (click)=\\\"abrirModal(producto)\\\"\\r\\n                                src=\\\"http://localhost:8080/images/no-producto.png\\\"\\r\\n                            alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                            style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n                        </td>\\r\\n                          <td>{{producto.nombre | uppercase}}</td>\\r\\n                          <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                              {{formatNumber(producto.precioCompra)}}\\r\\n                          </td>\\r\\n                          <td>{{formatNumber(producto.precio)}}</td>\\r\\n                          <td class=\\\"badge badge-danger mt-2\\\"\\r\\n                              *ngIf=\\\"producto.cantidad <= 3\\\">\\r\\n                              <strong >\\r\\n                                  {{producto.cantidad}}\\r\\n                              </strong>\\r\\n                          </td>\\r\\n                          <td\\r\\n                              *ngIf=\\\"producto.cantidad > 3\\\">\\r\\n                              {{producto.cantidad}}\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <button (click)=\\\"cerrarModalBusquedaProducto()\\\"\\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\r\\n                Cerrar\\r\\n              </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\"  *ngIf=\\\"modalRegionService.modal\\\">\\r\\n  <div style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header bg-dark text-muted\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <strong>\\r\\n              {{titulo}}\\r\\n            </strong>\\r\\n          </h4>\\r\\n          <button (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <ul *ngIf=\\\"region\\\"  class=\\\"list-group text-dark mb-3\\\">\\r\\n                  <li class=\\\"list-group-item active\\\">{{region.nombre}}</li>\\r\\n                  <li class=\\\"list-group-item\\\">{{region.createAt | date:\\\"fullDate\\\"}}</li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-rounded btn-outline-secondary btn-xs mx-2\\\"\\r\\n                        [routerLink]=\\\"['/regiones/form', region.id]\\\"\\r\\n                  >\\r\\n                    Editar\\r\\n        </button>\\r\\n          <button (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"btn btn-rounded btn-outline-dark btn-xs\\\" data-dismiss=\\\"modal\\\">\\r\\n            Close\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<ul class=\\\"alert alert-danger\\\" *ngIf=\\\"errores?.length>0\\\" >\\r\\n  <li  *ngFor=\\\"let err of errores\\\" >\\r\\n    {{err}}\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"card bg-dark text-white\\\">\\r\\n<div class=\\\"card-header\\\">\\r\\n  <h4 class=\\\"card-title\\\">\\r\\n    <strong>\\r\\n      {{titulo}}:\\r\\n    </strong>\\r\\n  </h4>\\r\\n</div>\\r\\n<div class=\\\"card-body\\\">\\r\\n  <form #regionForm=\\\"ngForm\\\" >\\r\\n     <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"nombre\\\" class=\\\"col-form-label col-sm-2 \\\">Barrio </label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                [(ngModel)]=\\\"region.nombre\\\"\\r\\n                style=\\\"text-transform:uppercase;\\\"\\r\\n                placeholder=\\\"Dije Nombre del Barrio, Vereda y/o Corregimiento\\\"\\r\\n                id=\\\"nombre\\\"\\r\\n                name=\\\"nombre\\\"\\r\\n                minlength=\\\"3\\\"\\r\\n                maxlength=\\\"20\\\"\\r\\n                #nombre=\\\"ngModel\\\"\\r\\n                ng-model=\\\"nombre\\\"\\r\\n                requiered>\\r\\n                <div *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\"\\r\\n                        class=\\\"alert alert-danger\\\">\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.required\\\" >\\r\\n                    Nombre es Requerido\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.minlength\\\" >\\r\\n                    Nombre debe contener minimo 3 caracteres\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.maxlength\\\" >\\r\\n                    Nombre debe contener maximo 20 caracteres\\r\\n                  </div>\\r\\n              </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  role=\\\"button\\\"\\r\\n                  (click)=\\\"create()\\\"\\r\\n                  *ngIf=\\\"!region.id else elseBlock\\\"\\r\\n                  [disabled]=\\\"!regionForm.form.valid\\\" >\\r\\n            Crear\\r\\n          </button>\\r\\n          <ng-template #elseBlock>\\r\\n              <button class=\\\"btn btn-primary\\\"\\r\\n                  role=\\\"button\\\"\\r\\n                  (click)=\\\"update()\\\"\\r\\n                  [disabled]=\\\"!regionForm.form.valid\\\">\\r\\n            Actualizar\\r\\n          </button>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n  </form>\\r\\n</div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n <app-detalle-region\\r\\n      *ngIf=\\\"regionSelecionado\\\"\\r\\n      [region]=\\\"regionSelecionado\\\">\\r\\n</app-detalle-region>\\r\\n<div class=\\\"card  mb-3\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\"><h3><strong>{{titulo}}</strong></h3></div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado de Barrios</h4>\\r\\n    <div class=\\\"my-2 text-left\\\">\\r\\n      <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n              class=\\\"btn btn-rounded btn-outline-info btn-xs\\\"\\r\\n              type=\\\"button\\\"\\r\\n              [routerLink]=\\\"['/regiones/form']\\\"\\r\\n      >\\r\\n        Crear Barrio\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-info\\\"\\r\\n        *ngIf=\\\"regiones?.length == 0\\\" >\\r\\n        <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n    </div>\\r\\n    <table class='table table-bordered table-striped'\\r\\n                  *ngIf=\\\"regiones?.length>0\\\" >\\r\\n      <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Nombre</th>\\r\\n          <th>Fec. Creacion</th>\\r\\n          <th >Editar</th>\\r\\n          <!-- <th >Eliminar</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let region of regiones\\\" >\\r\\n          <td style=\\\"width: 64px; cursor: pointer;\\\"\\r\\n          (click)=\\\"abrirModal(region)\\\"\\r\\n          >Ver</td>\\r\\n              <td>{{region.nombre}}</td>\\r\\n                  <td>{{region.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n                  <td>\\r\\n                    <button type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n                        [routerLink]=\\\"['/regiones/form', region.id]\\\"\\r\\n                        >\\r\\n                      Editar\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <!-- <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                      <button type=\\\"button\\\"\\r\\n                          class=\\\"btn btn-outline-danger\\\"\\r\\n                          (click)=\\\"delete(region)\\\"\\r\\n                          >\\r\\n                        Eliminar\\r\\n                      </button>\\r\\n                  </td> -->\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n      [paginador]=\\\"paginador\\\"\\r\\n      [link]=\\\"link\\\"\\r\\n    >\\r\\n  </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalServicioService.modal\\\">\\r\\n  <div  style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <strong>\\r\\n              {{titulo}}\\r\\n            </strong>\\r\\n          </h4>\\r\\n          <button (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <ul *ngIf=\\\"servicio\\\"  class=\\\"list-group text-dark mb-1\\\">\\r\\n                  <!-- <li class=\\\"list-group-item active\\\">{{producto.categoria.nombre | uppercase}}</li> -->\\r\\n                  <!-- <li class=\\\"list-group-item \\\">{{producto.codigo}}</li> -->\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Servicio: </strong>\\r\\n                    {{servicio.nombre | uppercase}}\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Descripcion: </strong>\\r\\n                    {{servicio.descripcion}}</li>\\r\\n                  <li *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                      class=\\\"list-group-item\\\">\\r\\n                      <strong>Costo Repuesto: </strong>\\r\\n                      {{formatNumber(servicio.costoRepuesto)}}</li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Costo Servicio: </strong>\\r\\n                    {{formatNumber(servicio.costoServicio)}}\\r\\n                  </li>\\r\\n\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Ult. Movimiento: </strong>\\r\\n                    {{servicio.createAt | date:\\\"fullDate\\\"}}\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer mt-0\\\">\\r\\n          <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          class=\\\"btn btn-rounded btn-outline-secondary btn-xs mx-2\\\"\\r\\n                          [routerLink]=\\\"['/servicios/form', servicio.id]\\\"\\r\\n                    >\\r\\n                      Editar\\r\\n                    </button>\\r\\n          <button (click)=\\\"cerrarModal()\\\"\\r\\n            type=\\\"button\\\" class=\\\"btn btn-rounded btn-outline-dark btn-xs\\\"\\r\\n            data-dismiss=\\\"modal\\\">Cerrar\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalServicioBuscarService.modal\\\">\\r\\n  <app-detalle-servicio\\r\\n      *ngIf=\\\"servicioSelecionado\\\"\\r\\n      [servicio]=\\\"servicioSelecionado\\\"></app-detalle-servicio>\\r\\n  <div  style=\\\"display: block;\\\"\\r\\n      class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\">{{titulo}}</h5>\\r\\n          <button\\r\\n            (click)=\\\"cerrarModalBusquedaServicio()\\\"\\r\\n            type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm\\\">\\r\\n                <form #productoForm=\\\"ngForm\\\">\\r\\n                  <div class=\\\"form-group row example-form\\\">\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                              <input type=\\\"text\\\" placeholder=\\\"Digite Nombre Del Servicio\\\"\\r\\n                                      aria-label=\\\"Servicios\\\"\\r\\n                                      matInput [formControl]=\\\"autocompleteControl\\\"\\r\\n                                      [matAutocomplete]=\\\"auto\\\">\\r\\n                              <mat-autocomplete #auto=\\\"matAutocomplete\\\"\\r\\n                                      [displayWith]=\\\"mostrarNombre\\\"\\r\\n                                      (optionSelected)=\\\"seleccionarServicio($event)\\\">\\r\\n                                <mat-option *ngFor=\\\"let servicio of serviciosFiltrados | async\\\"\\r\\n                                          [value]=\\\"servicio\\\">\\r\\n                                          {{servicio.nombre}} \\r\\n                                </mat-option>\\r\\n                              </mat-autocomplete>\\r\\n                            </mat-form-field>\\r\\n                            <div class=\\\"alert alert-danger\\\"\\r\\n                                  *ngIf=\\\"autocompleteControl.invalid && productoForm.submitted\\\">\\r\\n                              Debe Agregar Producto\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n\\r\\n                    <table class=\\\"table table-striped table-hover table-sm\\\" >\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th>Detalles</th>\\r\\n                          <th>Nombre</th>\\r\\n                          <th>Costo Repuesto</th>\\r\\n                          <th>Costo Servicio</th>\\r\\n                         </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr  *ngIf=\\\"servicio\\\" >\\r\\n                          <td>\\r\\n                            <img   (click)=\\\"abrirModal(servicio)\\\"\\r\\n                                src=\\\"http://localhost:8080/images/no-producto.png\\\"\\r\\n                            alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                            style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n                        </td>\\r\\n                          <td>{{servicio.nombre | uppercase}}</td>\\r\\n                          <td>{{formatNumber(servicio.costoRepuesto)}}</td>\\r\\n                          <td>{{formatNumber(servicio.costoServicio)}}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <button (click)=\\\"cerrarModalBusquedaServicio()\\\"\\r\\n                type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">\\r\\n                Cerrar\\r\\n              </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<ul class=\\\"alert alert-danger\\\" *ngIf=\\\"errores?.length>0\\\" >\\r\\n  <li  *ngFor=\\\"let err of errores\\\" >\\r\\n    {{err}}\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"card bg-dark text-white\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h4 class=\\\"card-title\\\">\\r\\n      <strong>\\r\\n        {{titulo}}:\\r\\n      </strong>\\r\\n    </h4>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form #servicioForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"nombre\\\" class=\\\"col-form-label col-sm-2\\\">Nombre </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  [(ngModel)]=\\\"servicio.nombre\\\"\\r\\n                  name=\\\"nombre\\\"\\r\\n                  minlength=\\\"3\\\"\\r\\n                  maxlength=\\\"50\\\"\\r\\n                  #nombre=\\\"ngModel\\\"\\r\\n                  requiered>\\r\\n              <div *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\"\\r\\n                   class=\\\"alert alert-danger\\\">\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.required\\\" >\\r\\n                    Nombre es Requerido\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.minlength\\\" >\\r\\n                    Nombre debe contener minimo 3 caracteres\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.maxlength\\\" >\\r\\n                    Nombre debe contener maximo 50 caracteres\\r\\n                  </div>\\r\\n              </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"descripcion\\\" class=\\\"col-form-label col-sm-2\\\">Descripcion </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <textarea class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"servicio.descripcion\\\"\\r\\n                    name=\\\"descripcion\\\"\\r\\n                    >\\r\\n          </textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"costoRepuesto\\\" class=\\\"col-form-label col-sm-2\\\">Costo Repuesto:  $ </label>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <input type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                  [(ngModel)]=\\\"servicio.costoRepuesto\\\"\\r\\n                  name=\\\"costoRepuesto\\\"\\r\\n                  minlength=\\\"1\\\"\\r\\n                  #costoRepuesto=\\\"ngModel\\\"\\r\\n                  requiered>\\r\\n                 <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"costoRepuesto.invalid \\\" >\\r\\n                    <div class=\\\"\\\" *ngIf=\\\"!!costoRepuesto?.errors.requiered\\\" >\\r\\n                      Costo Repuesto es Requerido\\r\\n                    </div>\\r\\n                </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label for=\\\"costoServicio\\\" class=\\\"col-form-label col-sm-2\\\">Costo Servicio:  $ </label>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <input type=\\\"number\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"servicio.costoServicio\\\"\\r\\n                    name=\\\"costoServicio\\\"\\r\\n                    minlength=\\\"1\\\"\\r\\n                    #costoServicio=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"costoServicio.invalid\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"costoServicio?.errors.requiered\\\" >\\r\\n                        Costo Servicio es Requerido\\r\\n                      </div>\\r\\n                  </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n              <button class=\\\"btn btn-primary\\\"\\r\\n                      role=\\\"button\\\"\\r\\n                      (click)=\\\"create()\\\"\\r\\n                      *ngIf=\\\"!servicio.id else elseBlock\\\"\\r\\n                      [disabled]=\\\"!servicioForm.form.valid\\\">\\r\\n                Crear\\r\\n              </button>\\r\\n              <ng-template #elseBlock>\\r\\n                  <button class=\\\"btn btn-primary\\\"\\r\\n                      role=\\\"button\\\"\\r\\n                      (click)=\\\"update()\\\"\\r\\n                      [disabled]=\\\"!servicioForm.form.valid\\\">\\r\\n                Actualizar\\r\\n              </button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-servicio-buscar></app-servicio-buscar>\\r\\n<app-detalle-servicio\\r\\n      *ngIf=\\\"servicioSelecionado\\\"\\r\\n      [servicio]=\\\"servicioSelecionado\\\">\\r\\n</app-detalle-servicio>\\r\\n<div class=\\\"card bg-light mb-3\\\">\\r\\n  <div class=\\\"card-header\\\"><h3><strong>Servicios</strong></h3></div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado de Servicios</h4>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n        <div class=\\\"my-2 text-left\\\">\\r\\n          <button class=\\\"btn btn-rounded btn-outline-primary btn-xs\\\"\\r\\n          type=\\\"button\\\"\\r\\n          (click)=\\\"abrirModalServicioBuscar()\\\"\\r\\n          >\\r\\n            Buscar Servicio\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <div class=\\\"my-2 text-left\\\">\\r\\n          <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                class=\\\"btn btn-rounded btn-outline-info btn-xs\\\"\\r\\n                type=\\\"button\\\"\\r\\n                 [routerLink]=\\\"['/servicios/form']\\\"\\r\\n        >\\r\\n          Crear Servicios\\r\\n        </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n       <div class=\\\"alert alert-info\\\"\\r\\n        *ngIf=\\\"servicios?.length == 0\\\" >\\r\\n        <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n    </div>\\r\\n    <table class='table table-bordered table-striped'\\r\\n                    *ngIf=\\\"servicios?.length>0\\\" >\\r\\n      <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Nombre</th>\\r\\n          <th>Precio Repuesto</th>\\r\\n          <th>Precio Servicio</th>\\r\\n          <th>Descripcion</th>\\r\\n          <th>Fec. Ultimo Mov.</th>\\r\\n          <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Editar</th>\\r\\n          <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let servicio of servicios\\\" >\\r\\n            <td>\\r\\n                <img (click)=\\\"abrirModal(servicio)\\\"\\r\\n                    src=\\\"http://localhost:8080/images/no-producto.png\\\"\\r\\n                    alt=\\\"no-producto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                    style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n            </td>\\r\\n            <!-- <td>{{producto.codigo }}</td> -->\\r\\n          <td>{{servicio.nombre | uppercase}}</td>\\r\\n          <td >{{formatNumber(servicio.costoRepuesto)}}</td>\\r\\n          <td >{{formatNumber(servicio.costoServicio)}}</td>\\r\\n          <td>{{servicio.descripcion}}</td>\\r\\n          <td>{{servicio.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n          <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                        <button type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n                            [routerLink]=\\\"['/servicios/form', servicio.id]\\\"\\r\\n                            >\\r\\n                          Editar\\r\\n                        </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n      [paginador]=\\\"paginador\\\"\\r\\n      [link]=\\\"link\\\">\\r\\n    </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\"  *ngIf=\\\"modalSucursalService.modal\\\">\\r\\n    <div style=\\\"display: block;\\\"\\r\\n        class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n      <div class=\\\"modal-dialog modal-lg \\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header bg-dark text-muted\\\">\\r\\n            <h4 class=\\\"modal-title\\\">\\r\\n              <strong>\\r\\n                {{titulo}}\\r\\n              </strong>\\r\\n            </h4>\\r\\n            <button (click)=\\\"cerrarModal()\\\"\\r\\n              type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <ul *ngIf=\\\"sucursal\\\"  class=\\\"list-group text-dark mb-3\\\">\\r\\n                    <li class=\\\"list-group-item active bg-dark text-muted\\\">\\r\\n                      {{sucursal.nombre}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Nombre Sucursal: </strong>\\r\\n                      {{sucursal.sede}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Propietario: </strong>\\r\\n                      {{sucursal.propietario}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Nit: </strong>\\r\\n                      {{sucursal.nit}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Regimen: </strong>\\r\\n                      {{sucursal.regimen}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Ubicacion: </strong>\\r\\n                      {{sucursal.geoposicion}}\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <ul *ngIf=\\\"sucursal\\\"  class=\\\"list-group text-dark mb-3\\\">\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Direccion: </strong>\\r\\n                      {{sucursal.direccion}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Telefono: </strong>\\r\\n                      {{sucursal.telefono}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>WhatsApp: </strong>\\r\\n                      {{sucursal.celular1}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Celular: </strong>\\r\\n                      {{sucursal.celular2}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Facebook: </strong>\\r\\n                      {{sucursal.facebook}}\\r\\n                    </li>\\r\\n                    <li class=\\\"list-group-item\\\">\\r\\n                      <strong>Instagram: </strong>\\r\\n                      {{sucursal.instagram}}\\r\\n                    </li>\\r\\n                  </ul>\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button\\r\\n                          type=\\\"button\\\"\\r\\n                          class=\\\"btn btn-rounded btn-outline-secondary btn-xs mx-2\\\"\\r\\n                          [routerLink]=\\\"['/sucursales/form', sucursal.id]\\\"\\r\\n                    >\\r\\n                      Editar\\r\\n          </button>\\r\\n            <button (click)=\\\"cerrarModal()\\\"\\r\\n              type=\\\"button\\\" class=\\\"btn btn-rounded btn-outline-dark btn-xs\\\" data-dismiss=\\\"modal\\\">\\r\\n              Close\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<ul class=\\\"alert alert-danger\\\" *ngIf=\\\"errores?.length>0\\\" >\\r\\n  <li  *ngFor=\\\"let err of errores\\\" >\\r\\n    {{err}}\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"card bg-dark text-white\\\">\\r\\n<div class=\\\"card-header\\\">\\r\\n  <h4 class=\\\"card-title\\\">\\r\\n    <strong>\\r\\n      {{titulo}}:\\r\\n    </strong>\\r\\n  </h4>\\r\\n</div>\\r\\n<div class=\\\"card-body\\\">\\r\\n  <form #sucursalForm=\\\"ngForm\\\" >\\r\\n     <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"nombre\\\" class=\\\"col-form-label col-sm-2 \\\">Sede Sistema </label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                [(ngModel)]=\\\"sucursal.nombre\\\"\\r\\n                style=\\\"text-transform:uppercase;\\\"\\r\\n                placeholder=\\\"Digite Nombre de Sucursalpara el sistema\\\"\\r\\n                id=\\\"nombre\\\"\\r\\n                name=\\\"nombre\\\"\\r\\n                minlength=\\\"3\\\"\\r\\n                maxlength=\\\"20\\\"\\r\\n                #nombre=\\\"ngModel\\\"\\r\\n                ng-model=\\\"nombre\\\"\\r\\n                requiered>\\r\\n                <div *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\"\\r\\n                        class=\\\"alert alert-danger\\\">\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.required\\\" >\\r\\n                    Nombre es Requerido\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.minlength\\\" >\\r\\n                    Nombre debe contener minimo 3 caracteres\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.maxlength\\\" >\\r\\n                    Nombre debe contener maximo 20 caracteres\\r\\n                  </div>\\r\\n              </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"sede\\\" class=\\\"col-form-label col-sm-2 \\\">Nombre Sucursal </label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                [(ngModel)]=\\\"sucursal.sede\\\"\\r\\n                style=\\\"text-transform:uppercase;\\\"\\r\\n                placeholder=\\\"Digite Nombre de Sucursal\\\"\\r\\n                id=\\\"sede\\\"\\r\\n                name=\\\"sede\\\"\\r\\n                minlength=\\\"3\\\"\\r\\n                maxlength=\\\"50\\\"\\r\\n                #sede=\\\"ngModel\\\"\\r\\n                ng-model=\\\"sede\\\"\\r\\n                requiered>\\r\\n                <div *ngIf=\\\"sede.invalid && (sede.dirty || sede.touched)\\\"\\r\\n                        class=\\\"alert alert-danger\\\">\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"sede?.errors?.required\\\" >\\r\\n                    Nombre es Requerido\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"sede?.errors?.minlength\\\" >\\r\\n                    Nombre debe contener minimo 3 caracteres\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"sede?.errors?.maxlength\\\" >\\r\\n                    Nombre debe contener maximo 50 caracteres\\r\\n                  </div>\\r\\n              </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"propietario\\\" class=\\\"col-form-label col-sm-2 \\\">Nombre Propietario </label>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                [(ngModel)]=\\\"sucursal.propietario\\\"\\r\\n                style=\\\"text-transform:uppercase;\\\"\\r\\n                placeholder=\\\"Digite Nombre del Propietario\\\"\\r\\n                id=\\\"propietario\\\"\\r\\n                name=\\\"propietario\\\"\\r\\n                minlength=\\\"3\\\"\\r\\n                maxlength=\\\"50\\\"\\r\\n                #propietario=\\\"ngModel\\\"\\r\\n                ng-model=\\\"propietario\\\"\\r\\n                requiered>\\r\\n                <div *ngIf=\\\"propietario.invalid && (propietario.dirty || propietario.touched)\\\"\\r\\n                        class=\\\"alert alert-danger\\\">\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"propietario?.errors?.required\\\" >\\r\\n                    Nombre es Requerido\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"propietario?.errors?.minlength\\\" >\\r\\n                    Nombre debe contener minimo 3 caracteres\\r\\n                  </div>\\r\\n                  <div class=\\\"\\\" *ngIf=\\\"propietario?.errors?.maxlength\\\" >\\r\\n                    Nombre debe contener maximo 50 caracteres\\r\\n                  </div>\\r\\n              </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"nit\\\" class=\\\"col-form-label col-sm-2 \\\">Nit </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.nit\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Nit\\\"\\r\\n                  id=\\\"nit\\\"\\r\\n                  name=\\\"nit\\\"\\r\\n                  #nit=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"nit\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"regimen\\\" class=\\\"col-form-label col-sm-2 \\\">Regimen </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.regimen\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Nit\\\"\\r\\n                  id=\\\"regimen\\\"\\r\\n                  name=\\\"regimen\\\"\\r\\n                  #regimen=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"regimen\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"geoposicion\\\" class=\\\"col-form-label col-sm-2 \\\">Dpto/Pais Sede </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.geoposicion\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Departamento - Pais\\\"\\r\\n                  id=\\\"geoposicion\\\"\\r\\n                  name=\\\"geoposicion\\\"\\r\\n                  #geoposicion=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"geoposicion\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"direccion\\\" class=\\\"col-form-label col-sm-2 \\\">Direccion </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.direccion\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Direccion\\\"\\r\\n                  id=\\\"direccion\\\"\\r\\n                  name=\\\"direccion\\\"\\r\\n                  #direccion=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"direccion\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"telefono\\\" class=\\\"col-form-label col-sm-2 \\\">Telefono Fijo </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.telefono\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Numero telefono fijo\\\"\\r\\n                  id=\\\"telefono\\\"\\r\\n                  name=\\\"telefono\\\"\\r\\n                  #telefono=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"telefono\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"celular1\\\" class=\\\"col-form-label col-sm-2 \\\">WhatsApp </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.celular1\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Numero telefono\\\"\\r\\n                  id=\\\"celular1\\\"\\r\\n                  name=\\\"celular1\\\"\\r\\n                  #celular1=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"celular1\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"celular2\\\" class=\\\"col-form-label col-sm-2 \\\">Celular </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.celular2\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Numero Whatsapp\\\"\\r\\n                  id=\\\"celular2\\\"\\r\\n                  name=\\\"celular2\\\"\\r\\n                  #telefono=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"celular2\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"facebook\\\" class=\\\"col-form-label col-sm-2 \\\">Facebook </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.facebook\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Numero Whatsapp\\\"\\r\\n                  id=\\\"facebook\\\"\\r\\n                  name=\\\"facebook\\\"\\r\\n                  #telefono=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"facebook\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"instagram\\\" class=\\\"col-form-label col-sm-2 \\\">Instagram </label>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                  [(ngModel)]=\\\"sucursal.instagram\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Numero Whatsapp\\\"\\r\\n                  id=\\\"instagram\\\"\\r\\n                  name=\\\"instagram\\\"\\r\\n                  #telefono=\\\"ngModel\\\"\\r\\n                  ng-model=\\\"instagram\\\"\\r\\n                  >\\r\\n        </div>\\r\\n      </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  role=\\\"button\\\"\\r\\n                  (click)=\\\"create()\\\"\\r\\n                  *ngIf=\\\"!sucursal.id else elseBlock\\\"\\r\\n                  [disabled]=\\\"!sucursalForm.form.valid\\\" >\\r\\n            Crear\\r\\n          </button>\\r\\n          <ng-template #elseBlock>\\r\\n              <button class=\\\"btn btn-primary\\\"\\r\\n                  role=\\\"button\\\"\\r\\n                  (click)=\\\"update()\\\"\\r\\n                  [disabled]=\\\"!sucursalForm.form.valid\\\">\\r\\n            Actualizar\\r\\n          </button>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n  </form>\\r\\n</div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<app-detalle-sucursal\\r\\n*ngIf=\\\"sucursalSelecionado\\\"\\r\\n[sucursal]=\\\"sucursalSelecionado\\\">\\r\\n</app-detalle-sucursal>\\r\\n<div class=\\\"card  mb-3\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\"><h3><strong>{{titulo}}</strong></h3></div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado de Sucursales</h4>\\r\\n    <div class=\\\"my-2 text-left\\\">\\r\\n      <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n              class=\\\"btn btn-rounded btn-outline-info btn-xs\\\"\\r\\n              type=\\\"button\\\"\\r\\n              [routerLink]=\\\"['/sucursales/form']\\\"\\r\\n      >\\r\\n        Crear Sucursal\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"alert alert-info\\\"\\r\\n        *ngIf=\\\"sucursales?.length == 0\\\" >\\r\\n        <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n    </div>\\r\\n    <table class='table table-bordered table-striped'\\r\\n                  *ngIf=\\\"sucursales?.length>0\\\" >\\r\\n      <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Nombre</th>\\r\\n          <th>Fec. Creacion</th>\\r\\n          <th >Editar</th>\\r\\n          <!-- <th >Eliminar</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let sucursal of sucursales\\\" >\\r\\n          <td style=\\\"width: 64px; cursor: pointer;\\\"\\r\\n                    (click)=\\\"abrirModal(sucursal)\\\">Ver</td>\\r\\n              <td>{{sucursal.nombre}}</td>\\r\\n                  <td>{{sucursal.createAt | date:'EEEE dd, MMMM yyyy'}}</td>\\r\\n                  <td>\\r\\n                    <button type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n                        [routerLink]=\\\"['/sucursales/form', sucursal.id]\\\"\\r\\n                        >\\r\\n                      Editar\\r\\n                    </button>\\r\\n                  </td>\\r\\n                  <!-- <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                      <button type=\\\"button\\\"\\r\\n                          class=\\\"btn btn-outline-danger\\\"\\r\\n                          (click)=\\\"delete(region)\\\"\\r\\n                          >\\r\\n                        Eliminar\\r\\n                      </button>\\r\\n                  </td> -->\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n      [paginador]=\\\"paginador\\\"\\r\\n      [link]=\\\"link\\\"\\r\\n    >\\r\\n  </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"abrir-modal animacion fadeIn\\\" *ngIf=\\\"modalUserService.modal\\\">\\r\\n<div  style=\\\"display: block;\\\"\\r\\n    class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg \\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header bg-dark text-white-50\\\">\\r\\n          <h4 class=\\\"modal-title\\\">\\r\\n            <strong>\\r\\n              {{titulo}}\\r\\n            </strong>\\r\\n          </h4>\\r\\n        <button (click)=\\\"cerrarModal()\\\"\\r\\n          type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span class=\\\"text-white\\\" aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm\\\">\\r\\n              <ul *ngIf=\\\"user\\\"  class=\\\"list-group text-dark mb-1\\\">\\r\\n                  <li class=\\\"list-group-item active bg-dark text-muted\\\">\\r\\n                    <strong>Nick: </strong> {{user.username}}</li>\\r\\n                <li class=\\\"list-group-item \\\">\\r\\n                    <strong>Nombre: </strong>{{user.nombre | uppercase}}</li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                    <strong>Apellido: </strong>{{user.apellido | uppercase}}</li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                   <strong>Ubicación: </strong>{{user.region.nombre | uppercase}}</li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <strong>Email: </strong>{{user.email | uppercase}}</li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <strong>Fec. Nacimiento: </strong>{{user.fecha | date:\\\"fullDate\\\"}}</li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <strong>Fec. Creación: </strong>{{user.createAt | date:\\\"fullDate\\\"}}</li>\\r\\n\\r\\n              </ul>\\r\\n                <div class=\\\"input-group mb-1\\\">\\r\\n                    <div class=\\\"custom-file\\\">\\r\\n                      <input (change)=\\\"seleccionarFoto($event)\\\"\\r\\n                            type=\\\"file\\\" class=\\\"custom-file-input\\\"\\r\\n                            id=\\\"inputGroupFile04\\\" aria-describedby=\\\"inputGroupFileAddon04\\\">\\r\\n                      <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile04\\\">{{rutaFoto}}</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button (click)=\\\"subirFoto()\\\"\\r\\n                        [disabled]=\\\"!fotoSelecionada\\\"\\r\\n                        class=\\\"btn btn-outline-secondary\\\"\\r\\n                        type=\\\"button\\\" id=\\\"inputGroupFileAddon04\\\">Subir</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"progreso>0 \\\"  class=\\\"progress\\\" style=\\\"height: 40px;\\\">\\r\\n                      <div class=\\\"progress-bar progress-bar-striped\\\"\\r\\n                          role=\\\"progressbar\\\"\\r\\n                          [ngStyle]= \\\"{width: progreso+'%'}\\\"\\r\\n                          attr.aria-valuenow=\\\"{{progreso}}\\\" aria-valuemin=\\\"0\\\"\\r\\n                          aria-valuemax=\\\"100\\\">\\r\\n                          {{progreso}}%\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-sm\\\">\\r\\n              <img *ngIf=\\\"user?.foto\\\"  src=\\\"http://localhost:8080/api/uploads/imguser/{{user.foto}}\\\"\\r\\n                  alt=\\\"{{user.foto}}\\\" class=\\\"img-thumbnail rounded\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer mt-0 bg-light\\\">\\r\\n        <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n                        [routerLink]=\\\"['/users/form', user.id]\\\"\\r\\n                  >\\r\\n                    Editar\\r\\n                  </button>\\r\\n        <button (click)=\\\"cerrarModal()\\\"\\r\\n                  type=\\\"button\\\" class=\\\"btn btn-rounded btn-outline-dark btn-xs\\\"\\r\\n                        data-dismiss=\\\"modal\\\">\\r\\n                  Cerrar\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<ul class=\\\"alert alert-danger\\\" *ngIf=\\\"errores?.length>0\\\" >\\r\\n  <li  *ngFor=\\\"let err of errores\\\" >\\r\\n    {{err}}\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"card bg-dark  text-white-50\\\">\\r\\n<div class=\\\"card-header\\\">\\r\\n  <h4 class=\\\"card-title\\\">\\r\\n    <strong>\\r\\n      {{titulo}}:\\r\\n    </strong>\\r\\n  </h4>\\r\\n</div>\\r\\n<div class=\\\"card-body\\\">\\r\\n  <div class=\\\"card-title my-3\\\">\\r\\n    <h4>\\r\\n      Los campos con (*) son requeridos.\\r\\n    </h4>\\r\\n  </div>\\r\\n  <form #userForm=\\\"ngForm\\\" >\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"username\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Nick (*) : </label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"user.username\\\"\\r\\n                      name=\\\"username\\\"\\r\\n                      placeholder=\\\"Digete Nick del Usuario\\\"\\r\\n                      minlength=\\\"4\\\"\\r\\n                      maxlength=\\\"15\\\"\\r\\n                      #username=\\\"ngModel\\\"\\r\\n                      requiered>\\r\\n                      <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"username.invalid &&\\r\\n                      (username.dirty || username.touched)\\\" >\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"username?.errors.requiered\\\" >\\r\\n                          Nick es Requerido\\r\\n                        </div>\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"username?.errors.minlength\\\" >\\r\\n                          Nick debe contener minimo 4 caracteres\\r\\n                        </div>\\r\\n                        <div class=\\\"\\\" *ngIf=\\\"username?.errors?.maxlength\\\" >\\r\\n                          Nombre debe contener maximo 15 caracteres\\r\\n                        </div>\\r\\n                    </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"password\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Password (*) :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"password\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    minlength=\\\"8\\\"\\r\\n                    maxlength=\\\"100\\\"\\r\\n                    [(ngModel)]=\\\"user.password\\\"\\r\\n                    placeholder=\\\"Digite una Contraseña de minimo 8 Caracteres\\\"\\r\\n                    name=\\\"password\\\"\\r\\n                    #password=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"password.invalid &&\\r\\n                     (password.dirty || password.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"password?.errors.requiered\\\" >\\r\\n                        Password es Requerido\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"password?.errors.minlength\\\" >\\r\\n                        Password debe contener minimo 8 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"password?.errors.maxlength\\\" >\\r\\n                        Documento debe contener maximo 100 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"nombre\\\" class=\\\"col-form-label col-sm-4 text-right \\\">Nombre (*) : </label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control \\\"\\r\\n                    style=\\\"text-transform:uppercase;\\\"\\r\\n                    [(ngModel)]=\\\"user.nombre\\\"\\r\\n                    placeholder=\\\"Digete Nombre(s) del Usuario, solo letras\\\"\\r\\n                    id=\\\"nombre\\\"\\r\\n                    name=\\\"nombre\\\"\\r\\n                    minlength=\\\"3\\\"\\r\\n                    maxlength=\\\"20\\\"\\r\\n                    #nombre=\\\"ngModel\\\"\\r\\n                    ng-model=\\\"nombre\\\"\\r\\n                    requiered>\\r\\n                    <div *ngIf=\\\"nombre.invalid && (nombre.dirty || nombre.touched)\\\"\\r\\n                            class=\\\"alert alert-danger\\\">\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.required\\\" >\\r\\n                        Nombre es Requerido\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.minlength\\\" >\\r\\n                        Nombre(s) debe contener minimo 3 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"nombre?.errors?.maxlength\\\" >\\r\\n                        Nombre(s) debe contener maximo 20 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"apellido\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Apellido (*) : </label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    style=\\\"text-transform:uppercase;\\\"\\r\\n                    placeholder=\\\"Digete Apellido(s) del Usuario, solo letras\\\"\\r\\n                    [(ngModel)]=\\\"user.apellido\\\"\\r\\n                    name=\\\"apellido\\\"\\r\\n                    minlength=\\\"3\\\"\\r\\n                    maxlength=\\\"20\\\"\\r\\n                    #apellido=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"apellido.invalid &&\\r\\n                     (apellido.dirty || apellido.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"apellido?.errors.requiered\\\" >\\r\\n                        Apellido es Requerido\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"apellido?.errors.minlength\\\" >\\r\\n                        Apellido debe contener minimo 3 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"apellido?.errors.maxlength\\\" >\\r\\n                        Apellido debe contener maximo 20 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"documento\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Doc. Identidad (*) :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\"\\r\\n                  [(ngModel)]=\\\"user.documento\\\"\\r\\n                  name=\\\"documento\\\"\\r\\n                  placeholder=\\\"Solo Numeros, No digite( . / * - # ,) \\\"\\r\\n                  minlength=\\\"8\\\"\\r\\n                  maxlength=\\\"10\\\"\\r\\n                  #documento=\\\"ngModel\\\"\\r\\n                  requiered>\\r\\n                  <div class=\\\"alert alert-danger pt-2\\\"\\r\\n                        *ngIf=\\\"documento.invalid && (documento.dirty || documento.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"documento?.errors.requiered\\\" >\\r\\n                        Documento es Requerido\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"documento?.errors.minlength\\\" >\\r\\n                        Documento debe contener minimo 8 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"documento?.errors.maxlength\\\" >\\r\\n                        Documento debe contener maximo 10 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"email\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Email (*) :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"email\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  style=\\\"text-transform:uppercase;\\\"\\r\\n                  placeholder=\\\"Digite Email \\\"\\r\\n                  [(ngModel)]=\\\"user.email\\\"\\r\\n                  name=\\\"email\\\"\\r\\n                    #email=\\\"ngModel\\\"\\r\\n                    >\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"email.invalid &&\\r\\n                      (email.dirty || email.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"email?.errors.email\\\" >\\r\\n                       Formato de Email Invalido\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"telefono\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Telefono Fijo :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"user.telefono\\\"\\r\\n                    placeholder=\\\"Digite un numero de telefono fijo \\\"\\r\\n                    name=\\\"telefono\\\"\\r\\n                    minlength=\\\"7\\\"\\r\\n                    maxlength=\\\"7\\\"\\r\\n                    #telefono=\\\"ngModel\\\"\\r\\n                    >\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\" *ngIf=\\\"telefono.invalid &&\\r\\n                            (telefono.dirty || telefono.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"telefono?.errors.minlength\\\" >\\r\\n                        Telefono debe contener minimo 7 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"telefono?.errors.maxlength\\\" >\\r\\n                        Telefono debe contener maximo 7 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"celular1\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Celular 1 (*) : </label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"user.celular1\\\"\\r\\n                    name=\\\"celular1\\\"\\r\\n                    minlength=\\\"10\\\"\\r\\n                    maxlength=\\\"10\\\"\\r\\n                    #celular1=\\\"ngModel\\\"\\r\\n                    placeholder=\\\"Digite un numero de Celular principal, Ej: 315..... \\\"\\r\\n                    requiered>\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\"\\r\\n                        *ngIf=\\\"celular1.invalid && (celular1.dirty || celular1.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"celular1?.errors.requiered\\\" >\\r\\n                        Celular 1 es Requerido\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"celular1?.errors.minlength\\\" >\\r\\n                        Celular 1 debe contener minimo 10 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"celular1?.errors.maxlength\\\" >\\r\\n                        Celular 1 debe contener maximo 10 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"celular2\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Celular 2 :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"user.celular2\\\"\\r\\n                    name=\\\"celular2\\\"\\r\\n                    placeholder=\\\"Digite un numero de Celular Secundario (opciona), Ej: 301..... \\\"\\r\\n                    minlength=\\\"10\\\"\\r\\n                    maxlength=\\\"10\\\"\\r\\n                    #celular2=\\\"ngModel\\\">\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\"\\r\\n                        *ngIf=\\\"celular2.invalid && (celular2.dirty || celular2.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"celular2?.errors.minlength\\\" >\\r\\n                        Celular 2 debe contener minimo 10 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"celular2?.errors.maxlength\\\" >\\r\\n                        Celular 2 debe contener maximo 10 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"direccion\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Direccion :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n            <input type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    style=\\\"text-transform:uppercase;\\\"\\r\\n                    [(ngModel)]=\\\"user.direccion\\\"\\r\\n                    name=\\\"direccion\\\"\\r\\n                    placeholder=\\\"Digite direccion de ubicacion, Ej: calle-5 av-10 # 4-25 \\\"\\r\\n                    minlength=\\\"3\\\"\\r\\n                    maxlength=\\\"50\\\"\\r\\n                    #direccion=\\\"ngModel\\\"\\r\\n                    requiered>\\r\\n                    <div class=\\\"alert alert-danger pt-2\\\"\\r\\n                      *ngIf=\\\"direccion.invalid && (direccion.dirty || direccion.touched)\\\" >\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"direccion?.errors.requiered\\\" >\\r\\n                        Direccion es Requerido\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"direccion?.errors.minlength\\\" >\\r\\n                        Direccion debe contener minimo 3 caracteres\\r\\n                      </div>\\r\\n                      <div class=\\\"\\\" *ngIf=\\\"apellido?.errors.maxlength\\\" >\\r\\n                        Direccion debe contener direccion 50 caracteres\\r\\n                      </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"region\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Ubicacion (*) :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n              <select  class=\\\"form-control\\\"\\r\\n                        [compareWith]=\\\"compararRegion\\\"\\r\\n                        [(ngModel)]=\\\"user.region\\\" name=\\\"region\\\"\\r\\n                        style=\\\"width: 730px;\\\">\\r\\n                        <option\\r\\n                            [ngValue]=\\\"undefined\\\">\\r\\n                            --- Selecionar Ubicacion ---\\r\\n                        </option>\\r\\n                        <option *ngFor=\\\"let region of regiones\\\"\\r\\n                        [ngValue]=\\\"region\\\">{{region.nombre | uppercase}}</option>\\r\\n              </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"fecha\\\" class=\\\"col-form-label col-sm-4 text-right\\\">Fec. Nacimiento (*) :</label>\\r\\n          <div class=\\\"col-sm-8\\\">\\r\\n              <input [matDatepicker]=\\\"fecha\\\"\\r\\n                [min]=\\\"minDate\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                [max]=\\\"maxDate\\\"\\r\\n                [(ngModel)]=\\\"user.fecha\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                name=\\\"fecha\\\"\\r\\n                placeholder=\\\"Selecione su fecha de nacimiento\\\"\\r\\n                requiered\\r\\n                style=\\\"display:inline; width: 250px;\\\">\\r\\n               <mat-datepicker-toggle\\r\\n                matSuffix [for]=\\\"fecha\\\">\\r\\n                </mat-datepicker-toggle>\\r\\n              <mat-datepicker  #fecha></mat-datepicker>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <button class=\\\"btn btn-primary\\\"\\r\\n                  role=\\\"button\\\"\\r\\n                  (click)=\\\"create()\\\"\\r\\n                  *ngIf=\\\"!user.id else elseBlock\\\"\\r\\n                  [disabled]=\\\"!userForm.form.valid\\\" >\\r\\n            Crear\\r\\n          </button>\\r\\n          <ng-template #elseBlock>\\r\\n              <button class=\\\"btn btn-primary\\\"\\r\\n                  role=\\\"button\\\"\\r\\n                  (click)=\\\"update()\\\"\\r\\n                  [disabled]=\\\"!userForm.form.valid\\\">\\r\\n            Actualizar\\r\\n          </button>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </div>\\r\\n  </form>\\r\\n</div>\\r\\n</div>\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<app-detalle-user\\r\\n      *ngIf=\\\"userSelecionado\\\"\\r\\n      [user]=\\\"userSelecionado\\\"></app-detalle-user>\\r\\n<div class=\\\"card  mb-3\\\">\\r\\n  <div class=\\\"card-header bg-dark text-muted\\\"><h3><strong>{{titulo}}</strong></h3></div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-muted\\\">Listado Usuarios</h4>\\r\\n    <!-- <div class=\\\"my-2 text-left\\\">\\r\\n        <button *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\"\\r\\n                class=\\\"btn btn-rounded btn-outline-primary\\\"\\r\\n                type=\\\"button\\\"\\r\\n                [routerLink]=\\\"['/users/form']\\\"\\r\\n        >\\r\\n          Crear Usuarios\\r\\n        </button>\\r\\n      </div> -->\\r\\n      <div class=\\\"alert alert-info\\\"\\r\\n        *ngIf=\\\"users?.length == 0\\\" >\\r\\n        <span class=\\\"text-muted\\\"><strong>No hay registros en la Base de Datos</strong></span>\\r\\n    </div>\\r\\n    <table class='table table-bordered table-striped'\\r\\n                 *ngIf=\\\"users?.length>0\\\" >\\r\\n      <thead class=\\\"bg-dark text-center text-white\\\">\\r\\n        <tr>\\r\\n          <th>Detalles</th>\\r\\n          <th>Nick</th>\\r\\n          <th>Rol</th>\\r\\n          <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Editar</th>\\r\\n          <!-- <th *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">Eliminar</th> -->\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody class=\\\"text-center\\\">\\r\\n        <tr *ngFor=\\\"let user of users\\\" >\\r\\n          <td>\\r\\n              <img *ngIf=\\\"user?.foto\\\"  (click)=\\\"abrirModal(user)\\\"\\r\\n                  src=\\\"http://localhost:8080/api/uploads/imguser/{{user.foto}}\\\"\\r\\n                  alt=\\\"{{user.foto}}\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                  style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n              <img *ngIf=\\\"!user?.foto\\\"  (click)=\\\"abrirModal(user)\\\"\\r\\n                  src=\\\"http://localhost:8080/images/no-usuario.png\\\"\\r\\n                  alt=\\\"no-usuario\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                  style=\\\"width: 64px; cursor: pointer;\\\">\\r\\n          </td>\\r\\n\\r\\n          <td>{{user.username | uppercase}}</td>\\r\\n\\r\\n          <td>{{tipoUsuarios(user.roles.length)}}</td>\\r\\n          <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n                <button type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-rounded btn-outline-secondary btn-xs\\\"\\r\\n                            [routerLink]=\\\"['/users/form', user.id]\\\"\\r\\n                            >\\r\\n                          Editar\\r\\n                </button>\\r\\n          </td>\\r\\n          <!-- <td *ngIf=\\\"authService.hasRole('ROLE_ADMIN')\\\">\\r\\n              <button type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-outline-danger\\\"\\r\\n                            (click)=\\\"delete(user)\\\"\\r\\n                            >\\r\\n                          Eliminar\\r\\n              </button>\\r\\n          </td> -->\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <app-paginador *ngIf=\\\"paginador\\\"\\r\\n      [paginador]=\\\"paginador\\\"\\r\\n      [link]=\\\"link\\\">\\r\\n    </app-paginador>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<app-loading *ngIf=\\\"loadingService.modal\\\"></app-loading>\\r\\n<div class=\\\"card border-primary text-center\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h2>\\r\\n      <strong>\\r\\n        Sistema - Inventarios - Facturacion - Informes\\r\\n      </strong>\\r\\n    </h2>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <mat-card>\\r\\n          <mat-card-content>\\r\\n        <form method=\\\"post\\\">\\r\\n          <div class=\\\"form-group col-sm-12\\\">\\r\\n            <input [(ngModel)]=\\\"usuario.username\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n            name=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\" autofocus required>\\r\\n          </div>\\r\\n         \\r\\n          <div class=\\\"form-group col-sm-12\\\">\\r\\n            <input [(ngModel)]=\\\"usuario.password\\\" type=\\\"password\\\" class=\\\"form-control\\\"\\r\\n            name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-sm-12\\\">\\r\\n            <label for=\\\"form-control\\\">Selecione sucursal</label>\\r\\n            <select   [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                       name=\\\"myselect\\\"\\r\\n                    class=\\\"form-control\\\" [(ngModel)]=\\\"opcionSeleccionado\\\" (change)=\\\"capturar()\\\">\\r\\n                      <option *ngFor=\\\"let sucursal of sucursales\\\"\\r\\n                      [ngValue]=\\\"sucursal\\\">{{sucursal.nombre | uppercase}}</option>\\r\\n          </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-sm-12\\\">\\r\\n            <input (click)='login()' type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" value=\\\"Login\\\">\\r\\n          </div>\\r\\n         \\r\\n        </form>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6 my-3\\\">\\r\\n        <img    src=\\\"http://localhost:8080/images/logo.jpg\\\"\\r\\n                alt=\\\"sin-foto\\\" class=\\\"img-thumbnail rounded\\\"\\r\\n                style=\\\"width: 45%; cursor: pointer;\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { RouterModule, Routes} from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport { ClientesComponent } from './clientes/lista-clientes/clientes.component';\r\n\r\nimport { ClienteService } from './clientes/services/cliente.service';\r\nimport { CategoriaService } from './categorias/services/categoria.service';\r\nimport { ServicioService } from './servicios/services/servicio.service';\r\nimport { UserService } from './users/services/user.service';\r\nimport { ProductoService } from './productos/services/producto.service';\r\nimport { RegionService } from './regiones/services/region.service';\r\nimport { SucursalService } from './sucursales/services/sucursal.service';\r\n\r\nimport { UsersComponent } from './users/lista-users/users.component';\r\nimport { ProductosComponent } from './productos/lista-productos/productos.component';\r\nimport { FormClienteComponent } from './clientes/formularios/form-cliente.component';\r\nimport { FormUserComponent } from './users/formularios/form-user.component';\r\nimport { FormProductoComponent } from './productos/formularios/form-producto.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DetalleUserComponent } from './users/detalle-user/detalle-user.component';\r\nimport { DetalleProductoComponent } from './productos/detalle-producto/detalle-producto.component';\r\nimport { DetalleClienteComponent } from './clientes/detalle-cliente/detalle-cliente.component';\r\nimport { RegionesComponent } from './regiones/lista-regiones/regiones.component';\r\nimport { FormRegionesComponent } from './regiones/formularios/form-regiones.component';\r\nimport { DetalleRegionComponent } from './regiones/detalle-region/detalle-region.component';\r\nimport { CategoriasComponent } from './categorias/listado-regiones/categorias.component';\r\nimport { FormCategoriasComponent } from './categorias/formularios/form-categorias.component';\r\nimport { DetalleCategoriaComponent } from './categorias/detalle-categoria/detalle-categoria.component';\r\nimport { LoginComponent } from './users/login/login.component';\r\nimport { AuthGuard } from './users/guards/auth.guard';\r\nimport { RoleGuard } from './users/guards/role.guard';\r\nimport { TokenInterceptor } from './users/interceptors/token.interceptor';\r\nimport { AuthInterceptor } from './users/interceptors/auth.interceptor';\r\nimport { DetalleFacturaComponent } from './facturas/detalle-factura/detalle-factura.component';\r\nimport { FacturasComponent } from './facturas/facturacion/facturas.component';\r\n\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule} from '@angular/material/icon';\r\nimport { MatDatepickerModule, MatNativeDateModule } from '@angular/material';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { ListaFacturasComponent } from './facturas/lista-facturas/lista-facturas.component';\r\nimport { ClienteFacturarComponent } from './facturas/cliente-facturar/cliente-facturar.component';\r\nimport { ProductoBuscarComponent } from './productos/producto-buscar/producto-buscar.component';\r\nimport { FacturaBuscarComponent } from './facturas/buscar-factura-numero/factura-buscar.component';\r\nimport { FiltrarFacturasComponent } from './facturas/buscar-por-rango-fecha/filtrar-facturas.component';\r\nimport { ServiciosComponent } from './servicios/lista-servicios/servicios.component';\r\nimport localeES from '@angular/common/locales/es';\r\nimport { DetalleServicioComponent } from './servicios/detalle-servicio/detalle-servicio.component';\r\nimport { ServicioBuscarComponent } from './servicios/detalle-servicio/servicio-buscar/servicio-buscar.component';\r\nimport { FormServicioComponent } from './servicios/formularios/form-servicio.component';\r\nimport { PaginadorComponent } from './generales/paginador/paginador.component';\r\nimport { LoadingComponent } from './generales/loading/loading.component';\r\nimport { Pagina404Component } from './generales/pagina404/pagina404.component';\r\nimport { ListaSucursalesComponent } from './sucursales/lista-sucursales/lista-sucursales.component';\r\nimport { DetalleSucursalComponent } from './sucursales/detalle-sucursal/detalle-sucursal.component';\r\nimport { FormSucursalesComponent } from './sucursales/formularios/form-sucursales.component';\r\n\r\n\r\nregisterLocaleData(localeES, 'es');\r\nconst routes: Routes = [\r\n\r\n  {path: '', redirectTo: '/clientes', pathMatch: 'full'},\r\n  {path: 'login', component: LoginComponent},\r\n\r\n  {path: 'clientes', component: ClientesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'clientes/details/:id', component: DetalleClienteComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'clientes/page/:page', component: ClientesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'clientes/form', component: FormClienteComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'clientes/form/:id', component: FormClienteComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n\r\n  {path: 'productos', component: ProductosComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'productos/page/:page', component: ProductosComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'productos/detalle/:id', component: DetalleProductoComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'productos/form', component: FormProductoComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'productos/form/:id', component: FormProductoComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n\r\n  {path: 'servicios', component: ServiciosComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'servicios/page/:page', component: ServiciosComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'servicios/form', component: FormServicioComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'servicios/form/:id', component: FormServicioComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n\r\n  {path: 'users', component: UsersComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'users/page/:page', component: UsersComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'users/form', component: FormUserComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'users/form/:id', component: FormUserComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n\r\n  {path: 'regiones', component: RegionesComponent},\r\n  {path: 'regiones/page/:page', component: RegionesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'regiones/form', component: FormRegionesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'regiones/form/:id', component: FormRegionesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n\r\n  {path: 'categorias', component: CategoriasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'categorias/page/:page', component: CategoriasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'categorias/form', component: FormCategoriasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'categorias/form/:id', component: FormCategoriasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n\r\n  {path: 'facturas', component: ListaFacturasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'facturas/page/:page', component: ListaFacturasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'facturas/form/:clienteId', component: FacturasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'facturas/:id', component: DetalleFacturaComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'factura/filtrar', component: FiltrarFacturasComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n\r\n  {path: 'sucursales', component: ListaSucursalesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'sucursales/page/:page', component: ListaSucursalesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_USER'}},\r\n  {path: 'sucursales/form', component: FormSucursalesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n  {path: 'sucursales/form/:id', component: FormSucursalesComponent, canActivate: [ AuthGuard, RoleGuard], data: {role: 'ROLE_ADMIN'}},\r\n\r\n\r\n  {path: '**', component: Pagina404Component},\r\n\r\n\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ClientesComponent,\r\n    UsersComponent,\r\n    ProductosComponent,\r\n    FormClienteComponent,\r\n    FormUserComponent,\r\n    FormProductoComponent,\r\n    DetalleUserComponent,\r\n    DetalleProductoComponent,\r\n    DetalleClienteComponent,\r\n    RegionesComponent,\r\n    FormRegionesComponent,\r\n    DetalleRegionComponent,\r\n    CategoriasComponent,\r\n    FormCategoriasComponent,\r\n    DetalleCategoriaComponent,\r\n    DetalleCategoriaComponent,\r\n    LoginComponent,\r\n    DetalleFacturaComponent,\r\n    FacturasComponent,\r\n    ListaFacturasComponent,\r\n    ClienteFacturarComponent,\r\n    ProductoBuscarComponent,\r\n    FacturaBuscarComponent,\r\n    FiltrarFacturasComponent,\r\n    ServiciosComponent,\r\n    DetalleServicioComponent,\r\n    ServicioBuscarComponent,\r\n    FormServicioComponent,\r\n    PaginadorComponent,\r\n    LoadingComponent,\r\n    Pagina404Component,\r\n    ListaSucursalesComponent,\r\n    DetalleSucursalComponent,\r\n    FormSucursalesComponent,\r\n  ],\r\n  imports: [\r\n\r\n\r\n  BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatCheckboxModule,\r\n    MatCardModule\r\n\r\n  ],\r\n  providers: [ClienteService,\r\n              UserService,\r\n              ProductoService,\r\n              RegionService,\r\n              CategoriaService,\r\n              ServicioService,\r\n              SucursalService,\r\n              {provide: LOCALE_ID, useValue: 'es' },\r\n              { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n              { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n            ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input } from '@angular/core';\r\nimport { Categoria } from '../interfaces/categoria';\r\nimport { CategoriaService  } from '../services/categoria.service';\r\nimport { ModalCategoriaService  } from '../services/modal-categoria.service';\r\n\r\n@Component({\r\n  selector: 'app-detalle-categoria',\r\n  templateUrl: './detalle-categoria.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\n\r\nexport class DetalleCategoriaComponent  {\r\n\r\n  @Input() categoria: Categoria;\r\n  titulo = 'Detalle Categoria';\r\n  public  fotoSelecionada: File;\r\n  progreso = 0;\r\n  constructor(\r\n    public  categoriaService: CategoriaService,\r\n    public modalCategoriaService: ModalCategoriaService,\r\n   ) { }\r\n\r\n  cerrarModal() {\r\n    this.modalCategoriaService.cerrarModal();\r\n    this.fotoSelecionada = null;\r\n    this.progreso = 0;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Categoria } from '../interfaces/categoria';\r\nimport { CategoriaService } from '../services/categoria.service';\r\nimport {Router, ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-form-categorias',\r\n  templateUrl: './form-categorias.component.html'\r\n})\r\nexport class FormCategoriasComponent implements OnInit {\r\n\r\n  categoria: Categoria = new Categoria();\r\n  titulo = 'Crear Categoria';\r\n  errores: string[];\r\n  constructor(\r\n    public  categoriaService: CategoriaService,\r\n    public  router: Router,\r\n    public  activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.cargarCategoria();\r\n  }\r\n  cargarCategoria(): void {\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n          this.categoriaService.getCategoria(id).subscribe(\r\n            (categoria) => this.categoria = categoria);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  public create(): void {\r\n    this.categoriaService.create(this.categoria).subscribe(\r\n      categoria => {\r\n        this.router.navigate(['/categorias']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: 'Nueva Categoria',\r\n          text: `${categoria.nombre}, creado con Exito!`,\r\n          footer: '',\r\n          });\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n      }\r\n    );\r\n  }\r\n  update(): void {\r\n    this.categoriaService.update(this.categoria)\r\n    .subscribe(\r\n      categoria => {\r\n        this.router.navigate(['/categorias']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: 'Categoria',\r\n          text: `${categoria.nombre}, Actualizada con Exito!`,\r\n          footer: '',\r\n          });\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","export class Categoria {\r\n  id: number;\r\n  descripcion: string;\r\n  nombre: string;\r\n  createAt: string;\r\n  codigo: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Categoria } from '../interfaces/categoria';\r\nimport { CategoriaService } from '../services/categoria.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalCategoriaService  } from '../services/modal-categoria.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-categorias',\r\n  templateUrl: './categorias.component.html'\r\n})\r\n\r\nexport class CategoriasComponent implements OnInit {\r\n\r\n  categorias: Categoria[];\r\n  paginador: any;\r\n  categoriaSelecionado: Categoria;\r\n  link = '/clientes/page';\r\n\r\n  constructor(\r\n    public  categoriaService: CategoriaService,\r\n    public modalCategoriaService: ModalCategoriaService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.categoriaService.getCategorias(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('CategoriaComponent: tap 3');\r\n        (response.content as Categoria[]).forEach(categoria => {\r\n        //  console.log(categoria.nombre);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.categorias = response.content as Categoria[];\r\n      this.paginador = response;\r\n    });\r\n    });\r\n  }\r\n\r\n  delete(categoria: Categoria): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar La Categoria ${categoria.nombre} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Categoria!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.categoriaService.delete(categoria.id).subscribe(\r\n            response => {\r\n              this.categorias = this.categorias.filter(cli => cli !== categoria);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Categoria ${categoria.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n  abrirModal(categoria: Categoria) {\r\n    this.categoriaSelecionado = categoria;\r\n    this.modalCategoriaService.abrirModal();\r\n  }\r\n\r\n}\r\n\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Categoria } from '../interfaces/categoria';\r\nimport { HttpClient, HttpHeaders, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class CategoriaService {\r\npublic  urlEndPoint: string;\r\n\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/categorias`;\r\n          }\r\n\r\n          public getCategorias(page: number): Observable<any> {\r\n              return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n                tap((response: any) => {\r\n                     // console.log('CategoriaService: tap 1');\r\n                     (response.content as Categoria[]).forEach(categoria => {\r\n                      // console.log(categoria.nombre);\r\n                     });\r\n                    }),\r\n                    map((response: any ) => {\r\n                      (response.content as Categoria[]).map( categoria => {\r\n                        categoria.nombre = categoria.nombre.toUpperCase();\r\n                        return categoria;\r\n                    });\r\n                      return response;\r\n                    }),\r\n                    tap(response => {\r\n                      // console.log('CategoriaService: tap2');\r\n                      (response.content as Categoria[]).forEach(categoria => {\r\n                      //  console.log(categoria.nombre);\r\n                      });\r\n                   }\r\n                )\r\n              );\r\n            }\r\n  public getCategoriaLista(): Observable<Categoria[]> {\r\n      return this.http.get<Categoria[]>(this.urlEndPoint);\r\n  }\r\n\r\n  create(categoria: Categoria): Observable<Categoria> {\r\n\r\n    return this.http.post(this.urlEndPoint, categoria).pipe(\r\n      map((response: any ) => response.categoria as Categoria ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n  getCategoria(id): Observable<Categoria> {\r\n    return this.http.get<Categoria>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/categorias']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n  update(categoria: Categoria): Observable<Categoria> {\r\n    return this.http.put(\r\n      `${this.urlEndPoint}/${categoria.id}`,\r\n      categoria).pipe(\r\n        map((response: any ) => response.categoria as Categoria ),\r\n        catchError (e => {\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n  delete(id: number): Observable<Categoria> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.Categoria as Categoria ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalCategoriaService {\r\n\r\n  modal = false;\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  public  _notificarUpload = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Cliente } from '../interfaces/cliente';\r\nimport { ClienteService  } from '../services/cliente.service';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport { ModalClienteService  } from '../services/modal-cliente.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport Swal from 'sweetalert2';\r\nimport { Factura } from '../../facturas/interfaces/factura';\r\nimport { FacturaService } from './../../facturas/services/factura.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductoService } from '../../productos/services/producto.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-detalle-cliente',\r\n  templateUrl: './detalle-cliente.component.html'\r\n})\r\nexport class DetalleClienteComponent implements OnInit {\r\n\r\n  @Input() cliente: Cliente;\r\n  titulo = 'Detalle Cliente';\r\n  public fotoSelecionada: File;\r\n  progreso = 0;\r\n  rutaFoto = 'Selecionar Foto';\r\n\r\n  constructor(\r\n    public  clienteService: ClienteService,\r\n    public funcionesService: FuncionesService,\r\n    public modalClienteService: ModalClienteService,\r\n    public authService: AuthService,\r\n    public facturaService: FacturaService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public loadingService: LoadingService\r\n   ) { }\r\n\r\n   ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      const id = +params.get('id');\r\n      this.clienteService.getCliente(id)\r\n      .subscribe(\r\n        cliente => {this.cliente = cliente,\r\n          console.log('formato cliente');\r\n                    console.log(cliente);\r\n                    this.loadingService.cerrarModal();\r\n        });\r\n    });\r\n  }\r\n\r\n  seleccionarFoto(event) {\r\n    this.fotoSelecionada = event.target.files[0];\r\n    this.progreso = 0;\r\n    if (this.fotoSelecionada.type.indexOf('image') < 0) {\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Subir Selecionar Imagen',\r\n        text: `El archivo debe ser del tipo 'Imagen'`,\r\n        footer: 'Intente de nuevo',\r\n        });\r\n      this.fotoSelecionada = null;\r\n      } else {\r\n        this.rutaFoto = this.fotoSelecionada.name;\r\n      }\r\n  }\r\n  subirFoto() {\r\n    if (!this.fotoSelecionada) {\r\n      this.rutaFoto = 'Selecionar Foto';\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Subir Imagen',\r\n        text: `No ha selecionado una imagen`,\r\n        footer: 'Intente de nuevo',\r\n        });\r\n    } else {\r\n      this.clienteService.subirFoto(this.fotoSelecionada, this.cliente.id)\r\n      .subscribe( event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n              this.progreso = Math.round((event.loaded / event.total) * 100);\r\n        } else if (event.type === HttpEventType.Response) {\r\n            const response: any = event.body;\r\n            this.cliente = response.cliente as Cliente;\r\n            this.modalClienteService.notificarUpload.emit(this.cliente);\r\n            this.rutaFoto = 'Selecionar Foto';\r\n            this.fotoSelecionada = null;\r\n            Swal.fire({\r\n              type: 'success',\r\n              title: 'La Foto se ha subido con Exito!',\r\n              text: response.mensaje,\r\n              footer: '',\r\n              });\r\n            // pendiente meter un time out\r\n            this.progreso = 0;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  delete(factura: Factura): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar la Factura ${factura.descripcion} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Factura!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.facturaService.delete(factura.id).subscribe(\r\n            response => {\r\n              this.cliente.facturas = this.cliente.facturas.filter(f => f !== factura);\r\n              Swal.fire(\r\n                'Borrada!',\r\n                `Factura ${factura.descripcion} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modalClienteService.cerrarModal();\r\n    this.fotoSelecionada = null;\r\n    this.progreso = 0;\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Cliente } from '../interfaces/cliente';\r\nimport { ClienteService } from '../services/cliente.service';\r\nimport { Region } from '../../regiones/interfaces/region';\r\nimport { RegionService } from '../../regiones/services/region.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl,\r\n         FormGroupDirective,\r\n         NgForm, Validators,\r\n         FormBuilder, FormGroup} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-cliente',\r\n  templateUrl: './form-cliente.component.html'\r\n})\r\n\r\n\r\nexport class FormClienteComponent implements OnInit {\r\n\r\n  formularioCreado: FormGroup;\r\n  minDate = new Date(1930, 1, 1);\r\n  maxDate = new Date();\r\n  cliente: Cliente = new Cliente();\r\n  regiones: Region[];\r\n  titulo = 'Crear Cliente';\r\n  errores: string[];\r\n\r\n  constructor(\r\n              public  clienteService: ClienteService,\r\n              public  regionService: RegionService,\r\n              public  router: Router,\r\n              public  activatedRoute: ActivatedRoute,\r\n              public loadingService: LoadingService,\r\n              public formBuilder: FormBuilder\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.crearFormulario();\r\n    this.cargarCliente();\r\n  }\r\n\r\n  cargarCliente(): void {\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n            this.clienteService.getCliente(id).subscribe(\r\n            (cliente) => {this.cliente = cliente,\r\n              console.log(cliente);\r\n                          this.asignarDatosFormulario();\r\n            });\r\n        }\r\n      });\r\n    this.regionService.getRegionLista().subscribe(regiones => this.regiones = regiones);\r\n    this.loadingService.cerrarModal();\r\n  }\r\n\r\n  public create(): void {\r\n    this.loadingService.abrirModal();\r\n    this.asignarDatosParaGuardar();\r\n    this.clienteService.create(this.cliente).subscribe(\r\n      cliente => {\r\n         this.router.navigate(['/clientes']),\r\n         Swal.fire({\r\n           type: 'success',\r\n           title: 'Nuevo Cliente',\r\n           text: `${cliente.nombre} `,\r\n           footer: 'Creado con Exito!',\r\n           });\r\n         this.loadingService.cerrarModal();\r\n       },\r\n       err => {\r\n         this.errores = err.error.errors as string[];\r\n         this.loadingService.cerrarModal();\r\n         console.error(err);\r\n       }\r\n     );\r\n  }\r\n\r\n  update(): void {\r\n    this.loadingService.abrirModal();\r\n    this.asignarDatosParaGuardar();\r\n    this.clienteService.update(this.cliente)\r\n    .subscribe(\r\n      cliente => {\r\n        this.router.navigate(['/clientes']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: 'Cliente',\r\n          text: `${cliente.nombre} `,\r\n          footer: 'Actualizado con Exito!',\r\n          });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        this.loadingService.cerrarModal();\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n  public compararRegion(o1: Region, o2: Region): boolean {\r\n    if (o1 === undefined && o2 === undefined) {\r\n      return true;\r\n    }\r\n    return o1 === null || o2 === null || o1 === undefined || o2 === undefined ? false : o1.id === o2.id;\r\n  }\r\n\r\n  // tratamiento a formulario\r\n  crearFormulario() {\r\n    this.formularioCreado = this.formBuilder.group({\r\n      nombre: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(20)\r\n      ])],\r\n      apellido: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(20)\r\n      ])],\r\n      documento: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(10)\r\n      ])],\r\n      email: ['', Validators.compose([\r\n        Validators.required, Validators.email\r\n      ])],\r\n      celular1: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10)\r\n      ])],\r\n      celular2: ['', Validators.compose([\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10)\r\n      ])],\r\n      telefono: ['', Validators.compose([\r\n        Validators.minLength(7),\r\n        Validators.maxLength(7)\r\n      ])],\r\n      direccion: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50)\r\n      ])],\r\n      region: ['', Validators.required],\r\n      fecha: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  asignarDatosFormulario() {\r\n    this.formularioCreado.setValue({\r\n      nombre: this.cliente.nombre,\r\n      apellido: this.cliente.apellido,\r\n      documento: this.cliente.documento,\r\n      email: this.cliente.email,\r\n      celular1: this.cliente.celular1,\r\n      celular2: this.cliente.celular2,\r\n      telefono: this.cliente.telefono,\r\n      direccion: this.cliente.direccion,\r\n      region: this.cliente.region,\r\n      fecha: this.cliente.fecha,\r\n    });\r\n  }\r\n\r\n  asignarDatosParaGuardar() {\r\n    this.cliente.nombre = this.formularioCreado.value.nombre,\r\n    this.cliente.apellido = this.formularioCreado.value.apellido,\r\n    this.cliente.documento = this.formularioCreado.value.documento ,\r\n    this.cliente.email = this.formularioCreado.value.email,\r\n    this.cliente.celular1 = this.formularioCreado.value.celular1,\r\n    this.cliente.direccion = this.formularioCreado.value.direccion,\r\n    this.cliente.fecha = this.formularioCreado.value.fecha;\r\n    this.cliente.region = this.formularioCreado.value.region;\r\n    if ( this.formularioCreado.value.celular2 !== '' ) {\r\n      this.cliente.celular2 = this.formularioCreado.value.celular2;\r\n    }\r\n    if ( this.formularioCreado.value.telefono !== '' ) {\r\n      this.cliente.telefono = this.formularioCreado.value.telefono;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Region } from '../../regiones/interfaces/region';\r\nimport { Factura } from '../../facturas/interfaces/factura';\r\nimport { User } from '../../users/interfaces/user';\r\nexport class Cliente {\r\n  id: number;\r\n  fecha: string;\r\n  documento: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  createAt: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  celular1: string;\r\n  celular2: string;\r\n  email: string;\r\n  foto: string;\r\n  region: Region;\r\n  user: User;\r\n  facturas: Array<Factura> = [];\r\n\r\n\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Cliente } from '../interfaces/cliente';\r\nimport { ClienteService } from '../services/cliente.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalClienteService  } from '../services/modal-cliente.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalFacturaService } from '../../facturas/services/modalFactura.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-clientes',\r\n  templateUrl: './clientes.component.html'\r\n})\r\n\r\nexport class ClientesComponent implements OnInit {\r\n\r\n  clientes: Cliente[];\r\n  link = '/clientes/page';\r\n  paginador: any;\r\n  titulo: string;\r\n\r\n  constructor(\r\n    public  clienteService: ClienteService,\r\n    public modalClienteService: ModalClienteService,\r\n    public modalFacturaService: ModalFacturaService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public loadingService: LoadingService,\r\n    public funcionesService: FuncionesService,\r\n    public authService: AuthService) {\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.titulo = this.funcionesService.setTitulo();\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.clienteService.getClientes(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('ClientesComponent: tap 3');\r\n        (response.content as Cliente[]).forEach(cliente => {\r\n        //  console.log(cliente.nombre);\r\n        this.loadingService.cerrarModal();\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.clientes = response.content as Cliente[];\r\n      this.paginador = response;\r\n      });\r\n    });\r\n\r\n    this.modalClienteService.notificarUpload.subscribe(cliente => {\r\n      this.clientes = this.clientes.map( clienteOriginal => {\r\n        if (cliente.id === clienteOriginal.id) {\r\n          clienteOriginal.foto = cliente.foto;\r\n        }\r\n        return clienteOriginal;\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(cliente: Cliente): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar Al Cliente ${cliente.nombre} ${cliente.apellido} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Cliente!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.clienteService.delete(cliente.id).subscribe(\r\n            response => {\r\n              this.clientes = this.clientes.filter(cli => cli !== cliente);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Cliente ${cliente.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modalFacturaService.abrirModal();\r\n  }\r\n\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Cliente } from '../interfaces/cliente';\r\nimport { HttpClient,  HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable,  throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ClienteService {\r\npublic  urlEndPoint: string;\r\n\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/clientes`;\r\n            }\r\n\r\n\r\n public getClientes(page: number): Observable<any> {\r\n    return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n      tap((response: any) => {\r\n           // console.log('ClienteService: tap 1');\r\n           (response.content as Cliente[]).forEach(cliente => {\r\n           //  console.log(cliente.nombre);\r\n           });\r\n          }),\r\n          map((response: any ) => {\r\n            (response.content as Cliente[]).map( cliente => {\r\n              cliente.nombre = cliente.nombre.toUpperCase();\r\n              return cliente;\r\n          });\r\n            return response;\r\n          }),\r\n          tap(response => {\r\n            // console.log('ClienteService: tap2');\r\n            (response.content as Cliente[]).forEach(cliente => {\r\n            //  console.log(cliente.nombre);\r\n            });\r\n         }));\r\n  }\r\n\r\n  create(cliente: Cliente): Observable<Cliente> {\r\n    console.log('crear cliente');\r\n    console.log(cliente);\r\n    return this.http.post(this.urlEndPoint, cliente).pipe(\r\n      map((response: any ) => response.cliente as Cliente ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  getCliente(id): Observable<Cliente> {\r\n    return this.http.get<Cliente>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/clientes']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(cliente: Cliente): Observable<any> {\r\n    return this.http.put<any>(\r\n      `${this.urlEndPoint}/${cliente.id}`,\r\n      cliente).pipe(\r\n        map((response: any ) => response.cliente as Cliente ),\r\n        catchError (e => {\r\n\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id: number): Observable<Cliente> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.cliente as Cliente ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  subirFoto(archivo: File, id): Observable<HttpEvent<{}>> {\r\n    const formData = new FormData();\r\n    formData.append('archivo', archivo);\r\n    formData.append('id', id);\r\n    const req = new HttpRequest('POST', `${this.urlEndPoint}/uploadimgcliente`,\r\n   formData, {\r\n      reportProgress: true\r\n  });\r\n    return this.http.request(req);\r\n  }\r\n\r\n  filtrarClientes(term: string): Observable<Cliente[]> {\r\n    return this.http.get<Cliente[]>(`${this.urlEndPoint}/filtrar-clientes/${term}`);\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalClienteService {\r\n\r\n  modal = false;\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  public  _notificarUpload = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n   get notificarUpload(): EventEmitter<any> {\r\n     return this._notificarUpload;\r\n  }\r\n  abrirModal() {\r\n    // console.log(this.modal);\r\n    this.modal = true;\r\n    // console.log('llego al servicio del modal true');\r\n    // console.log(this.modal);\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ModalFacturaBuscarService } from '../services/modal-factura-buscar.service';\r\nimport { Factura } from '../interfaces/factura';\r\nimport { FacturaService } from '../services/factura.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-factura-buscar',\r\n  templateUrl: 'factura-buscar.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\n\r\nexport class FacturaBuscarComponent  {\r\n  id: number;\r\n  factura: Factura;\r\n  titulo = 'Buscar Factura';\r\n\r\n  constructor(\r\n    public modalFacturaBuscarService: ModalFacturaBuscarService,\r\n    public funcionesService: FuncionesService,\r\n    public facturaService: FacturaService,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService,\r\n  ) { }\r\n\r\n  cerrarModalBusquedaFactura() {\r\n    this.modalFacturaBuscarService.cerrarModal();\r\n    this.factura = null;\r\n  }\r\n\r\n  buscarFactura() {\r\n    this.loadingService.abrirModal();\r\n    if ( this.id === null || this.id === undefined) {\r\n      this.loadingService.cerrarModal();\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al ingresar Numero de factura',\r\n        text: 'Solo *Numeros* en este campo',\r\n        footer: 'Favor ingresar un numero de factura valido',\r\n        });\r\n    } else {\r\n      this.facturaService.getFactura(this.id).subscribe(\r\n        factura => {this.factura = factura,\r\n          this.loadingService.cerrarModal();\r\n        });\r\n    }\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\nimport { FacturaService } from '../services/factura.service';\r\nimport { Factura } from '../interfaces/factura';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalFacturaService } from '../services/modalFactura.service';\r\nimport { ModalFacturaBuscarService } from '../services/modal-factura-buscar.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-filtrar-facturas',\r\n  templateUrl: './filtrar-facturas.component.html',\r\n})\r\n\r\nexport class FiltrarFacturasComponent {\r\n\r\n  titulo = 'Informes - Facturas';\r\n  facturas: Factura[];\r\n  fechaInicioFiltro: string;\r\n  fechaFinFiltro: string;\r\n  gananciaFiltro = 0;\r\n  totalFiltro = 0;\r\n\r\n  constructor(\r\n    public  facturaService: FacturaService,\r\n    public modalFacturaService: ModalFacturaService,\r\n    public modalFacturaBuscarService: ModalFacturaBuscarService,\r\n    public funcionesService: FuncionesService,\r\n    public loadingService: LoadingService,\r\n    public authService: AuthService\r\n  ) {\r\n    this.titulo = this.funcionesService.setTitulo();\r\n  }\r\n\r\n  filtrarFacturas() {\r\n    this.gananciaFiltro = 0;\r\n    this.totalFiltro = 0;\r\n    if (this.fechaInicioFiltro !== undefined && this.fechaInicioFiltro != null) {\r\n      if (this.fechaFinFiltro !== undefined && this.fechaFinFiltro != null) {\r\n            this.loadingService.abrirModal();\r\n            this.facturaService.getFiltrarFacturasPorFecha(this.fechaInicioFiltro, this.fechaFinFiltro)\r\n          .subscribe(\r\n            facturas => {this.facturas = facturas;\r\n                         this.facturas.forEach(datos => {\r\n                          this.gananciaFiltro += datos.totalGanancia;\r\n                          this.totalFiltro += datos.total;\r\n                          });\r\n                         this.loadingService.cerrarModal();\r\n            },\r\n          );\r\n      } else {\r\n        Swal.fire({\r\n          type: 'error',\r\n          title: `No ha Selecionado una Fecha`,\r\n          text: 'Selecionar Fecha Final, para realizar busqueda',\r\n          footer: '',\r\n          });\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: `No ha Selecionado una Fecha`,\r\n        text: 'Selecionar Fecha Inicial, para realizar busqueda',\r\n        footer: '',\r\n        });\r\n    }\r\n  }\r\n\r\n\r\nformatNumber(cantidad: number): string {\r\n      return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map,  flatMap } from 'rxjs/operators';\r\nimport { ModalFacturaService } from './../services/modalFactura.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Cliente } from '../../clientes/interfaces/cliente';\r\nimport { ClienteService } from '../../clientes/services/cliente.service';\r\n\r\n@Component({\r\n  selector: 'app-cliente-facturar',\r\n  templateUrl: './cliente-facturar.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\n\r\nexport class ClienteFacturarComponent implements OnInit {\r\n  id: number;\r\n  cliente: Cliente;\r\n  titulo = 'Buscar Cliente';\r\n  clientesFiltrados: Observable<Cliente[]>;\r\n  autocompleteControl = new FormControl();\r\n\r\n  constructor(\r\n    public modalFacturaService: ModalFacturaService,\r\n    public  clienteService: ClienteService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.clientesFiltrados = this.autocompleteControl.valueChanges\r\n      .pipe(\r\n        map(value => typeof value === 'string' ? value : value.nombre),\r\n        flatMap(value => value ? this._filter(value) : [])\r\n      );\r\n  }\r\n\r\n  public  _filter(value: string): Observable<Cliente[]> {\r\n    const filterValue = value.toLowerCase();\r\n    return this.clienteService.filtrarClientes(filterValue);\r\n  }\r\n\r\n  mostrarNombre(cliente?: Cliente): string | undefined {\r\n    return cliente ? cliente.nombre : undefined;\r\n  }\r\n\r\n  seleccionarCliente(event: MatAutocompleteSelectedEvent): void {\r\n    this.cliente = event.option.value as Cliente;\r\n    this.id = this.cliente.id;\r\n    this.autocompleteControl.setValue('');\r\n    event.option.focus();\r\n    event.option.deselect();\r\n\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modalFacturaService.cerrarModal();\r\n    this.cliente = null;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Factura } from '../interfaces/factura';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FacturaService } from '../services/factura.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\nimport * as jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { Sucursal } from 'src/app/sucursales/interfaces/sucursal';\r\n\r\n@Component({\r\n  selector: 'app-detalle-factura',\r\n  templateUrl: './detalle-factura.component.html',\r\n})\r\nexport class DetalleFacturaComponent implements OnInit {\r\n  factura: Factura;\r\n  titulo = 'Factura Nº: ';\r\n  // jsPDF: any;\r\n  sucursal: Sucursal = new Sucursal();\r\n  constructor(\r\n    public  facturaService: FacturaService,\r\n    public funcionesService: FuncionesService,\r\n    public authService: AuthService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public loadingService: LoadingService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe((params) => {\r\n      const id = +params.get('id');\r\n      this.facturaService.getFactura(id).subscribe((factura) => {\r\n        (this.factura = factura), this.loadingService.cerrarModal();\r\n      });\r\n    });\r\n    this.cargarSucursal();\r\n  }\r\n\r\n  cargarSucursal() {\r\n    this.sucursal = this.funcionesService.getDatos();\r\n  }\r\n\r\n \r\n\r\n  generarFactura(factura: Factura): void {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(12);\r\n    doc.text(`${this.sucursal.sede}`, 30, 18);\r\n    doc.setFontSize(10);\r\n    doc.text('---------------------------------------', 24, 24);\r\n    doc.text('-------------------------------------------------', 64, 24);\r\n    doc.setFontSize(12);\r\n    doc.text(`${this.sucursal.propietario} `, 30, 29);\r\n    doc.setFontSize(10);\r\n    doc.text(`Nit. ${this.sucursal.nit}`, 60, 29);\r\n    doc.setFontSize(8);\r\n    doc.text(`Regimen ${this.sucursal.regimen}`, 63, 32);\r\n    doc.setFontSize(10);\r\n    doc.text('---------------------------------------', 24, 35);\r\n    doc.text('-------------------------------------------------', 64, 35);\r\n    doc.setFontSize(10);\r\n    doc.text(`${this.sucursal.direccion}.`, 30, 38);\r\n    doc.setFontSize(8);\r\n    doc.text(` ${this.sucursal.geoposicion}.`, 55, 41);\r\n    doc.setFontSize(10);\r\n    doc.text(`WhatsApp: ${this.sucursal.celular1}.    Telefono: ${this.sucursal.telefono}.`, 30, 46);\r\n    doc.text(`Cel:            ${this.sucursal.celular2}.`, 30, 51);\r\n    doc.text('---------------------------------------', 24, 54);\r\n    doc.text('-------------------------------------------------', 64, 54);\r\n    doc.setFontSize(12);\r\n    doc.text(`Cliente: ${factura.cliente.nombre} ${factura.cliente.apellido}`, 30, 59);\r\n    doc.setFontSize(10);\r\n    doc.text(`C.C./Nit : ${factura.cliente.documento}`, 30, 63);\r\n    doc.text(`Cel: ${factura.cliente.celular1}`, 80, 63);\r\n    doc.text(`Direccion: ${factura.cliente.region.nombre}  ${factura.cliente.direccion}`, 30, 68);\r\n    doc.setFontSize(15);\r\n    doc.text(`Factura de Venta Nº: ${factura.numeroFactura}`, 125, 68);\r\n    doc.setFontSize(8);\r\n    doc.text(`Fecha Factura:  ${factura.createAt}`, 125, 72);\r\n    doc.setFontSize(10);\r\n    doc.text('---------------------------------------', 24, 73);\r\n    doc.text('-------------------------------------------------', 64, 73);\r\n    let conta = 84;\r\n    for (const i of factura.items) {\r\n      conta += 10;\r\n }\r\n    if (factura.descuento != null && factura.descuento > 0) {\r\n      doc.text('Descuento: ' + this.formatNumber(factura.descuento), 110, conta);\r\n   }\r\n    doc.setFontSize(12);\r\n    doc.text('Total: ' + this.formatNumber(factura.total), 150, conta);\r\n    conta += 6;\r\n    if (factura.observacion !== null) {\r\n      doc.text('Observacion: ' + factura.observacion, 30, conta);\r\n    } else {\r\n      doc.text('Observacion: ' , 30, conta);\r\n    }\r\n    conta += 5;\r\n    doc.setFontSize(10);\r\n    doc.text('---------------------------------------', 24, conta);\r\n    doc.text('---------------------------------------', 64, conta);\r\n    doc.text('-------------------------------------------------------------------', 104, conta);\r\n    conta += 5;\r\n    doc.text('Esta factura de venta es a titulo', 90, conta);\r\n    conta += 5;\r\n    doc.text('valor segun ley 121 del 2008', 92, conta);\r\n    conta += 5;\r\n    doc.setFontSize(6);\r\n    doc.text('* Para cualquiero tipo de reclamo ó garantia debe presentar este documento.* ', 80, conta);\r\n    autoTable(doc, { html: '#tablaFactura', styles: { fillColor: [156, 156, 156] },\r\n    columnStyles: { 0: { halign: 'center' },  }, // Cells in first column centered and green\r\n    margin: { top: 75 }}, );\r\n    doc.save(`${factura.numeroFactura}-factura.pdf`);\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Factura } from '../interfaces/factura';\r\nimport { ClienteService } from '../../clientes/services/cliente.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, flatMap } from 'rxjs/operators';\r\nimport { FacturaService } from '../services/factura.service';\r\nimport { ItemFactura } from '../interfaces/item-factura';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport Swal from 'sweetalert2';\r\nimport { Producto } from '../../productos/interfaces/producto';\r\nimport { ProductoService } from '../../productos/services/producto.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { UserService } from '../../users/services/user.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-facturas',\r\n  templateUrl: './facturas.component.html'\r\n})\r\nexport class FacturasComponent implements OnInit {\r\n\r\n  titulo: string;\r\n  products = Producto;\r\n  factura: Factura = new Factura();\r\n  errores: string[];\r\n  checked = false;\r\n  facturas: Factura[];\r\n  numeroFactura: number;\r\n  estadoNumero = false;\r\n  autocompleteControl = new FormControl();\r\n\r\n  productosFiltrados: Observable<Producto[]>;\r\n\r\n  constructor(\r\n              public  clienteService: ClienteService,\r\n              public  userService: UserService,\r\n              public  facturaService: FacturaService,\r\n              public  productoService: ProductoService,\r\n              public authService: AuthService,\r\n              public  router: Router,\r\n              public  activatedRoute: ActivatedRoute,\r\n              public funcionesService: FuncionesService,\r\n              public loadingService: LoadingService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.titulo = `${this.funcionesService.setTitulo()} - Nueva Factura -`;\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      const clienteId = +params.get('clienteId');\r\n      this.clienteService.getCliente(clienteId)\r\n      .subscribe(cliente => this.factura.cliente = cliente);\r\n      this.userService.getUser(JSON.parse(sessionStorage.getItem('usuario')).id)\r\n      .subscribe(usuario => {this.factura.usuario = usuario,\r\n        this.loadingService.cerrarModal();\r\n      });\r\n      this.cargarUltimaFactura();\r\n    });\r\n    this.productosFiltrados = this.autocompleteControl.valueChanges\r\n      .pipe(\r\n        map(value => typeof value === 'string' ? value : value.nombre),\r\n        flatMap(value => value ? this._filter(value) : [])\r\n      );\r\n  }\r\n\r\n  cargarUltimaFactura() {\r\n    this.facturaService.getFacturaUltima()\r\n          .subscribe(\r\n           facturas => {\r\n             this.facturas = facturas,\r\n                         this.facturas.forEach(datos => {\r\n                                                          this.numeroFactura = datos.numeroFactura + 1;\r\n                                                          this.factura.numeroFactura = this.numeroFactura;\r\n                });\r\n            },\r\n          );\r\n    // this.llenarNumeroFactura();\r\n  }\r\n\r\n  llenarNumeroFactura() {\r\n    if (this.numeroFactura === 0) {\r\n      Swal.fire({\r\n              type: 'info',\r\n              title: 'Esta es la primera Factura',\r\n              text: 'Favor Ingresar Numero de Factura Inicial',\r\n              footer: 'En el Campo Numero Factura',\r\n              });\r\n          } else {\r\n            this.factura.numeroFactura = this.numeroFactura + 1 ;\r\n          }\r\n  }\r\n\r\n  public  _filter(value: string): Observable<Producto[]> {\r\n    const filterValue = value.toUpperCase();\r\n    return this.productoService.filtrarProductos(filterValue);\r\n  }\r\n\r\n  mostrarNombre(producto?: Producto): string | undefined {\r\n    return producto ? producto.nombre : undefined;\r\n  }\r\n\r\n  seleccionarProducto(event: MatAutocompleteSelectedEvent): void {\r\n    const producto = event.option.value as Producto;\r\n    if (this.existeItem(producto.id)) {\r\n      this.incrementaCantidad(producto.id);\r\n    } else {\r\n      const nuevoItem = new ItemFactura();\r\n      nuevoItem.producto = producto;\r\n      if (producto.cantidad > 0) {\r\n        this.factura.items.push(nuevoItem);\r\n        // guarda en el localStore\r\n      }\r\n    }\r\n\r\n    this.autocompleteControl.setValue('');\r\n    event.option.focus();\r\n    event.option.deselect();\r\n  }\r\n\r\n  actualizarCantidad(id: number, event: any): void {\r\n    const cantidad: number = event.target.value as number;\r\n    if (cantidad <= 0) {\r\n        this.checked = false;\r\n        return this.eliminarItemFactura(id);\r\n    }\r\n    this.factura.items = this.factura.items.map((item: ItemFactura) => {\r\n      if (id === item.producto.id) {\r\n        // restara cantidad al producto\r\n        if (item.producto.cantidad > 0 && item.cantidad <= item.producto.cantidad) {\r\n          item.cantidad = cantidad;\r\n        } else {\r\n          Swal.fire({\r\n            type: 'error',\r\n            title: 'Oops',\r\n            text: 'La cantidad de Articulos supera al Stock',\r\n            footer: 'Intente de nuevo',\r\n            });\r\n          this.checked = false;\r\n          item.cantidad = 1;\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n  }\r\n\r\n  existeItem(id: number): boolean {\r\n    let existe = false;\r\n    this.factura.items.forEach((item: ItemFactura) => {\r\n      if (id === item.producto.id) {\r\n        existe = true;\r\n      }\r\n    });\r\n    return existe;\r\n  }\r\n\r\n  incrementaCantidad(id: number): void {\r\n    this.factura.items = this.factura.items.map((item: ItemFactura) => {\r\n      if (id === item.producto.id) {\r\n        if (item.producto.cantidad > 0) {\r\n          ++item.cantidad;\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n  }\r\n\r\n  eliminarItemFactura(id: number): void {\r\n    this.checked = false;\r\n    this.factura.items = this.factura.items\r\n    .filter((item: ItemFactura) => id !== item.producto.id);\r\n  }\r\n\r\n  create(facturaForm): void {\r\n    if (this.factura.items.length === 0) {\r\n      this.autocompleteControl.setErrors({ invalid: true });\r\n    }\r\n\r\n    if (facturaForm.form.valid && this.factura.items.length > 0) {\r\n      this.loadingService.abrirModal();\r\n      this.factura.totalGanancia = this.factura.calcularGananciaTotal();\r\n      this.facturaService.create(this.factura).subscribe(factura => {\r\n        this.factura.items.forEach((item: ItemFactura) => {\r\n          item.producto.cantidad = item.producto.cantidad - item.cantidad;\r\n          this.productoService.update(item.producto)\r\n          .subscribe(\r\n            () => {\r\n              Swal.fire({\r\n                type: 'success',\r\n                title: 'Facturado!',\r\n                text: `${factura.descripcion} Creada con éxito!`,\r\n                footer: 'Intente de nuevo',\r\n                });\r\n              this.loadingService.cerrarModal();\r\n              this.router.navigate(['/facturas', factura.id]);\r\n            },\r\n            err => {\r\n              this.errores = err.error.errors as string[],\r\n              this.loadingService.cerrarModal();\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  validarDescuento(dato: Factura): string {\r\n    if (dato !== null) {\r\n      if (dato.descuento <= dato.calcularGananciaTotal()) {\r\n        return this.formatNumber(dato.descuento);\r\n      } else {\r\n        dato.descuento = 0;\r\n        Swal.fire({\r\n          type: 'error',\r\n          title: 'Ooops',\r\n          text: `Esta aplicando un descuento que supera la ganancia`,\r\n          footer: 'Intente de nuevo',\r\n          });\r\n        return '0';\r\n      }\r\n    }\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n      return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n\r\n}\r\n","import { ItemFactura } from './item-factura';\r\nimport { Cliente } from '../../clientes/interfaces/cliente';\r\nimport { User } from '../../users/interfaces/user';\r\nexport class Factura {\r\n  id: number;\r\n  descripcion = 'Factura Venta';\r\n  observacion: string;\r\n  nombre: string;\r\n  createAt: string;\r\n  numeroFactura: number;\r\n  items: Array<ItemFactura> = [];\r\n  cliente: Cliente;\r\n  usuario: User;\r\n  descuento = 0;\r\n  total: number;\r\n  totalGanancia: number;\r\n\r\n\r\n  aplicarDescuento(desc: number) {\r\n    this.total -= desc;\r\n    console.log(this.total);\r\n  }\r\n\r\n  calcularGranTotal(): number {\r\n    this.total = 0;\r\n    this.items.forEach((item: ItemFactura) => {\r\n      this.total +=  item.calcularImporte();\r\n    });\r\n    if (this.descuento > 0) {\r\n      this.total -= this.descuento;\r\n    }\r\n    return this.total;\r\n  }\r\n  calcularGananciaTotal(): number {\r\n    this.totalGanancia = 0;\r\n    this.items.forEach((item: ItemFactura) => {\r\n      this.totalGanancia +=  item.calcularGanancia();\r\n    });\r\n    if (this.descuento > 0) {\r\n      this.totalGanancia -= this.descuento;\r\n    }\r\n    return this.totalGanancia;\r\n  }\r\n\r\n}\r\n","import { Producto } from '../../productos/interfaces/producto';\r\nexport class ItemFactura {\r\n\r\n  producto: Producto;\r\n  cantidad = 1;\r\n  importe: number;\r\n\r\n  public calcularImporte() {\r\n    return this.cantidad * this.producto.precio;\r\n  }\r\n\r\n  public calcularGanancia() {\r\n    return this.cantidad * (this.producto.precio - this.producto.precioCompra);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FacturaService } from './../services/factura.service';\r\nimport { Factura } from '../interfaces/factura';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalFacturaService } from './../services/modalFactura.service';\r\nimport { ModalFacturaBuscarService } from './../services/modal-factura-buscar.service';\r\nimport { ProductoService } from '../../productos/services/producto.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-lista-facturas',\r\n  templateUrl: './lista-facturas.component.html'\r\n})\r\nexport class ListaFacturasComponent implements OnInit {\r\n  dato = ' prueba ';\r\n  facturas: Factura[];\r\n  facturaFecha: Factura[];\r\n  paginador: any;\r\n  link = '/facturas/page';\r\n  titulo: string;\r\n\r\n  constructor(\r\n    public  facturaService: FacturaService,\r\n    public  productoService: ProductoService,\r\n    public modalFacturaService: ModalFacturaService,\r\n    public modalFacturaBuscarService: ModalFacturaBuscarService,\r\n    public funcionesService: FuncionesService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.titulo = this.funcionesService.setTitulo();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.facturaService.getFacturas(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('FacturasComponent: tap 3');\r\n        (response.content as Factura[]).forEach(cliente => {\r\n          this.loadingService.cerrarModal();\r\n          // console.log(cliente.nombre);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.facturas = response.content as Factura[];\r\n      this.paginador = response;\r\n      });\r\n    });\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modalFacturaService.abrirModal();\r\n  }\r\n  abrirModalBuscarFactura() {\r\n    this.modalFacturaBuscarService.abrirModal();\r\n  }\r\n\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Factura } from '../interfaces/factura';\r\nimport { HttpClient,  HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable,  throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FacturaService {\r\n\r\n  public  urlEndPoint: string;\r\n\r\n  constructor(\r\n                public  http: HttpClient,\r\n                public funcionesService: FuncionesService\r\n                ) {\r\n                  this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/facturas`;\r\n                }\r\n\r\n  public getFacturas(page: number): Observable<any> {\r\n    return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n      tap((response: any) => {\r\n           // console.log('FacturaService: tap 1');\r\n           (response.content as Factura[]).forEach(factura => {\r\n            // console.log(factura.descripcion);\r\n           });\r\n          }),\r\n          map((response: any ) => {\r\n            (response.content as Factura[]).map( factura => {\r\n              factura.nombre = factura.descripcion.toUpperCase();\r\n              return factura;\r\n          });\r\n            return response;\r\n          }),\r\n          tap(response => {\r\n            // console.log('FacturaService: tap2');\r\n            (response.content as Factura[]).forEach(factura => {\r\n            //  console.log(factura.descripcion);\r\n            });\r\n         }));\r\n  }\r\n\r\n  getFactura(id: number): Observable<Factura> {\r\n    return this.http.get<Factura>(`${this.urlEndPoint}/${id}`);\r\n  }\r\n\r\n  \r\n\r\n\r\n  delete(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.urlEndPoint}/${id}`);\r\n  }\r\n\r\n  create(factura: Factura): Observable<Factura> {\r\n    return this.http.post<Factura>(this.urlEndPoint, factura);\r\n  }\r\n\r\n  createFactura(factura: Factura): Observable<Factura> {\r\n    return this.http.post(this.urlEndPoint, factura).pipe(\r\n      map((response: any ) => response.factura as Factura ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  filtrarFacturas(term: string): Observable<Factura[]> {\r\n    return this.http.get<Factura[]>(`${this.urlEndPoint}/filtrar-facturas/${term}`);\r\n  }\r\n\r\n  getFacturaUltima(): Observable<Factura[]> {\r\n    return this.http.get<Factura[]>(`${this.urlEndPoint}/ultimafactura`);\r\n  }\r\n\r\n  getFiltrarFacturasPorFecha(term1: string, term2: string): Observable<Factura[]> {\r\n      return this.http.get<Factura[]>(`${this.urlEndPoint}/fecha1/${term1}/fecha2/${term2}`);\r\n  }\r\n\r\n}\r\n","import { Injectable,  } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalFacturaBuscarService {\r\n\r\n  modal = false;\r\n\r\n  constructor() { }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { Injectable,  } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalFacturaService {\r\n\r\n  modal = false;\r\n\r\n  constructor() { }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n\r\n","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html'\r\n})\r\nexport class FooterComponent {\r\n  public autor: any = {  nombre: 'Ing. Manuel yivan', apellido: ' Rodriguez Carreño'};\r\n}\r\n","export default \".abrir-modal{\\r\\n  background-color: rgba(0, 0, 0, 0.7);\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  z-index: 1000;\\r\\n}\\r\\n\\r\\n.animacion{\\r\\n  animation-duration: 2s;\\r\\n  animation-fill-mode: both;\\r\\n  -webkit-animation-duration: 2s;\\r\\n  -webkit-animation-fill-mode: both;\\r\\n\\r\\n}\\r\\n\\r\\n.fadeIn{\\r\\n  animation-name: fadeIn;\\r\\n  -webkit-animation-name: fadeIn;\\r\\n\\r\\n}\\r\\n\\r\\n@keyframes fadeIn{0% { opacity:0 }to{opacity:1}}\\r\\n\\r\\n@-webkit-keyframes fadeIn{0% { opacity:0 }to{opacity:1}}\\r\\n\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 700px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VuZXJhbGVzL2Nzcy9tb2RhbC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQ0FBb0M7RUFDcEMsZUFBZTtFQUNmLE1BQU07RUFDTixPQUFPO0VBQ1AsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLDhCQUE4QjtFQUM5QixpQ0FBaUM7O0FBRW5DOztBQUNBO0VBQ0Usc0JBQXNCO0VBQ3RCLDhCQUE4Qjs7QUFFaEM7O0FBRUEsa0JBQWtCLEtBQUssVUFBVSxDQUFDLEdBQUcsU0FBUyxDQUFDOztBQUUvQywwQkFBMEIsS0FBSyxVQUFVLENBQUMsR0FBRyxTQUFTLENBQUM7O0FBRXZEO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9nZW5lcmFsZXMvY3NzL21vZGFsLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hYnJpci1tb2RhbHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB6LWluZGV4OiAxMDAwO1xyXG59XHJcblxyXG4uYW5pbWFjaW9ue1xyXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMnM7XHJcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMnM7XHJcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xyXG5cclxufVxyXG4uZmFkZUlue1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XHJcbiAgLXdlYmtpdC1hbmltYXRpb24tbmFtZTogZmFkZUluO1xyXG5cclxufVxyXG5cclxuQGtleWZyYW1lcyBmYWRlSW57MCUgeyBvcGFjaXR5OjAgfXRve29wYWNpdHk6MX19XHJcblxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZUluezAlIHsgb3BhY2l0eTowIH10b3tvcGFjaXR5OjF9fVxyXG5cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgbWluLXdpZHRoOiAxNTBweDtcclxuICBtYXgtd2lkdGg6IDcwMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuIl19 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['../css/modal.css']\r\n})\r\nexport class LoadingComponent {\r\n\r\n  titulo = 'Cargando....';\r\n\r\n  constructor(\r\n   ) { }\r\n\r\n  }\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYWxlcy9wYWdpbmE0MDQvcGFnaW5hNDA0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pagina404',\r\n  templateUrl: './pagina404.component.html',\r\n  styleUrls: ['./pagina404.component.css']\r\n})\r\nexport class Pagina404Component implements OnInit {\r\n\r\n  constructor(\r\n    public  activatedRoute: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      console.log(params);\r\n      // const id = +params.get('id');\r\n      // this.facturaService.getFactura(id)\r\n      // .subscribe(factura => {this.factura = factura,\r\n      //      this.loadingService.cerrarModal();\r\n      // });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component,  Input, OnChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-paginador',\r\n  templateUrl: './paginador.component.html',\r\n})\r\n\r\nexport class PaginadorComponent implements  OnChanges {\r\n  @Input() paginador: any;\r\n  @Input() link: string;\r\n\r\n  paginas: number [];\r\n  desde: number;\r\n  hasta: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges() {\r\n    this.desde = Math.min(\r\n                  Math.max(1, this.paginador.number - 4),\r\n                  this.paginador.totalPages - 5);\r\n    this.hasta = Math.max(\r\n                  Math.min(this.paginador.totalPages,\r\n                    this.paginador.number + 4), 6);\r\n\r\n    if (this.paginador.totalPages > 5) {\r\n      this.paginas = new Array(this.hasta - this.desde + 1 ).fill(0).map(\r\n        // tslint:disable-next-line: variable-name\r\n        (_valor, indice) => indice + this.desde);\r\n    } else {\r\n    // tslint:disable-next-line: variable-name\r\n    this.paginas = new Array(this.paginador.totalPages).fill(0).map((_valor, indice) => indice + 1);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { Sucursal } from './../../sucursales/interfaces/sucursal';\r\nimport { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FuncionesService {\r\n\r\n  urlBase = 'http://localhost:8080/';\r\n\r\n  constructor() { }\r\n\r\n  formatNumber(numero: number): string {\r\n      if (numero !== null && numero !== undefined) {\r\n        const separador = '.'; // separador para los miles\r\n        const sepDecimal = ','; // separador para los decimales\r\n        let num: string;\r\n        num = numero.toString();\r\n        num += '';\r\n        const splitStr = num.split('.');\r\n        let splitLeft = splitStr[0];\r\n        const splitRight = splitStr.length > 1 ? sepDecimal + splitStr[1] : '';\r\n        const regx = /(\\d+)(\\d{3})/;\r\n        while (regx.test(splitLeft)) {\r\n        splitLeft = splitLeft.replace(regx, '$1' + separador + '$2');\r\n        }\r\n        num = '$' + splitLeft + splitRight;\r\n        return num;\r\n      }\r\n    }\r\n  validarInputs(opcion: string, dato: any, nombreCampo: string, min: number, max: number ): boolean {\r\n    switch (opcion) {\r\n      case 'numero' : {\r\n          if (dato < 0 || dato === null || dato === undefined ) {\r\n            Swal.fire({\r\n              type: 'error',\r\n              title: `El campo '${nombreCampo}`,\r\n              text: `no debe estar vacio ni contener letras`,\r\n              footer: 'Intente de nuevo',\r\n              });\r\n            return true;\r\n          } else if ( dato < min ) {\r\n            Swal.fire({\r\n              type: 'error',\r\n              title: 'El valor minimo del Campo ',\r\n              text: `'${nombreCampo}' no es valido`,\r\n              footer: 'Intente de nuevo',\r\n              });\r\n            return true;\r\n          } else if ( dato >= max ) {\r\n            Swal.fire({\r\n              type: 'error',\r\n              title: 'El valor maximo del Campo',\r\n              text: `'${nombreCampo}' no es valido`,\r\n              footer: 'Intente de nuevo',\r\n              });\r\n          }\r\n          return false;\r\n      }\r\n\r\n      case 'texto' : {\r\n        if ( dato === null || dato === undefined ) {\r\n          Swal.fire({\r\n            type: 'error',\r\n            title: `El campo '${nombreCampo}'`,\r\n            text: `No puede estar vacio `,\r\n            footer: 'Intente de nuevo',\r\n            });\r\n          return true;\r\n\r\n        } else if ( dato.toString().length < min ) {\r\n          Swal.fire({\r\n            type: 'error',\r\n            title: `El campo '${nombreCampo}' `,\r\n            text: `debe contener minimo '${min}' caracteres`,\r\n            footer: 'Intente de nuevo',\r\n          });\r\n          return true;\r\n\r\n        } else if ( dato.toString().length > max ) {\r\n          Swal.fire({\r\n            type: 'error',\r\n            title: `El campo '${nombreCampo}' `,\r\n            text: `debe contener maximo '${max}' caracteres`,\r\n            footer: 'Intente de nuevo',\r\n            });\r\n          return true;\r\n        }\r\n        return false;\r\n       }\r\n    }\r\n  }\r\n\r\n  setTitulo(): string {\r\n    let sucursal: Sucursal;\r\n    let titulo: string;\r\n    sucursal =   JSON.parse(sessionStorage.getItem('sucursal')) as Sucursal;\r\n    titulo = `Sucursal: ${sucursal.nombre}`;\r\n    return titulo;\r\n  }\r\n\r\n  getDatos(): Sucursal {\r\n    let sucursal: Sucursal;\r\n    sucursal =   JSON.parse(sessionStorage.getItem('sucursal')) as Sucursal;\r\n    return sucursal;\r\n  }\r\n\r\n  setUrlBase(): string {\r\n    // se settea la url para los servicios\r\n    return (this.urlBase);\r\n  }\r\n\r\n}\r\n","\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  modal = false;\r\n  // tslint:disable-next-line: variable-name\r\n  _notificarUpload = new EventEmitter<any>();\r\n  constructor() { }\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../users/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { SucursalService } from './../sucursales/services/sucursal.service';\r\nimport { Sucursal } from './../sucursales/interfaces/sucursal';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n})\r\nexport class HeaderComponent {\r\n\r\n  sucursales: Sucursal[];\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public  router: Router,\r\n    public  sucursalService: SucursalService,\r\n    ) {\r\n      this.sucursalService.getSucursalLista().subscribe(sucursales => this.sucursales = sucursales);\r\n    }\r\n\r\n  logout(): void {\r\n    const username = this.authService.usuario.username;\r\n    this.authService.logout();\r\n    Swal.fire({\r\n      type: 'info',\r\n      title: '¡Informacion!',\r\n      text: `Hasta pronto ${username}`,\r\n      footer: 'Has cerrado sesión con éxito!',\r\n      });\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { LoadingService } from './../../generales/services/loading.service';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { Producto } from '../interfaces/producto';\r\nimport { ProductoService  } from '../services/producto.service';\r\nimport { ModalProductoService  } from '../services/modal-producto.service';\r\nimport Swal from 'sweetalert2';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalProductoBuscarService } from '../producto-buscar/modal-producto-buscar.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-detalle-producto',\r\n  templateUrl: './detalle-producto.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\nexport class DetalleProductoComponent implements OnInit {\r\n\r\n  @Input() producto: Producto;\r\n  titulo = 'Detalle Producto';\r\n  public fotoSelecionada: File;\r\n  progreso = 0;\r\n  rutaFoto = 'Selecionar Foto';\r\n\r\n  constructor(\r\n    public  productoService: ProductoService,\r\n    public modalProductoService: ModalProductoService,\r\n    public modalProductoBuscarService: ModalProductoBuscarService,\r\n    public funcionesService: FuncionesService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService\r\n   ) { }\r\n\r\n   ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      const id = +params.get('id');\r\n      this.productoService.getProducto(id)\r\n      .subscribe(\r\n        producto => {this.producto = producto,\r\n          console.log('formato cliente');\r\n                     console.log(producto);\r\n                     this.loadingService.cerrarModal();\r\n        });\r\n    });\r\n  }\r\n\r\n  seleccionarFoto(event) {\r\n    this.fotoSelecionada = event.target.files[0];\r\n    this.progreso = 0;\r\n    if (this.fotoSelecionada.type.indexOf('image') < 0) {\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Subir Selecionar Imagen',\r\n        text: `El archivo debe ser del tipo 'Imagen'`,\r\n        footer: 'Intente de nuevo',\r\n        });\r\n      this.fotoSelecionada = null;\r\n    } else {\r\n      this.rutaFoto = this.fotoSelecionada.name;\r\n    }\r\n  }\r\n\r\n  subirFoto() {\r\n    console.log('ingreso a subir foto');\r\n    if (!this.fotoSelecionada) {\r\n      this.rutaFoto = 'Selecionar Foto';\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Subir Imagen',\r\n        text: `No ha selecionado una imagen`,\r\n        footer: 'Intente de nuevo',\r\n        });\r\n    } else {\r\n    this.productoService.subirFoto(this.fotoSelecionada, this.producto.id)\r\n    .subscribe( event => {\r\n      if (event.type === HttpEventType.UploadProgress) {\r\n            this.progreso = Math.round((event.loaded / event.total) * 100);\r\n      } else if (event.type === HttpEventType.Response) {\r\n          const response: any = event.body;\r\n          this.producto = response.producto as Producto;\r\n          this.modalProductoService.notificarUpload.emit(this.producto);\r\n          this.rutaFoto = 'Selecionar Foto';\r\n          this.fotoSelecionada = null;\r\n          Swal.fire({\r\n            type: 'success',\r\n            title: 'La Foto se ha subido con Exito!',\r\n            text: response.mensaje,\r\n            footer: '',\r\n            });\r\n          // pendiente meter un time out\r\n          this.progreso = 0;\r\n      }\r\n    });\r\n  }\r\n  }\r\n  cerrarModal() {\r\n    this.modalProductoService.cerrarModal();\r\n    this.fotoSelecionada = null;\r\n    this.progreso = 0;\r\n    this.modalProductoBuscarService.cerrarModal();\r\n    this.producto = null;\r\n  }\r\n  calcularInversion(cantidad: number, precioCompra: number): string {\r\n    const inversion = cantidad * precioCompra;\r\n    return this.formatNumber(inversion);\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Producto } from '../interfaces/producto';\r\nimport { ProductoService } from '../services/producto.service';\r\nimport { CategoriaService } from '../../categorias/services/categoria.service';\r\nimport { Categoria } from '../../categorias/interfaces/categoria';\r\nimport {Router, ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-form-producto',\r\n  templateUrl: './form-producto.component.html'\r\n})\r\n\r\nexport class FormProductoComponent implements OnInit {\r\n\r\n  prePrecioCompra: number;\r\n  preCantidad: number;\r\n  producto: Producto = new Producto();\r\n  categorias: Categoria[];\r\n  titulo = 'Crear Productos';\r\n  errores: string[];\r\n\r\n  constructor(\r\n        public  productoService: ProductoService,\r\n        public  categoriaService: CategoriaService,\r\n        public  router: Router,\r\n        public funcionesServicer: FuncionesService,\r\n        public  activatedRoute: ActivatedRoute,\r\n        public loadingService: LoadingService\r\n        ) { }\r\n\r\n  ngOnInit() {\r\n    this.cargarProducto();\r\n  }\r\n\r\n  cargarProducto(): void {\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n          this.productoService.getProducto(id).subscribe(\r\n            (producto) => {this.producto = producto,\r\n              this.prePrecioCompra = this.producto.precioCompra,\r\n              this.preCantidad = this.producto.cantidad,\r\n              this.loadingService.cerrarModal();\r\n             }\r\n            );\r\n        }\r\n      }\r\n    );\r\n    this.loadingService.cerrarModal();\r\n    // this.categoriaService.getCategoriaLista().subscribe(categorias => this.categorias = categorias);\r\n  }\r\n\r\n  public create(): void {\r\n    this.loadingService.abrirModal();\r\n    if ( this.funcionesServicer.validarInputs(\r\n      'texto', this.producto.nombre, 'Nombre', 3, 50) ) {\r\n      } else if (this.funcionesServicer.validarInputs(\r\n        'texto', this.producto.codigo, 'Codigo', 1, 5) ) {\r\n         this.producto.codigo = '0';\r\n\r\n    } else if (this.funcionesServicer.validarInputs(\r\n          'numero', this.producto.precioCompra, 'Precio Compra', 25, 100000000) ) {\r\n           this.producto.precioCompra = 0;\r\n    } else if (this.funcionesServicer.validarInputs(\r\n               'numero', this.producto.precio, 'Precio Venta', 25, 100000000)) {\r\n                 this.producto.precio = 0;\r\n    } else if ( this.producto.precioCompra > this.producto.precio  ) {\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: `Precio De Venta Menor Al Precio De Compra:`,\r\n        text: `El Precio De Venta debe ser 'MAYOR' o 'IGUAL' al Precio de Compra`,\r\n        footer: `Favor Corregir!`\r\n      });\r\n    } else if (this.funcionesServicer.validarInputs(\r\n               'numero', this.producto.cantidad, 'Cantidad', 0, 1000)) {\r\n                  this.producto.cantidad = 0;\r\n    } else {\r\n      this.productoService.create(this.producto).subscribe(\r\n        producto => {\r\n          this.router.navigate(['/productos']),\r\n          Swal.fire({\r\n            type: 'success',\r\n            title: `Producto:`,\r\n            text: `${producto.nombre}`,\r\n            footer: `Creado con Exito!`\r\n          });\r\n          this.loadingService.cerrarModal();\r\n        },\r\n        err => {\r\n          this.errores = err.error.errors as string[];\r\n          this.loadingService.cerrarModal();\r\n        }\r\n      );\r\n    }\r\n  }\r\n  update(): void {\r\n    this.loadingService.abrirModal();\r\n    if ( this.prePrecioCompra !== this.producto.precioCompra\r\n        && this.preCantidad !== this.producto.cantidad && this.producto.cantidad > 0 ) {\r\n          const diferenciaDeCantidad = this.producto.cantidad - this.preCantidad;\r\n          const inversionAnterior = this.prePrecioCompra * this.preCantidad;\r\n          console.log('inversion anterior: ' + this.prePrecioCompra + ' * ' + this.preCantidad +\r\n                      ' = ' + inversionAnterior);\r\n          const inversionActual = this.producto.precioCompra * diferenciaDeCantidad;\r\n          console.log('inversion nueva: ' + this.producto.precioCompra + ' * ' + diferenciaDeCantidad +\r\n                      ' = ' + inversionActual);\r\n          const inversionTotal = inversionAnterior + inversionActual;\r\n          console.log('inversion total: ' + inversionTotal);\r\n          const nuevoCostoUnidad = ( inversionTotal / this.producto.cantidad );\r\n          console.log('nuevo costo unidad : ' + nuevoCostoUnidad);\r\n          this.producto.precioCompra = nuevoCostoUnidad;\r\n    }\r\n\r\n    if ( this.funcionesServicer.validarInputs(\r\n      'texto', this.producto.nombre, 'Nombre', 3, 50) ) {\r\n\r\n    } else if (this.funcionesServicer.validarInputs(\r\n          'numero', this.producto.precioCompra, 'Precio Compra', 25, 100000000) ) {\r\n           this.producto.precioCompra = 0;\r\n    } else if (this.funcionesServicer.validarInputs(\r\n               'numero', this.producto.precio, 'Precio Venta', 25, 100000000)) {\r\n                 this.producto.precio = 0;\r\n    } else if ( this.producto.precioCompra > this.producto.precio  ) {\r\n        Swal.fire({\r\n          type: 'error',\r\n          title: `Precio De Venta Menor Al Precio De Compra:`,\r\n          text: `El Precio De Venta debe ser 'MAYOR' o 'IGUAL' al Precio de Compra`,\r\n          footer: `Favor Corregir!`\r\n        });\r\n    } else if (this.funcionesServicer.validarInputs(\r\n               'numero', this.producto.cantidad, 'Cantidad', 0, 1000)) {\r\n                  this.producto.cantidad = 0;\r\n    } else {\r\n      this.productoService.update(this.producto)\r\n      .subscribe(\r\n        producto => {\r\n          this.router.navigate(['/productos']),\r\n          Swal.fire({\r\n            type: 'success',\r\n            title: `Producto:`,\r\n            text: `${producto.nombre}`,\r\n            footer: `Actualizado con Exito!`\r\n          });\r\n          this.loadingService.cerrarModal();\r\n        },\r\n        err => {\r\n          this.errores = err.error.errors as string[];\r\n          this.loadingService.cerrarModal();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","// import { Categoria } from '../categorias/categoria';\r\nexport class Producto {\r\n  id: number;\r\n  descripcion: string;\r\n  nombre: string;\r\n  createAt: string;\r\n  precio: number;\r\n  precioCompra: number;\r\n  cantidad: number;\r\n  foto: string;\r\n  codigo: string;\r\n  // categoria: Categoria;\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Producto } from '../interfaces/producto';\r\nimport { ProductoService } from '../services/producto.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalProductoService  } from '../services/modal-producto.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalProductoBuscarService } from '../producto-buscar/modal-producto-buscar.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-productos',\r\n  templateUrl: './productos.component.html'\r\n})\r\nexport class ProductosComponent implements OnInit {\r\n\r\n  productos: Producto[];\r\n  link = '/productos/page';\r\n  paginador: any;\r\n  titulo: string;\r\n\r\n  constructor(\r\n    public  productoService: ProductoService,\r\n    public modalProductoService: ModalProductoService,\r\n    public modalProductoBuscarService: ModalProductoBuscarService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public funcionesService: FuncionesService,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.cerrarModalBusquedaProducto();\r\n    this.titulo = this.funcionesService.setTitulo();\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.productoService.getProductos(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('ProductoComponent: tap 3');\r\n        (response.content as Producto[]).forEach(producto => {\r\n          this.loadingService.cerrarModal();\r\n        //  console.log(producto);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.productos = response.content as Producto[];\r\n      this.paginador = response;\r\n    });\r\n    });\r\n    this.modalProductoService.notificarUpload.subscribe(producto => {\r\n      this.productos = this.productos.map( productoOriginal => {\r\n        if (producto.id === productoOriginal.id) {\r\n          productoOriginal.foto = producto.foto;\r\n        }\r\n        return productoOriginal;\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(producto: Producto): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar El Producto ${producto.nombre} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Producto!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.productoService.delete(producto.id).subscribe(\r\n            response => {\r\n              this.productos = this.productos.filter(cli => cli !== producto);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Producto ${producto.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  abrirModalProductoBuscar() {\r\n    this.modalProductoBuscarService.abrirModal();\r\n  }\r\n\r\n  cerrarModalBusquedaProducto() {\r\n    this.modalProductoBuscarService.cerrarModal();\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalProductoBuscarService {\r\n\r\n  modal = false;\r\n  // tslint:disable-next-line: variable-name\r\n  _notificarUpload = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { map, startWith, flatMap } from 'rxjs/operators';\r\nimport { ModalProductoBuscarService } from './modal-producto-buscar.service';\r\nimport { Producto } from '../interfaces/producto';\r\nimport { ProductoService } from '../services/producto.service';\r\nimport { ModalProductoService } from '../services/modal-producto.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-producto-buscar',\r\n  templateUrl: './producto-buscar.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\n\r\nexport class ProductoBuscarComponent implements OnInit {\r\n  id: number;\r\n  producto: Producto;\r\n  titulo = 'Buscar Producto';\r\n  productoSelecionado: Producto;\r\n  productosFiltrados: Observable<Producto[]>;\r\n  autocompleteControl = new FormControl();\r\n\r\n  constructor(\r\n    public modalProductoBuscarService: ModalProductoBuscarService,\r\n    public modalProductoService: ModalProductoService,\r\n    public authService: AuthService,\r\n    public productoService: ProductoService,\r\n    public funcionesService: FuncionesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.productosFiltrados = this.autocompleteControl.valueChanges\r\n      .pipe(\r\n        map(value => typeof value === 'string' ? value : value.nombre),\r\n        flatMap(value => value ? this._filter(value) : [])\r\n      );\r\n  }\r\n\r\n  public  _filter(value: string): Observable<Producto[]> {\r\n    const filterValue = value.toLowerCase();\r\n    return this.productoService.filtrarProductos(filterValue);\r\n  }\r\n\r\n  mostrarNombre(producto?: Producto): string | undefined {\r\n    return producto ? producto.nombre : undefined;\r\n  }\r\n\r\n  seleccionarProducto(event: MatAutocompleteSelectedEvent): void {\r\n    this.producto = event.option.value as Producto;\r\n    this.id = this.producto.id;\r\n    // console.log('seleciono producto: ');\r\n    // console.log(this.producto);\r\n    this.autocompleteControl.setValue('');\r\n    event.option.focus();\r\n    event.option.deselect();\r\n\r\n  }\r\n  abrirModal(producto: Producto) {\r\n    this.productoSelecionado = producto;\r\n    this.modalProductoService.abrirModal();\r\n  }\r\n\r\n  cerrarModalBusquedaProducto() {\r\n    this.modalProductoBuscarService.cerrarModal();\r\n    this.producto = null;\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalProductoService {\r\n\r\n  modal = false;\r\n  // tslint:disable-next-line: variable-name\r\n  _notificarUpload = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Producto } from '../interfaces/producto';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class ProductoService {\r\npublic  urlEndPoint: string;\r\n\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/productos`;\r\n            }\r\n\r\n            public getProductos(page: number): Observable<any> {\r\n              return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n                tap((response: any) => {\r\n                     // console.log('ProductoService: tap 1');\r\n                     (response.content as Producto[]).forEach(producto => {\r\n                      // console.log(producto.nombre);\r\n                     });\r\n                    }),\r\n                    map((response: any ) => {\r\n                      (response.content as Producto[]).map( producto => {\r\n                        producto.nombre = producto.nombre.toUpperCase();\r\n                        return producto;\r\n                    });\r\n                      return response;\r\n                    }),\r\n                    tap(response => {\r\n                      // console.log('ProductoService: tap2');\r\n                      (response.content as Producto[]).forEach(producto => {\r\n                       // console.log(producto.nombre);\r\n                      });\r\n                   }\r\n                )\r\n              );\r\n            }\r\n  create(producto: Producto): Observable<Producto> {\r\n    return this.http.post(this.urlEndPoint, producto).pipe(\r\n      map((response: any ) => response.producto as Producto ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          Swal.fire({\r\n            type: 'error',\r\n            title: e.error.mensaje,\r\n            text: `Ya existe un producto Con este 'Nombre'`,\r\n          });\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  getProducto(id): Observable<Producto> {\r\n    return this.http.get<Producto>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/productos']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(producto: Producto): Observable<Producto> {\r\n    return this.http.put(\r\n      `${this.urlEndPoint}/${producto.id}`,\r\n      producto).pipe(\r\n        map((response: any ) => response.producto as Producto ),\r\n        catchError (e => {\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            Swal.fire({\r\n              type: 'error',\r\n              title: e.error.mensaje,\r\n              text: `Ya existe un producto Con este 'Nombre'`,\r\n            });\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id: number): Observable<Producto> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.producto as Producto ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  subirFoto(archivo: File, id): Observable<HttpEvent<{}>> {\r\n    const formData = new FormData();\r\n    formData.append('archivo', archivo);\r\n    formData.append('id', id);\r\n    const req = new HttpRequest('POST',  `${this.urlEndPoint}/uploadimgproducto`, formData, {\r\n      reportProgress: true\r\n    });\r\n    return this.http.request(req);\r\n  }\r\n\r\n  filtrarProductos(term: string): Observable<Producto[]> {\r\n    return this.http.get<Producto[]>(`${this.urlEndPoint}/filtrar-productos/${term}`);\r\n  }\r\n\r\n\r\n  filtrarClientes(term: string): Observable<Producto[]> {\r\n    return this.http.get<Producto[]>(`${this.urlEndPoint}/filtrar-productos/${term}`);\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Region } from '../interfaces/region';\r\nimport { RegionService  } from '../services/region.service';\r\nimport { ModalRegionService  } from '../services/modal-region.service';\r\n\r\n@Component({\r\n  selector: 'app-detalle-region',\r\n  templateUrl: './detalle-region.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\n\r\nexport class DetalleRegionComponent   {\r\n\r\n  @Input() region: Region;\r\n  titulo = 'Detalle Barrio';\r\n\r\n  constructor(\r\n    public  regionService: RegionService,\r\n    public modalRegionService: ModalRegionService,\r\n   ) { }\r\n\r\n  cerrarModal() {\r\n    this.modalRegionService.cerrarModal();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Region } from '../interfaces/region';\r\nimport { RegionService } from '../services/region.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-form-regiones',\r\n  templateUrl: './form-regiones.component.html'\r\n})\r\n\r\nexport class FormRegionesComponent implements OnInit {\r\n\r\n  region: Region = new Region();\r\n  titulo = 'Crear Region';\r\n  errores: string[];\r\n  constructor(\r\n    public  regionService: RegionService,\r\n    public  router: Router,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public loadingService: LoadingService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.cargarRegion();\r\n  }\r\n\r\n  cargarRegion(): void {\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n            this.regionService.getRegion(id).subscribe(\r\n            (region) => {this.region = region,\r\n              this.loadingService.cerrarModal();\r\n            });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public create(): void {\r\n    this.loadingService.abrirModal();\r\n    this.regionService.create(this.region).subscribe(\r\n      region => {\r\n        this.router.navigate(['/regiones']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Nuevo Barrio`,\r\n          text: `${region.nombre}`,\r\n          footer: `Creado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        console.error(err);\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n  update(): void {\r\n    this.loadingService.abrirModal();\r\n    this.regionService.update(this.region)\r\n    .subscribe(\r\n      region => {\r\n        this.router.navigate(['/regiones']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Barrio`,\r\n          text: `${region.nombre}`,\r\n          footer: `Actualizado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","export class Region {\r\n  id: number;\r\n  nombre: string;\r\n  createAt: string;\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Region } from '../interfaces/region';\r\nimport { RegionService } from '../services/region.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalRegionService  } from '../services/modal-region.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-regiones',\r\n  templateUrl: './regiones.component.html'\r\n})\r\n\r\nexport class RegionesComponent implements OnInit {\r\n\r\n  regiones: Region[];\r\n  paginador: any;\r\n  regionSelecionado: Region;\r\n  link = '/regiones/page';\r\n  titulo: string;\r\n\r\n  constructor(\r\n    public  regionService: RegionService,\r\n    public modalRegionService: ModalRegionService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService,\r\n    public funcionesService: FuncionesService\r\n    ) {\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.titulo = this.funcionesService.setTitulo();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.regionService.getRegiones(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('RegionesComponent: tap 3');\r\n        (response.content as Region[]).forEach(region => {\r\n          this.loadingService.cerrarModal();\r\n        //  console.log(region.nombre);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.regiones = response.content as Region[];\r\n      this.paginador = response;\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(region: Region): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar el Barrio ${region.nombre} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Barrio!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.regionService.delete(region.id).subscribe(\r\n            response => {\r\n              this.regiones = this.regiones.filter(reg => reg !== region);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Barrio ${region.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  abrirModal(region: Region) {\r\n    this.regionSelecionado = region;\r\n    this.modalRegionService.abrirModal();\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalRegionService {\r\n\r\n  modal = false;\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  public  _notificarUpload = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Region } from '../interfaces/region';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable,  throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class RegionService {\r\n\r\npublic  urlEndPoint: string;\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/regiones`;\r\n            }\r\n\r\n public getRegiones(page: number): Observable<any> {\r\n    return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n      tap((response: any) => {\r\n           // console.log('RegionService: tap 1');\r\n           (response.content as Region[]).forEach(region => {\r\n           //  console.log(region.nombre);\r\n           });\r\n          }),\r\n          map((response: any ) => {\r\n            (response.content as Region[]).map( region => {\r\n              region.nombre = region.nombre.toUpperCase();\r\n              return region;\r\n          });\r\n            return response;\r\n          }),\r\n          tap(response => {\r\n            //  console.log('RegionService: tap2');\r\n            (response.content as Region[]).forEach(region => {\r\n            //  console.log(region.nombre);\r\n            });\r\n         }));\r\n\r\n  }\r\n\r\n  public getRegionLista(): Observable<Region[]> {\r\n    return this.http.get<Region[]>(this.urlEndPoint);\r\n  }\r\n\r\n  create(region: Region): Observable<Region> {\r\n    return this.http.post(this.urlEndPoint, region).pipe(\r\n      map((response: any ) => response.region as Region ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRegion(id): Observable<Region> {\r\n    return this.http.get<Region>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/regiones']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        this.router.navigate(['/regiones']);\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(region: Region): Observable<any> {\r\n    return this.http.put<any>(\r\n      `${this.urlEndPoint}/${region.id}`,\r\n      region).pipe(\r\n        map((response: any ) => response.region as Region ),\r\n        catchError (e => {\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id: number): Observable<Region> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.region as Region ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component,  Input } from '@angular/core';\r\nimport { Servicio } from '../interfaces/servicio';\r\nimport { ServicioService  } from '../services/servicio.service';\r\nimport { ModalServicioService  } from '../services/modal-servicio.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalServicioBuscarService } from '../services/modal-servicio-buscar.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-detalle-servicio',\r\n  templateUrl: './detalle-servicio.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\nexport class DetalleServicioComponent {\r\n\r\n  @Input() servicio: Servicio;\r\n  titulo = 'Detalle Servicio';\r\n\r\n  constructor(\r\n    public  servicioService: ServicioService,\r\n    public modalServicioService: ModalServicioService,\r\n    public modalServicioBuscarService: ModalServicioBuscarService,\r\n    public authService: AuthService,\r\n    public funcionesService: FuncionesService,\r\n   ) { }\r\n\r\n  cerrarModal() {\r\n    this.modalServicioService.cerrarModal();\r\n    this.modalServicioBuscarService.cerrarModal();\r\n    this.servicio = null;\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n\r\n}\r\n\r\n","export default \".abrir-modal{\\r\\n  background-color: rgba(0, 0, 0, 0.7);\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  z-index: 1000;\\r\\n}\\r\\n\\r\\n.animacion{\\r\\n  animation-duration: 2s;\\r\\n  animation-fill-mode: both;\\r\\n  -webkit-animation-duration: 2s;\\r\\n  -webkit-animation-fill-mode: both;\\r\\n\\r\\n}\\r\\n\\r\\n.fadeIn{\\r\\n  animation-name: fadeIn;\\r\\n  -webkit-animation-name: fadeIn;\\r\\n\\r\\n}\\r\\n\\r\\n@keyframes fadeIn{0% { opacity:0 }to{opacity:1}}\\r\\n\\r\\n@-webkit-keyframes fadeIn{0% { opacity:0 }to{opacity:1}}\\r\\n\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljaW9zL2RldGFsbGUtc2VydmljaW8vc2VydmljaW8tYnVzY2FyL3NlcnZpY2lvLWJ1c2Nhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0NBQW9DO0VBQ3BDLGVBQWU7RUFDZixNQUFNO0VBQ04sT0FBTztFQUNQLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHlCQUF5QjtFQUN6Qiw4QkFBOEI7RUFDOUIsaUNBQWlDOztBQUVuQzs7QUFDQTtFQUNFLHNCQUFzQjtFQUN0Qiw4QkFBOEI7O0FBRWhDOztBQUVBLGtCQUFrQixLQUFLLFVBQVUsQ0FBQyxHQUFHLFNBQVMsQ0FBQzs7QUFFL0MsMEJBQTBCLEtBQUssVUFBVSxDQUFDLEdBQUcsU0FBUyxDQUFDOztBQUV2RDtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvc2VydmljaW9zL2RldGFsbGUtc2VydmljaW8vc2VydmljaW8tYnVzY2FyL3NlcnZpY2lvLWJ1c2Nhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFicmlyLW1vZGFse1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHotaW5kZXg6IDEwMDA7XHJcbn1cclxuXHJcbi5hbmltYWNpb257XHJcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcclxuICBhbmltYXRpb24tZmlsbC1tb2RlOiBib3RoO1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcclxuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGJvdGg7XHJcblxyXG59XHJcbi5mYWRlSW57XHJcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcclxuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XHJcblxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbnswJSB7IG9wYWNpdHk6MCB9dG97b3BhY2l0eToxfX1cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW57MCUgeyBvcGFjaXR5OjAgfXRve29wYWNpdHk6MX19XHJcblxyXG4uZXhhbXBsZS1mb3JtIHtcclxuICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { map, flatMap } from 'rxjs/operators';\r\nimport { ModalServicioBuscarService } from '../../services/modal-servicio-buscar.service';\r\nimport { Servicio } from '../../interfaces/servicio';\r\nimport { ServicioService } from '../../services/servicio.service';\r\nimport { ModalServicioService } from '../../services/modal-servicio.service';\r\nimport { FuncionesService } from '../../../generales/services/funciones.service';\r\n\r\n@Component({\r\n  selector: 'app-servicio-buscar',\r\n  templateUrl: './servicio-buscar.component.html',\r\n  styleUrls: ['./servicio-buscar.component.css']\r\n})\r\nexport class ServicioBuscarComponent implements OnInit {\r\n  id: number;\r\n  servicio: Servicio;\r\n  titulo = 'Buscar Servicio';\r\n  servicioSelecionado: Servicio;\r\n  serviciosFiltrados: Observable<Servicio[]>;\r\n  autocompleteControl = new FormControl();\r\n\r\n  constructor(\r\n    public modalServicioBuscarService: ModalServicioBuscarService,\r\n    public modalServicioService: ModalServicioService,\r\n    public servicioService: ServicioService,\r\n    public funcionesService: FuncionesService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.serviciosFiltrados = this.autocompleteControl.valueChanges\r\n      .pipe(\r\n        map(value => typeof value === 'string' ? value : value.nombre),\r\n        flatMap(value => value ? this._filter(value) : [])\r\n      );\r\n  }\r\n\r\n  public  _filter(value: string): Observable<Servicio[]> {\r\n    const filterValue = value.toLowerCase();\r\n    return this.servicioService.filtrarServicios(filterValue);\r\n  }\r\n\r\n  mostrarNombre(servicio?: Servicio): string | undefined {\r\n    return servicio ? servicio.nombre : undefined;\r\n  }\r\n\r\n  seleccionarServicio(event: MatAutocompleteSelectedEvent): void {\r\n    this.servicio = event.option.value as Servicio;\r\n    this.id = this.servicio.id;\r\n    // console.log('seleciono producto: ');\r\n    // console.log(this.producto);\r\n    this.autocompleteControl.setValue('');\r\n    event.option.focus();\r\n    event.option.deselect();\r\n\r\n  }\r\n  abrirModal(servicio: Servicio) {\r\n    this.servicioSelecionado = servicio;\r\n    this.modalServicioService.abrirModal();\r\n  }\r\n\r\n  cerrarModalBusquedaServicio() {\r\n    this.modalServicioBuscarService.cerrarModal();\r\n    this.servicio = null;\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Servicio } from '../interfaces/servicio';\r\nimport { ServicioService } from '../services/servicio.service';\r\nimport {Router, ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-form-servicio',\r\n  templateUrl: './form-servicio.component.html'\r\n})\r\nexport class FormServicioComponent implements OnInit {\r\n\r\n  servicio: Servicio = new Servicio();\r\n  titulo = 'Crear Servicio';\r\n  errores: string[];\r\n  constructor(\r\n        public  servicioService: ServicioService,\r\n        public  router: Router,\r\n        public  activatedRoute: ActivatedRoute,\r\n        public loadingService: LoadingService\r\n        ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.cargarServicio();\r\n  }\r\n  cargarServicio(): void {\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n          this.servicioService.getServicio(id).subscribe(\r\n            (servicio) => {this.servicio = servicio,\r\n              this.loadingService.cerrarModal();\r\n            });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public create(): void {\r\n    this.loadingService.abrirModal();\r\n    this.servicioService.create(this.servicio).subscribe(\r\n      servicio => {\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Nuevo Servicio`,\r\n          text: `${servicio.nombre}`,\r\n          footer: `Creado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n      }\r\n    );\r\n  }\r\n\r\n  update(): void {\r\n    this.loadingService.abrirModal();\r\n    this.servicioService.update(this.servicio)\r\n    .subscribe(\r\n      servicio => {\r\n        this.router.navigate(['/servicios']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Servicio`,\r\n          text: `${servicio.nombre}`,\r\n          footer: `Actualizado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","export class Servicio {\r\n  id: number;\r\n  descripcion: string;\r\n  nombre: string;\r\n  createAt: string;\r\n  costoRepuesto: number;\r\n  costoServicio: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Servicio } from '../interfaces/servicio';\r\nimport { ServicioService } from '../services/servicio.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalServicioService  } from '../services/modal-servicio.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { ModalServicioBuscarService } from '../services/modal-servicio-buscar.service';\r\nimport { FuncionesService } from '../../generales/services/funciones.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-servicios',\r\n  templateUrl: './servicios.component.html'\r\n})\r\nexport class ServiciosComponent implements OnInit {\r\n\r\n  servicios: Servicio[];\r\n  paginador: any;\r\n  servicioSelecionado: Servicio;\r\n  link = '/servicios/page';\r\n\r\n  constructor(\r\n    public  servicioService: ServicioService,\r\n    public modalServicioService: ModalServicioService,\r\n    public modalServicioBuscarService: ModalServicioBuscarService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public funcionesService: FuncionesService,\r\n    public authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.cerrarModalBusquedaServicio();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.servicioService.getServicios(page)\r\n    .pipe(\r\n      tap( response => {\r\n        console.log('ServicioComponent: tap 3');\r\n        (response.content as Servicio[]).forEach(servicio => {\r\n          // console.log(servicio);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.servicios = response.content as Servicio[];\r\n      this.paginador = response;\r\n    });\r\n    });\r\n  }\r\n\r\n  delete(servicio: Servicio): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar El Producto ${servicio.nombre} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Servicio!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.servicioService.delete(servicio.id).subscribe(\r\n            response => {\r\n              this.servicios = this.servicios.filter(cli => cli !== servicio);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Producto ${servicio.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n  abrirModal(servicio: Servicio) {\r\n    this.servicioSelecionado = servicio;\r\n    this.modalServicioService.abrirModal();\r\n  }\r\n\r\n  abrirModalServicioBuscar() {\r\n     this.modalServicioBuscarService.abrirModal();\r\n  }\r\n\r\n  cerrarModalBusquedaServicio() {\r\n     this.modalServicioBuscarService.cerrarModal();\r\n  }\r\n\r\n  formatNumber(cantidad: number): string {\r\n    return this.funcionesService.formatNumber(cantidad);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalServicioBuscarService {\r\n  modal = false;\r\n  // tslint:disable-next-line: variable-name\r\n  _notificarUpload = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalServicioService {\r\n\r\n  modal = false;\r\n  // tslint:disable-next-line: variable-name\r\n  _notificarUpload = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Servicio } from '../interfaces/servicio';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class ServicioService {\r\n\r\n  public  urlEndPoint: string;\r\n\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/servicios`;\r\n            }\r\n\r\n            public getServicios(page: number): Observable<any> {\r\n              return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n                tap((response: any) => {\r\n                     // console.log('servicioService: tap 1');\r\n                     (response.content as Servicio[]).forEach(servicio => {\r\n                      // console.log(servicio.nombre);\r\n                     });\r\n                    }),\r\n                    map((response: any ) => {\r\n                      (response.content as Servicio[]).map( servicio => {\r\n                        servicio.nombre = servicio.nombre.toUpperCase();\r\n                        return servicio;\r\n                    });\r\n                      return response;\r\n                    }),\r\n                    tap(response => {\r\n                      // console.log('ServicioService: tap2');\r\n                      (response.content as Servicio[]).forEach(servicio => {\r\n                       // console.log(servicio.nombre);\r\n                      });\r\n                   }\r\n                )\r\n              );\r\n            }\r\n  create(servicio: Servicio): Observable<Servicio> {\r\n    return this.http.post(this.urlEndPoint, servicio).pipe(\r\n      map((response: any ) => response.servicio as Servicio ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  getServicio(id): Observable<Servicio> {\r\n    return this.http.get<Servicio>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/servicios']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(servicio: Servicio): Observable<Servicio> {\r\n    return this.http.put(\r\n      `${this.urlEndPoint}/${servicio.id}`,\r\n      servicio).pipe(\r\n        map((response: any ) => response.servicio as Servicio ),\r\n        catchError (e => {\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id: number): Observable<Servicio> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.servicio as Servicio ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n   filtrarServicios(term: string): Observable<Servicio[]> {\r\n    return this.http.get<Servicio[]>(`${this.urlEndPoint}/filtrar-servicios/${term}`);\r\n  }\r\n\r\n\r\n  // filtrarClientes(term: string): Observable<Servicio[]> {\r\n  //   return this.http.get<Servicio[]>(`${this.urlEndPoint}/filtrar-servicios/${term}`);\r\n  // }\r\n\r\n}\r\n\r\n","\r\nimport { Component, Input } from '@angular/core';\r\nimport { Sucursal } from '../interfaces/sucursal';\r\nimport { SucursalService  } from '../services/sucursal.service';\r\nimport { ModalSucursalService  } from '../services/modal-sucursal.service';\r\n\r\n@Component({\r\n  selector: 'app-detalle-sucursal',\r\n  templateUrl: './detalle-sucursal.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\n\r\nexport class DetalleSucursalComponent   {\r\n\r\n  @Input() sucursal: Sucursal;\r\n  titulo = 'Detalle Sucursal';\r\n\r\n  constructor(\r\n    public  sucursalService: SucursalService,\r\n    public modalSucursalService: ModalSucursalService,\r\n   ) { }\r\n\r\n  cerrarModal() {\r\n    this.modalSucursalService.cerrarModal();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Sucursal } from '../interfaces/sucursal';\r\nimport { SucursalService } from '../services/sucursal.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-form-sucursales',\r\n  templateUrl: './form-sucursales.component.html'\r\n})\r\n\r\nexport class FormSucursalesComponent implements OnInit {\r\n\r\n  sucursal: Sucursal = new Sucursal(); \r\n  titulo = 'Crear Sucursal';\r\n  errores: string[];\r\n  constructor(\r\n    public  sucursalService: SucursalService,\r\n    public  router: Router,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public loadingService: LoadingService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.cargarSucursal();\r\n  }\r\n\r\n  cargarSucursal(): void {\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n            this.sucursalService.getSucursal(id).subscribe(\r\n            (sucursal) => {this.sucursal = sucursal, console.log(this.sucursal); });\r\n        }\r\n      }\r\n    );\r\n    this.loadingService.cerrarModal();\r\n  }\r\n\r\n  public create(): void {\r\n    this.loadingService.abrirModal();\r\n    this.sucursalService.create(this.sucursal).subscribe(\r\n      sucursal => {\r\n        this.router.navigate(['/sucursales']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Nuevo Sucursal`,\r\n          text: `${sucursal.nombre}`,\r\n          footer: `Creado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        console.error(err);\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n  update(): void {\r\n    this.loadingService.abrirModal();\r\n    this.sucursalService.update(this.sucursal)\r\n    .subscribe(\r\n      sucursal => {\r\n        this.router.navigate(['/sucursales']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Sucursal`,\r\n          text: `${sucursal.nombre}`,\r\n          footer: `Actualizada con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","export class Sucursal {\r\n    id: number;\r\n    nombre: string;\r\n    createAt: string;\r\n    direccion: string;\r\n    nit: string;\r\n    propietario: string;\r\n    sede: string;\r\n    regimen: string;\r\n    facebook: string;\r\n    instagram: string;\r\n    geoposicion: string;\r\n    telefono: string;\r\n    celular1: string;\r\n    celular2: string;\r\n  }\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Sucursal } from '../interfaces/sucursal';\r\nimport { SucursalService } from '../services/sucursal.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalSucursalService  } from '../services/modal-sucursal.service';\r\nimport { AuthService } from '../../users/services/auth.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-lista-sucursales',\r\n  templateUrl: './lista-sucursales.component.html'\r\n})\r\nexport class ListaSucursalesComponent implements OnInit {\r\n\r\n  sucursales: Sucursal[];\r\n  paginador: any;\r\n  sucursalSelecionado: Sucursal;\r\n  link = '/sucursales/page';\r\n  titulo: string;\r\n\r\n  constructor(\r\n    public  sucursalService: SucursalService,\r\n    public modalSucursalService: ModalSucursalService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService,\r\n    public funcionesService: FuncionesService,\r\n    ) {\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.titulo = this.funcionesService.setTitulo();\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.sucursalService.getSucursales(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('RegionesComponent: tap 3');\r\n        (response.content as Sucursal[]).forEach(sucursal => {\r\n          this.loadingService.cerrarModal();\r\n        //  console.log(region.nombre);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.sucursales = response.content as Sucursal[];\r\n      this.paginador = response;\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(sucursal: Sucursal): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar la Sucursal ${sucursal.nombre} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Sucursal!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.sucursalService.delete(sucursal.id).subscribe(\r\n            response => {\r\n              this.sucursales = this.sucursales.filter(reg => reg !== sucursal);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Barrio ${sucursal.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\nabrirModal(sucursal: Sucursal) {\r\n    this.sucursalSelecionado = sucursal;\r\n    this.modalSucursalService.abrirModal();\r\n}\r\n\r\n}\r\n\r\n\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalSucursalService {\r\n\r\n  modal = false;\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  public  _notificarUpload = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Sucursal } from '../interfaces/sucursal';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable,  throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class SucursalService {\r\n\r\npublic  urlEndPoint: string;\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/sucursales`;\r\n            }\r\n\r\n public getSucursales(page: number): Observable<any> {\r\n    return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n      tap((response: any) => {\r\n           // console.log('RegionService: tap 1');\r\n           (response.content as Sucursal[]).forEach(sucursal => {\r\n           //  console.log(region.nombre);\r\n           });\r\n          }),\r\n          map((response: any ) => {\r\n            (response.content as Sucursal[]).map( sucursal => {\r\n              sucursal.nombre = sucursal.nombre.toUpperCase();\r\n              return sucursal;\r\n          });\r\n            return response;\r\n          }),\r\n          tap(response => {\r\n            //  console.log('RegionService: tap2');\r\n            (response.content as Sucursal[]).forEach(sucursal => {\r\n            //  console.log(region.nombre);\r\n            });\r\n         }));\r\n\r\n  }\r\n\r\n  public getSucursalLista(): Observable<Sucursal[]> {\r\n    return this.http.get<Sucursal[]>(this.urlEndPoint);\r\n  }\r\n\r\n  create(sucursal: Sucursal): Observable<Sucursal> {\r\n    return this.http.post(this.urlEndPoint, sucursal).pipe(\r\n      map((response: any ) => response.sucursal as Sucursal ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  getSucursal(id): Observable<Sucursal> {\r\n    return this.http.get<Sucursal>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/sucursales']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        this.router.navigate(['/sucursales']);\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(sucursal: Sucursal): Observable<any> {\r\n    return this.http.put<any>(\r\n      `${this.urlEndPoint}/${sucursal.id}`,\r\n      sucursal).pipe(\r\n        map((response: any ) => response.sucursal as Sucursal ),\r\n        catchError (e => {\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id: number): Observable<Sucursal> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.sucursal as Sucursal ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { User } from '../interfaces/user';\r\nimport { UserService  } from '../services/user.service';\r\nimport { ModalUserService  } from '../services/modal-user.service';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport Swal from 'sweetalert2';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-detalle-user',\r\n  templateUrl: './detalle-user.component.html',\r\n  styleUrls: ['../../generales/css/modal.css']\r\n})\r\nexport class DetalleUserComponent {\r\n\r\n  @Input() user: User;\r\n  titulo = 'Detalle Usuarios';\r\n  public fotoSelecionada: File;\r\n  progreso = 0;\r\n  rutaFoto = 'Selecionar Foto';\r\n\r\n  constructor(\r\n    public  userService: UserService,\r\n    public authService: AuthService,\r\n    public modalUserService: ModalUserService\r\n   ) { }\r\n\r\n  seleccionarFoto(event) {\r\n    this.fotoSelecionada = event.target.files[0];\r\n    this.progreso = 0;\r\n    if (this.fotoSelecionada.type.indexOf('image') < 0) {\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Subir Selecionar Imagen',\r\n        text: `El archivo debe ser del tipo 'Imagen'`,\r\n        footer: 'Intente de nuevo',\r\n        });\r\n      this.fotoSelecionada = null;\r\n    } else {\r\n      this.rutaFoto = this.fotoSelecionada.name;\r\n    }\r\n  }\r\n\r\n  subirFoto() {\r\n    if (!this.fotoSelecionada) {\r\n      this.rutaFoto = 'Selecionar Foto';\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Subir Imagen',\r\n        text: `No ha selecionado una imagen`,\r\n        footer: 'Intente de nuevo',\r\n        });\r\n\r\n    } else {\r\n    this.userService.subirFoto(this.fotoSelecionada, this.user.id)\r\n    .subscribe( event => {\r\n      if (event.type === HttpEventType.UploadProgress) {\r\n            this.progreso = Math.round((event.loaded / event.total) * 100);\r\n      } else if (event.type === HttpEventType.Response) {\r\n          const response: any = event.body;\r\n          this.user = response.user as User;\r\n          this.modalUserService.notificarUpload.emit(this.user);\r\n          this.rutaFoto = 'Selecionar Foto';\r\n          this.fotoSelecionada = null;\r\n          Swal.fire({\r\n            type: 'success',\r\n            title: 'La Foto se ha subido con Exito!',\r\n            text: response.mensaje,\r\n            footer: '',\r\n            });\r\n          // pendiente meter un time out\r\n          this.progreso = 0;\r\n      }\r\n    });\r\n  }\r\n  }\r\n  cerrarModal() {\r\n    this.modalUserService.cerrarModal();\r\n    this.fotoSelecionada = null;\r\n    this.progreso = 0;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../interfaces/user';\r\nimport { UserService } from '../services/user.service';\r\nimport { Region } from '../../regiones/interfaces/region';\r\nimport { RegionService } from '../../regiones/services/region.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\nimport { FormControl,\r\n  FormGroupDirective,\r\n  NgForm, Validators,\r\n  FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-form-user',\r\n  templateUrl: './form-user.component.html'\r\n})\r\nexport class FormUserComponent implements OnInit {\r\n\r\n  minDate = new Date(1930, 1, 1);\r\n  maxDate = new Date();\r\n  user: User = new User();\r\n  regiones: Region[];\r\n  titulo = 'Crear Usuarios';\r\n  errores: string[];\r\n  formularioCreado: FormGroup;\r\n\r\n  constructor(\r\n    public  userService: UserService,\r\n    public  router: Router,\r\n    public  regionService: RegionService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public loadingService: LoadingService,\r\n    public formBuilder: FormBuilder\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.abrirModal();\r\n    this.crearFormulario();\r\n    this.cargarUser();\r\n  }\r\n\r\n  cargarUser(): void {\r\n    this.activatedRoute.params.subscribe(\r\n      params => {\r\n        const id = params.id;\r\n        if (id) {\r\n          this.userService.getUser(id).subscribe(\r\n            user =>  {this.user = user,\r\n              this.asignarDatosFormulario();\r\n          });\r\n        }\r\n      });\r\n    this.regionService.getRegionLista().subscribe(regiones => this.regiones = regiones);\r\n    this.loadingService.cerrarModal();\r\n  }\r\n\r\n  public create(): void {\r\n    this.loadingService.abrirModal();\r\n    this.asignarDatosParaGuardar();\r\n    this.userService.create(this.user).subscribe(\r\n      user => {\r\n        this.router.navigate(['/users']),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Nuevo Usuario`,\r\n          text: `${user.nombre}`,\r\n          footer: `Creado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n  update(): void {\r\n    this.loadingService.abrirModal();\r\n    this.asignarDatosParaGuardar();\r\n    this.userService.update(this.user)\r\n    .subscribe(\r\n      user => {\r\n        this.router.navigate(['/users']),\r\n        // console.log(this.user),\r\n        Swal.fire({\r\n          type: 'success',\r\n          title: `Usuario`,\r\n          text: `${user.nombre}`,\r\n          footer: `Actualizado con Exito!`\r\n        });\r\n        this.loadingService.cerrarModal();\r\n      },\r\n      err => {\r\n        this.errores = err.error.errors as string[];\r\n        this.loadingService.cerrarModal();\r\n      }\r\n    );\r\n  }\r\n\r\n  public compararRegion(o1: Region, o2: Region): boolean {\r\n    if (o1 === undefined && o2 === undefined) {\r\n      return true;\r\n    }\r\n    return o1 === null || o2 === null || o1 === undefined || o2 === undefined ? false : o1.id === o2.id;\r\n  }\r\n\r\n  // tratamiento a formulario\r\n\r\n  crearFormulario() {\r\n    this.formularioCreado = this.formBuilder.group({\r\n      nombre: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(20)\r\n      ])],\r\n      apellido: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(20)\r\n      ])],\r\n      documento: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.maxLength(10)\r\n      ])],\r\n      email: ['', Validators.compose([\r\n        Validators.required, Validators.email\r\n      ])],\r\n      celular1: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10)\r\n      ])],\r\n      celular2: ['', Validators.compose([\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10)\r\n      ])],\r\n      telefono: ['', Validators.compose([\r\n        Validators.minLength(7),\r\n        Validators.maxLength(7)\r\n      ])],\r\n      direccion: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(50)\r\n      ])],\r\n      region: ['', Validators.required],\r\n      fecha: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  asignarDatosFormulario() {\r\n    this.formularioCreado.setValue({\r\n      nombre: this.user.nombre,\r\n      apellido: this.user.apellido,\r\n      documento: this.user.documento,\r\n      email: this.user.email,\r\n      celular1: this.user.celular1,\r\n      celular2: this.user.celular2,\r\n      telefono: this.user.telefono,\r\n      direccion: this.user.direccion,\r\n      region: this.user.region,\r\n      fecha: this.user.fecha,\r\n    });\r\n  }\r\n\r\n  asignarDatosParaGuardar() {\r\n    this.user.nombre = this.formularioCreado.value.nombre,\r\n    this.user.apellido = this.formularioCreado.value.apellido,\r\n    this.user.documento = this.formularioCreado.value.documento ,\r\n    this.user.email = this.formularioCreado.value.email,\r\n    this.user.celular1 = this.formularioCreado.value.celular1,\r\n    this.user.direccion = this.formularioCreado.value.direccion,\r\n    this.user.region = this.formularioCreado.value.region,\r\n    this.user.fecha = this.formularioCreado.value.fecha;\r\n    if ( this.formularioCreado.value.celular2 !== '' ) {\r\n      this.user.celular2 = this.formularioCreado.value.celular2;\r\n    }\r\n    if ( this.formularioCreado.value.telefono !== '' ) {\r\n      this.user.telefono = this.formularioCreado.value.telefono;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate   {\r\n\r\n  constructor(public authService: AuthService,\r\n              public  router: Router) {\r\n\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n          if (this.authService.isAuthenticated()) {\r\n            if (this.isTokenExpirado()) {\r\n              this.authService.logout();\r\n              this.router.navigate(['/login']);\r\n              return false;\r\n            }\r\n            return true;\r\n          }\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n  }\r\n\r\n  isTokenExpirado(): boolean {\r\n    const token = this.authService.token;\r\n    const payload = this.authService.obtenerDatosToken(token);\r\n    const now = new Date().getTime() / 1000;\r\n    if (payload.exp < now) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate,  Router,  ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(public authService: AuthService,\r\n              public  router: Router) {\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (!this.authService.isAuthenticated()) {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n      // tslint:disable-next-line: no-string-literal\r\n      const role = next.data['role'] as string;\r\n      if (this.authService.hasRole(role)) {\r\n        return true;\r\n      }\r\n      Swal.fire({\r\n        type: 'warning',\r\n        title: 'Acceso Denegado',\r\n        text: `Hola ${this.authService.usuario.username}`,\r\n        footer: 'No tienes acceso a este recurso',\r\n        });\r\n      this.router.navigate(['/clientes']);\r\n      return true;\r\n  }\r\n }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport Swal from 'sweetalert2';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(public authService: AuthService,\r\n              public  router: Router) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n\r\n\r\n    return next.handle(req).pipe(\r\n      catchError(e => {\r\n        if (e.status === 401) {\r\n\r\n          if (this.authService.isAuthenticated()) {\r\n            this.authService.logout();\r\n          }\r\n          this.router.navigate(['/login']);\r\n        }\r\n\r\n        if (e.status === 403) {\r\n          Swal.fire({\r\n            type: 'warning',\r\n            title: 'Acceso Denegado',\r\n            text: `Hola ${this.authService.usuario.username}`,\r\n            footer: 'No tienes acceso a este recurso',\r\n            });\r\n          this.router.navigate(['/clientes']);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler):\r\n    Observable<HttpEvent<any>> {\r\n    const token = this.authService.token;\r\n\r\n    if (token != null) {\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', 'Bearer ' + token)\r\n      });\r\n\r\n      return next.handle(authReq);\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Region } from '../../regiones/interfaces/region';\r\nexport class User {\r\n  id: number;\r\n  fecha: string;\r\n  documento: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  username: string;\r\n  password: string;\r\n  createAt: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  celular1: string;\r\n  celular2: string;\r\n  email: string;\r\n  foto: string;\r\n  region: Region;\r\n  roles: string [] = [];\r\n\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Sucursal } from './../../sucursales/interfaces/sucursal';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from '../interfaces/user';\r\nimport { UserService } from '../services/user.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalUserService  } from '../services/modal-user.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html'\r\n})\r\n\r\nexport class UsersComponent implements OnInit {\r\n  users: User[];\r\n  paginador: any;\r\n  userSelecionado: User;\r\n  tipoUsuario: string;\r\n  link = '/users/page';\r\n  titulo: string;\r\n\r\n  constructor(\r\n    public  userService: UserService,\r\n    public modalUserService: ModalUserService,\r\n    public  activatedRoute: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public loadingService: LoadingService,\r\n    public funcionesService: FuncionesService,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.titulo = this.funcionesService.setTitulo();\r\n    this.loadingService.abrirModal();\r\n    this.activatedRoute.paramMap.subscribe( params => {\r\n      let page: number = +params.get('page');\r\n      if (!page) {\r\n          page = 0;\r\n      }\r\n      this.userService.getUsers(page)\r\n    .pipe(\r\n      tap( response => {\r\n        // console.log('UsersComponent: tap 3');\r\n        (response.content as User[]).forEach(user => {\r\n          this.loadingService.cerrarModal();\r\n        //  console.log(user.roles.length);\r\n        });\r\n      })\r\n    ).subscribe(response => {\r\n      this.users = response.content as User[];\r\n      this.paginador = response;\r\n    });\r\n  });\r\n\r\n    this.modalUserService.notificarUpload.subscribe(user => {\r\n      this.users = this.users.map( userOriginal => {\r\n        if (user.id === userOriginal.id) {\r\n          userOriginal.foto = user.foto;\r\n        }\r\n        return userOriginal;\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(user: User): void {\r\n    Swal.fire({\r\n      title: '¿ Estas Seguro ?',\r\n      text: `¿Seguro De Eliminar Al Usuario ${user.nombre} ${user.apellido} ?`,\r\n      type: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Usuario!'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n          this.userService.delete(user.id).subscribe(\r\n            response => {\r\n              this.users = this.users.filter(cli => cli !== user);\r\n              Swal.fire(\r\n                'Borrado!',\r\n                `Usuario ${user.nombre} eliminado con Exito.`,\r\n                'success'\r\n              );\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  abrirModal(user: User) {\r\n    this.userSelecionado = user;\r\n    this.modalUserService.abrirModal();\r\n  }\r\n\r\n  tipoUsuarios(num: number): string {\r\n    if (num === 1) {\r\n      this.tipoUsuario = 'USUARIO';\r\n    } else {\r\n      this.tipoUsuario = 'ADMINISTRADOR';\r\n    }\r\n    return this.tipoUsuario;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../interfaces/user';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { LoadingService } from '../../generales/services/loading.service';\r\nimport { SucursalService } from '../../sucursales/services/sucursal.service';\r\nimport { Sucursal } from '../../sucursales/interfaces/sucursal';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  usuario: User;\r\n  public  rol = 'USUARIO';\r\n  sucursales: Sucursal[];\r\n\r\n  opcionSeleccionado  = '';\r\n  verSeleccion = '';\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public  router: Router,\r\n    public loadingService: LoadingService,\r\n    public  sucursalService: SucursalService,\r\n  ) {\r\n    this.usuario = new User();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sucursalService.getSucursalLista().subscribe(sucursales => this.sucursales = sucursales);\r\n    if (this.authService.isAuthenticated()) {\r\n      Swal.fire({\r\n        type: 'info',\r\n        title: '¡Informacion!',\r\n        text: `Hola ${this.authService.usuario.username}`,\r\n        footer: 'ya estás autenticado!',\r\n        });\r\n      this.loadingService.cerrarModal();\r\n      this.router.navigate(['/clientes']);\r\n    }\r\n  }\r\n\r\n  capturar() {\r\n    // Pasamos el valor seleccionado a la variable verSeleccion\r\n    this.verSeleccion = this.opcionSeleccionado;\r\n}\r\n\r\n  login(): void {\r\n    if (this.usuario.username === null || this.usuario.password === null\r\n          || this.usuario.username === undefined || this.usuario.password === undefined ) {\r\n            Swal.fire({\r\n              type: 'error',\r\n              title: 'Error al Logear',\r\n              text: 'El Usuario o el Password vacios',\r\n              footer: 'Intente de nuevo',\r\n              });\r\n            return;\r\n    } else if (this.verSeleccion === null || this.verSeleccion === '' || this.verSeleccion === undefined ) {\r\n      Swal.fire({\r\n        type: 'error',\r\n        title: 'Error al Logear',\r\n        text: 'Debe Selecionar Sucursal',\r\n        footer: 'Intente de nuevo',\r\n        });\r\n      return;\r\n\r\n    }\r\n    sessionStorage.setItem('sucursal', JSON.stringify(this.verSeleccion));\r\n    this.loadingService.abrirModal();\r\n    this.authService.login(this.usuario).subscribe(response => {\r\n      // console.log(response);\r\n      // const payload = JSON.parse(atob(response.access_token.split('.')[1]));\r\n      this.authService.guardarUsuario(response.access_token);\r\n      this.authService.guardarToken(response.access_token);\r\n      const usuario = this.authService.usuario;\r\n      if (this.authService.hasRole('ROLE_ADMIN')) {\r\n          this.rol = 'ADMINISTRADOR';\r\n      }\r\n      this.router.navigate(['/clientes']);\r\n      this.loadingService.cerrarModal();\r\n      Swal.fire({\r\n        type: 'success',\r\n        title: 'Bienvenido',\r\n        text: `hola ${usuario.username}, has iniciado sesion con exito!`,\r\n        footer: `Rol  ---${this.rol}--- `,\r\n        });\r\n    }, err => {\r\n      if (err.status === 400) {\r\n        this.loadingService.cerrarModal();\r\n        Swal.fire({\r\n          type: 'error',\r\n          title: 'Error al Logear',\r\n          text: 'El Usuario o el Password Incorrectos',\r\n          footer: 'Intente de nuevo',\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { User } from '../interfaces/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  public  _usuario: User;\r\n  // tslint:disable-next-line: variable-name\r\n  public  _token: string;\r\n\r\n  constructor(\r\n              public  http: HttpClient,\r\n              public funcionesService: FuncionesService\r\n              ) { }\r\n\r\n  public get usuario(): User {\r\n    if (this._usuario != null) {\r\n        return this._usuario;\r\n    } else if (this._usuario == null && sessionStorage.getItem('usuario') != null) {\r\n      this._usuario = JSON.parse(sessionStorage.getItem('usuario')) as User;\r\n      return this._usuario;\r\n    }\r\n    return new User();\r\n  }\r\n\r\n  public get token(): string {\r\n    if (this._token != null) {\r\n      return this._token;\r\n    } else if (this._token == null && sessionStorage.getItem('token') != null) {\r\n      this._token = sessionStorage.getItem('token');\r\n      return this._token;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  login(usuario: User): Observable<any> {\r\n    const urlEndpoint = `${this.funcionesService.setUrlBase()}oauth/token`;\r\n\r\n    const credenciales = btoa('angularapp' + ':' + '12345');\r\n    console.log(credenciales);\r\n    const httpHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      // tslint:disable-next-line: object-literal-key-quotes\r\n      'Authorization': 'Basic ' + credenciales\r\n    });\r\n\r\n    const params = new URLSearchParams();\r\n    params.set('grant_type', 'password');\r\n    params.set('username', usuario.username);\r\n    params.set('password', usuario.password);\r\n    // console.log(params.toString());\r\n    return this.http.post<any>(urlEndpoint, params.toString(), { headers: httpHeaders });\r\n  }\r\n\r\n  guardarUsuario(accessToken: string): void {\r\n    const payload = this.obtenerDatosToken(accessToken);\r\n    this._usuario = new User();\r\n    this._usuario.id = payload.id;\r\n    this._usuario.nombre = payload.nombre;\r\n    this._usuario.apellido = payload.apellido;\r\n    this._usuario.email = payload.email;\r\n    this._usuario.username = payload.user_name;\r\n    this._usuario.fecha = payload.fecha;\r\n    this._usuario.createAt = payload.createAt;\r\n    this._usuario.roles = payload.authorities;\r\n    sessionStorage.setItem('usuario', JSON.stringify(this._usuario));\r\n  }\r\n\r\n  guardarToken(accessToken: string): void {\r\n    this._token = accessToken;\r\n    sessionStorage.setItem('token', accessToken);\r\n  }\r\n\r\n  obtenerDatosToken(accessToken: string): any {\r\n    if (accessToken != null) {\r\n      return JSON.parse(atob(accessToken.split('.')[1]));\r\n    }\r\n    return null;\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const payload = this.obtenerDatosToken(this.token);\r\n    if (payload != null && payload.user_name && payload.user_name.length > 0) {\r\n\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getUsuarioLogeado() {\r\n   return sessionStorage.getItem('usuario');\r\n  }\r\n\r\n  hasRole(role: string): boolean {\r\n    if (this.usuario.roles.includes(role)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  logout(): void {\r\n    this._token = null;\r\n    this._usuario = null;\r\n    sessionStorage.clear();\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('usuario');\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalUserService {\r\n  modal = false;\r\n  // tslint:disable-next-line: variable-name\r\n  _notificarUpload = new EventEmitter<any>();\r\n  constructor() { }\r\n  get notificarUpload(): EventEmitter<any> {\r\n    return this._notificarUpload;\r\n  }\r\n\r\n  abrirModal() {\r\n    this.modal = true;\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.modal = false;\r\n  }\r\n}\r\n","import { FuncionesService } from './../../generales/services/funciones.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../interfaces/user';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {  catchError, map, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\npublic  urlEndPoint: string;\r\n\r\nconstructor(public  http: HttpClient,\r\n            public  router: Router,\r\n            public funcionesService: FuncionesService\r\n            ) {\r\n              this.urlEndPoint = `${this.funcionesService.setUrlBase()}api/users`;\r\n            }\r\n\r\n    public getUsers(page: number): Observable<any> {\r\n        return this.http.get(this.urlEndPoint + '/page/' + page).pipe(\r\n          tap((response: any) => {\r\n          // console.log('UserService: tap 1');\r\n          (response.content as User[]).forEach(user => {\r\n          // console.log(user.nombre);\r\n          });\r\n          }),\r\n          map((response: any ) => {\r\n             (response.content as User[]).map( user => {\r\n              user.nombre = user.nombre.toUpperCase();\r\n              return user;\r\n            });\r\n             return response;\r\n        }),\r\n        tap(response => {\r\n           // console.log('UserService: tap2');\r\n           (response.content as User[]).forEach(user => {\r\n          // console.log(user.nombre);\r\n        });\r\n           }));\r\n    }\r\n\r\n  create(user: User): Observable<User> {\r\n   return this.http.post<User>(this.urlEndPoint, user).pipe(\r\n      map((response: any ) => response.user as User ),\r\n      catchError (e => {\r\n        if (e.status === 400) {\r\n          return throwError(e);\r\n        }\r\n        if (e.error.mensaje) {\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n  getUser(id): Observable<User> {\r\n    return this.http.get<User>(`${this.urlEndPoint}/${id}`).pipe(\r\n      catchError (e => {\r\n        if (e.status !== 401 && e.error.mensaje) {\r\n          this.router.navigate(['/users']);\r\n          console.error(e.error.mensaje);\r\n        }\r\n        return throwError(e);\r\n      })\r\n    );\r\n  }\r\n  update(user: User): Observable<User> {\r\n    return this.http.put(\r\n      `${this.urlEndPoint}/${user.id}`,\r\n      user).pipe(\r\n        map((response: any ) => response.user as User),\r\n        catchError (e => {\r\n\r\n          if (e.status === 400) {\r\n            return throwError(e);\r\n          }\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n  delete(id: number): Observable<User> {\r\n    return this.http.delete(\r\n      `${this.urlEndPoint}/${id}`).pipe(\r\n        map((response: any ) => response.user as User ),\r\n        catchError (e => {\r\n          if (e.error.mensaje) {\r\n            console.error(e.error.mensaje);\r\n          }\r\n          return throwError(e);\r\n        })\r\n      );\r\n  }\r\n\r\n  subirFoto(archivo: File, id): Observable<HttpEvent<{}>> {\r\n    const formData = new FormData();\r\n    formData.append('archivo', archivo);\r\n    formData.append('id', id);\r\n    const req = new HttpRequest('POST',  `${this.urlEndPoint}/uploadimguser`, formData, {\r\n      reportProgress: true\r\n    });\r\n    return this.http.request(req);\r\n  }\r\n\r\n  //  public getRolesLista(): Observable<Role[]> {\r\n  //    return this.http.get<Role[]>(`${this.urlEndPoint}/roles`);\r\n  //  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}